{"id":"9889317a24ce6ef3deed9e89237fee61","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IAny2EVMMessageReceiver} from \"../interfaces/IAny2EVMMessageReceiver.sol\";\n\nimport {Client} from \"../libraries/Client.sol\";\n\nimport {IERC165} from \"../../vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\";\n\n/// @title CCIPReceiver - Base contract for CCIP applications that can receive messages.\nabstract contract CCIPReceiver is IAny2EVMMessageReceiver, IERC165 {\n  address internal immutable i_router;\n\n  constructor(address router) {\n    if (router == address(0)) revert InvalidRouter(address(0));\n    i_router = router;\n  }\n\n  /// @notice IERC165 supports an interfaceId\n  /// @param interfaceId The interfaceId to check\n  /// @return true if the interfaceId is supported\n  function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\n    return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId;\n  }\n\n  /// @inheritdoc IAny2EVMMessageReceiver\n  function ccipReceive(Client.Any2EVMMessage calldata message) external virtual override onlyRouter {\n    _ccipReceive(message);\n  }\n\n  /// @notice Override this function in your implementation.\n  /// @param message Any2EVMMessage\n  function _ccipReceive(Client.Any2EVMMessage memory message) internal virtual;\n\n  /////////////////////////////////////////////////////////////////////\n  // Plumbing\n  /////////////////////////////////////////////////////////////////////\n\n  /// @notice Return the current router\n  /// @return i_router address\n  function getRouter() public view returns (address) {\n    return address(i_router);\n  }\n\n  error InvalidRouter(address router);\n\n  /// @dev only calls from the set router are accepted.\n  modifier onlyRouter() {\n    if (msg.sender != address(i_router)) revert InvalidRouter(msg.sender);\n    _;\n  }\n}\n"},"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Client} from \"../libraries/Client.sol\";\n\n/// @notice Application contracts that intend to receive messages from\n/// the router should implement this interface.\ninterface IAny2EVMMessageReceiver {\n  /// @notice Called by the Router to deliver a message.\n  /// If this reverts, any token transfers also revert. The message\n  /// will move to a FAILED state and become available for manual execution.\n  /// @param message CCIP Message\n  /// @dev Note ensure you check the msg.sender is the OffRampRouter\n  function ccipReceive(Client.Any2EVMMessage calldata message) external;\n}\n"},"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Client} from \"../libraries/Client.sol\";\n\ninterface IRouterClient {\n  error UnsupportedDestinationChain(uint64 destChainSelector);\n  error InsufficientFeeTokenAmount();\n  error InvalidMsgValue();\n\n  /// @notice Checks if the given chain ID is supported for sending/receiving.\n  /// @param chainSelector The chain to check.\n  /// @return supported is true if it is supported, false if not.\n  function isChainSupported(uint64 chainSelector) external view returns (bool supported);\n\n  /// @notice Gets a list of all supported tokens which can be sent or received\n  /// to/from a given chain id.\n  /// @param chainSelector The chainSelector.\n  /// @return tokens The addresses of all tokens that are supported.\n  function getSupportedTokens(uint64 chainSelector) external view returns (address[] memory tokens);\n\n  /// @param destinationChainSelector The destination chainSelector\n  /// @param message The cross-chain CCIP message including data and/or tokens\n  /// @return fee returns guaranteed execution fee for the specified message\n  /// delivery to destination chain\n  /// @dev returns 0 fee on invalid message.\n  function getFee(\n    uint64 destinationChainSelector,\n    Client.EVM2AnyMessage memory message\n  ) external view returns (uint256 fee);\n\n  /// @notice Request a message to be sent to the destination chain\n  /// @param destinationChainSelector The destination chain ID\n  /// @param message The cross-chain CCIP message including data and/or tokens\n  /// @return messageId The message ID\n  /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\n  /// the overpayment with no refund.\n  function ccipSend(\n    uint64 destinationChainSelector,\n    Client.EVM2AnyMessage calldata message\n  ) external payable returns (bytes32);\n}\n"},"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// End consumer library.\nlibrary Client {\n  struct EVMTokenAmount {\n    address token; // token address on the local chain.\n    uint256 amount; // Amount of tokens.\n  }\n\n  struct Any2EVMMessage {\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\n    uint64 sourceChainSelector; // Source chain selector.\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\n    bytes data; // payload sent in original message.\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\n  }\n\n  // If extraArgs is empty bytes, the default is 200k gas limit and strict = false.\n  struct EVM2AnyMessage {\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\n    bytes data; // Data payload\n    EVMTokenAmount[] tokenAmounts; // Token transfers\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\n  }\n\n  // extraArgs will evolve to support new features\n  // bytes4(keccak256(\"CCIP EVMExtraArgsV1\"));\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\n  struct EVMExtraArgsV1 {\n    uint256 gasLimit; // ATTENTION!!! MAX GAS LIMIT 4M FOR BETA TESTING\n    bool strict; // See strict sequencing details below.\n  }\n\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\n  }\n}\n"},"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `to`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address to, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `from` to `to` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(\n    address from,\n    address to,\n    uint256 amount\n  ) external returns (bool);\n}"},"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n  /**\n    * @dev Returns true if this contract implements the interface defined by\n    * `interfaceId`. See the corresponding\n    * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n    * to learn more about how these ids are created.\n    *\n    * This function call must use less than 30 000 gas.\n    */\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/Horizon.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.9 <=0.8.20;\r\n\r\nimport {IRouterClient} from \"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\";\r\nimport {CCIPReceiver} from \"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\";\r\nimport {Client} from \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\";\r\nimport {HorizonS} from \"./HorizonS.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"./HorizonStaff.sol\";\r\nimport \"./HorizonVRF.sol\";\r\nimport \"./HorizonReceipt.sol\";\r\n\r\nerror SourceChainNotWhitelisted(uint64 sourceChainSelector);\r\nerror FailedToWithdrawEth(address owner, address target, uint256 value);\r\nerror SenderNotWhitelisted(address sender);\r\n\r\ncontract Horizon is CCIPReceiver{\r\n\r\n    /* CCIP */\r\n    bytes32 private lastReceivedMessageId;\r\n    bytes private lastReceivedText;\r\n    mapping(uint64 => bool) public whitelistedSourceChains;\r\n    mapping(address => bool) public whitelistedSenders;\r\n\r\n    uint titleId = 0;\r\n    uint amountToPay;\r\n    uint paymentDelay;\r\n    address fujiReceiver;\r\n    address owner;\r\n\r\n    event NewTitleCreated(uint _titleId, uint _scheduleId, uint _monthlyValue, uint _titleValue);\r\n    event TitleStatusUpdated(TitleStatus status);\r\n    event NewTitleSold(uint _contractId, address _owner);\r\n    event AmountToPay(uint amountWithInterests);\r\n    event InstallmentPaid(uint _idTitle, uint _contractId, uint _installmentsPaid);\r\n    event EnsuranceValueNeededUpdate(uint _idTitle, uint _contractId, uint _valueOfEnsurance);\r\n    event EnsuranceUpdated(address _temporaryEnsurance);\r\n    event NextDraw(uint _nextDraw);\r\n    event VRFAnswer(bool fulfilled, uint256[] randomWords, uint randomValue);\r\n    event MonthlyWinnerSelected(uint _idTitle, uint _drawNumber, uint _randomValue, uint _selectedContractId, address _winner);\r\n    event ColateralTitleAdded(uint _idTitle, uint _contractId, uint _drawNumber, uint _idOfColateralTitle, uint _idOfColateralContract);\r\n    event CreatingPermission(uint _idTitle, uint _contractId, uint _drawSelected, address _fujiReceiver);\r\n    event MonthlyWinnerPaid(uint _idTitle, uint _drawNumber, address _winner, uint _titleValue);\r\n    event MyTitleStatusUpdated(MyTitleWithdraw myTitleStatus);\r\n    event PaymentLateNumber(uint _i);\r\n    event AmountLateWithInterest(uint totalAmountLate);\r\n    event PaymentIsLate(uint lateInstallments);\r\n    event ThereAreSomePendencies(uint _installmentsPaid, uint _colateralTitleId, address _colateralReceiptAddress, address _nftAddress, MyTitleWithdraw myTitleStatus);\r\n    event LastInstallmentPaid(uint _installmentsPaid);\r\n    event NewInvestmentCreated(uint _investmentValue, address _protocolAddress);\r\n    event ThisTitleHasBeenCanceled(uint _titlesAvailableForNextDraw);\r\n    event MessageReceived( bytes32 indexed messageId, uint64 indexed sourceChainSelector, address sender, string text);\r\n\r\n    enum TitleStatus{\r\n        Canceled, //0\r\n        Closed, //1\r\n        Finalized, //2\r\n        Open, //3\r\n        Waiting //4\r\n    }\r\n\r\n    TitleStatus status;\r\n\r\n    enum MyTitleWithdraw{\r\n        Canceled, //0\r\n        Late, //1\r\n        OnSchedule, //2\r\n        Withdraw,\r\n        Finalized //3\r\n    }\r\n\r\n    MyTitleWithdraw myTitleStatus;\r\n\r\n    struct Titles {\r\n        uint openSellingDate;\r\n        uint closeSellingDate;\r\n        uint paymentSchedule;\r\n        uint nextDrawNumber;\r\n        uint titleValue;\r\n        uint installments;\r\n        uint monthlyInvestiment;\r\n        uint protocolFee;\r\n        uint numberOfTitlesSold;\r\n        uint totalValueReceived;\r\n        uint totalValuePaid;\r\n        uint titleCanceled;\r\n        TitleStatus status;\r\n    }\r\n\r\n    struct TitlesSold {\r\n        uint contractId;\r\n        uint titleValue;\r\n        uint installments;\r\n        uint monthlyValue;\r\n        uint periodLocked;\r\n        address titleOwner;\r\n        uint installmentsPaid;\r\n        uint drawSelected;\r\n        uint colateralId;\r\n        address colateralTitleAddress;\r\n        address colateralRWAAddress;\r\n        uint valueOfEnsuranceNeeded;\r\n        MyTitleWithdraw myTitleStatus;\r\n        bool paid;\r\n    }\r\n\r\n    struct TitleRecord {\r\n        uint contractId;\r\n        uint256 installmentNumber;\r\n        uint paymentDate;\r\n        address payerAddress;\r\n        address user;\r\n        uint amount;\r\n        uint paymentDelay;\r\n        bool paid;\r\n        uint installmentsPaid;\r\n    }\r\n\r\n    struct Draw {\r\n        uint idTitle;\r\n        uint drawNumber;\r\n        uint drawDate;\r\n        uint totalParticipants;\r\n        uint requestId;\r\n        uint randomNumberVRF;\r\n        uint selectedContractID;\r\n        address winner;\r\n    }\r\n\r\n    struct ColateralTitles {\r\n        address colateralOwner;\r\n        uint titleIdOfColateral;\r\n        uint contractIdOfColateral;\r\n    }\r\n\r\n    struct FujiPermissions{\r\n        uint idTitle;\r\n        uint contractId;\r\n        uint drawNumber;\r\n    }\r\n    \r\n    IERC20 stablecoin;\r\n    IERC721 nftToken;\r\n\r\n    HorizonStaff staff = HorizonStaff(0xCd24c9696f2aA4bB15170B263E72642b5600B479); //FALTA ENDEREÇO\r\n    HorizonVRF vrfv2consumer = HorizonVRF(0xE7d98f63EFCDD443549b64205B1A1d22Af8c1007); //FALTA ENDEREÇO\r\n    HorizonReceipt receipt = HorizonReceipt(0x0203fc68dED882C7B669b4711C42fb7A27E119a9); //FALTA ENDEREÇO\r\n    HorizonS sender = HorizonS(payable(0xC3e7E776227D34874f6082f2F8476DD150DEC2de)); //FALTA ENDEREÇO\r\n\r\n    mapping(uint titleId => Titles) public allTitles; //ok\r\n    mapping(uint titleId => mapping(uint contractId => TitlesSold)) public titleSoldInfos; //OK\r\n    mapping(uint titleId => mapping(uint drawNumber => Draw)) public drawInfos;\r\n    mapping(uint titleId => mapping(uint drawNumber => mapping(uint paymentOrder => TitleRecord))) public selectorVRF;\r\n    mapping(bytes32 permissionHash => FujiPermissions) permissionInfo;\r\n    mapping(uint titleId => mapping(uint contractId => ColateralTitles)) public colateralInfos; //OK\r\n\r\n    constructor(address _router) CCIPReceiver(_router){ //0x70499c328e1e2a3c41108bd3730f6670a44595d1\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function createTitle(uint _opening, //OK\r\n                         uint _closing,\r\n                         uint _participants,\r\n                         uint _value) public {\r\n        require(_opening != 0, \"Must Select a date to start to sell the titles!\");\r\n        require(_closing > _opening, \"Must Select a date to stop to sell the titles!\");\r\n        require(_participants != 0, \"Must set the number of total participants!\");\r\n\r\n        titleId++;\r\n\r\n        uint scheduleId = staff.createSchedule( titleId, _participants, _closing);\r\n\r\n        Titles memory newTitle = Titles ({\r\n        openSellingDate:_opening,\r\n        closeSellingDate: _closing,\r\n        paymentSchedule: scheduleId,\r\n        nextDrawNumber: 1,\r\n        titleValue: _value * 10 ** 18,\r\n        installments: _participants,\r\n        monthlyInvestiment: (_value * 10 ** 18) / (_participants),\r\n        protocolFee: (((_value * 10 ** 18) / _participants) * 5) / 100,\r\n        numberOfTitlesSold: 0,\r\n        totalValueReceived: 0,\r\n        totalValuePaid: 0,\r\n        titleCanceled: 0,\r\n        status: TitleStatus.Waiting\r\n        });\r\n\r\n        allTitles[titleId] = newTitle;\r\n\r\n        uint monthlyValue = (allTitles[titleId].monthlyInvestiment + (allTitles[titleId].protocolFee));\r\n\r\n        emit NewTitleCreated(titleId, scheduleId, monthlyValue, allTitles[titleId].titleValue);\r\n    }\r\n\r\n    function updateTitleStatus(uint _titleId) public { //OK\r\n        Titles storage title = allTitles[_titleId];\r\n\r\n        require(title.status == TitleStatus.Waiting || title.status == TitleStatus.Open || title.status == TitleStatus.Closed, \"This title already ended\");\r\n\r\n        if(block.timestamp > title.openSellingDate && title.status == TitleStatus.Waiting){\r\n            title.status = TitleStatus.Open;\r\n\r\n            emit TitleStatusUpdated(title.status);\r\n        }else{\r\n            if(block.timestamp > title.closeSellingDate && title.status == TitleStatus.Open){\r\n                title.status = TitleStatus.Closed;\r\n\r\n            }else{\r\n                uint nextDrawParticipants = staff.returnDrawParticipants(_titleId, title.nextDrawNumber);\r\n\r\n                if( title.status == TitleStatus.Closed && title.nextDrawNumber > title.installments ||\r\n                    title.status == TitleStatus.Closed && title.nextDrawNumber + (title.titleCanceled) > title.installments && nextDrawParticipants == 0){\r\n                    title.status = TitleStatus.Finalized;\r\n\r\n                    emit TitleStatusUpdated(title.status);\r\n                }else{\r\n                    if(title.numberOfTitlesSold == 0){\r\n                        title.status = TitleStatus.Canceled;\r\n\r\n                        emit ThisTitleHasBeenCanceled(nextDrawParticipants);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function buyTitle(uint64 _titleId, bool withdrawPeriod, IERC20 _tokenAddress) public { //OK\r\n        Titles storage title = allTitles[_titleId];\r\n\r\n        require(title.status == TitleStatus.Open,\"This Title is not available. Check the Title status!\");\r\n        require(title.numberOfTitlesSold <= title.installments, \"Title soldout!\");\r\n\r\n        title.numberOfTitlesSold++;\r\n        //Se você deseja sacar o valor do titulo em menos de 5 meses, se sorteado. Marque como true.\r\n        uint fee;\r\n        uint lockPeriod;\r\n        if(withdrawPeriod == true){\r\n            fee = title.protocolFee;\r\n            lockPeriod = 0;\r\n        } else {\r\n            fee = 0;\r\n            lockPeriod = 5;\r\n        }\r\n\r\n        TitlesSold memory myTitle = TitlesSold({\r\n            contractId: title.numberOfTitlesSold,\r\n            titleValue: title.titleValue,\r\n            installments: title.installments,\r\n            monthlyValue: ((title.monthlyInvestiment) + (fee)),\r\n            periodLocked: lockPeriod,\r\n            titleOwner: msg.sender,\r\n            installmentsPaid: 0,\r\n            drawSelected: 0,\r\n            colateralId: 0,\r\n            colateralTitleAddress: address(this),\r\n            colateralRWAAddress: address(0),\r\n            valueOfEnsuranceNeeded: 0,\r\n            myTitleStatus: MyTitleWithdraw.OnSchedule,\r\n            paid: false\r\n        });\r\n\r\n        titleSoldInfos[_titleId][title.numberOfTitlesSold] = myTitle;\r\n\r\n        if(title.numberOfTitlesSold > title.installments){\r\n            title.status = TitleStatus.Closed;\r\n        }\r\n        \r\n        bytes memory myTitleReceipt = abi.encode(myTitle);\r\n\r\n        uint myTitleReceiptId = receipt.safeMint(msg.sender, string(myTitleReceipt));\r\n\r\n        payInstallment(_titleId, titleSoldInfos[_titleId][title.numberOfTitlesSold].contractId, titleSoldInfos[_titleId][title.numberOfTitlesSold].installmentsPaid, _tokenAddress);\r\n\r\n        emit NewTitleSold(title.numberOfTitlesSold, msg.sender);\r\n    }\r\n\r\n    function payInstallment(uint _idTitle, //OK\r\n                            uint _contractId,\r\n                            uint _installmentNumber,\r\n                            IERC20 _tokenAddress) public {\r\n        Titles storage title = allTitles[_idTitle];\r\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\r\n        require(title.status == TitleStatus.Closed, \"Check the title status!\");\r\n        require(myTitle.installments >= _installmentNumber, \"You don't have any installment left to pay!\");\r\n        require(myTitle.myTitleStatus == MyTitleWithdraw.OnSchedule || myTitle.myTitleStatus == MyTitleWithdraw.Late || myTitle.myTitleStatus == MyTitleWithdraw.Withdraw );\r\n\r\n        uint _installment;\r\n\r\n        if(_installmentNumber == 0){\r\n            _installment = 1;\r\n        } else{\r\n            require(_installmentNumber > myTitle.installmentsPaid, \"Already paid!\");\r\n            _installment = _installmentNumber;\r\n        }\r\n\r\n        uint paymentDate = staff.returnPaymentDeadline(title.paymentSchedule, _installment);\r\n\r\n        if(block.timestamp > paymentDate){\r\n            paymentDelay = (block.timestamp - paymentDate);\r\n\r\n            if(paymentDelay > 0){\r\n\r\n                amountToPay = staff.calculateDelayedPayment(paymentDelay, title.paymentSchedule, amountToPay);\r\n\r\n                emit AmountToPay(amountToPay);\r\n\r\n                receiveInstallment(_idTitle, _contractId, amountToPay, _tokenAddress);\r\n            }\r\n        }else{\r\n            amountToPay = myTitle.monthlyValue;\r\n            \r\n            emit AmountToPay(amountToPay);\r\n\r\n            receiveInstallment(_idTitle, _contractId, amountToPay, _tokenAddress);\r\n        }\r\n\r\n        TitleRecord memory record = TitleRecord({\r\n            contractId: _contractId,\r\n            installmentNumber: _installment,\r\n            paymentDate: block.timestamp,\r\n            payerAddress: msg.sender,\r\n            user: myTitle.titleOwner,\r\n            amount: amountToPay,\r\n            paymentDelay: paymentDelay,\r\n            paid: true,\r\n            installmentsPaid: myTitle.installmentsPaid\r\n        });\r\n\r\n        if(myTitle.installmentsPaid >= title.nextDrawNumber && myTitle.drawSelected == 0){\r\n            \r\n            staff.addParticipantsToDraw(title.paymentSchedule, title.nextDrawNumber);\r\n\r\n            uint nextDrawParticipants = staff.returnDrawParticipants(title.paymentSchedule, title.nextDrawNumber);\r\n\r\n            selectorVRF[_idTitle][_installmentNumber][nextDrawParticipants] = record;\r\n        }\r\n\r\n        bytes memory paymentReceipt = abi.encode(record);\r\n\r\n        receipt.safeMint(msg.sender, string(paymentReceipt));\r\n\r\n        if(myTitle.installmentsPaid == myTitle.installments){\r\n            myTitle.myTitleStatus = MyTitleWithdraw.Withdraw;\r\n\r\n            if(myTitle.colateralId != 0 ){\r\n                refundColateral(_idTitle, _contractId);\r\n            }\r\n        }\r\n        if(myTitle.installmentsPaid == title.nextDrawNumber &&  myTitle.myTitleStatus == MyTitleWithdraw.Late){\r\n            myTitle.myTitleStatus = MyTitleWithdraw.OnSchedule;\r\n        }\r\n\r\n        updateValueOfEnsurance(_idTitle, _contractId);\r\n\r\n        emit InstallmentPaid(_idTitle, _contractId, myTitle.installmentsPaid);\r\n    }\r\n\r\n    function receiveInstallment(uint _idTitle, uint _contractId, uint _amountToPay, IERC20 _tokenAddress) internal{ //OK\r\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\r\n        Titles storage title = allTitles[_idTitle];\r\n        require(myTitle.contractId <= title.numberOfTitlesSold, \"Enter a valid contract Id for this Title!\");\r\n        require(myTitle.myTitleStatus != MyTitleWithdraw.Canceled || myTitle.myTitleStatus != MyTitleWithdraw.Finalized, \"your title already have been finalized or canceled. Please check the status.\");\r\n        require(address(_tokenAddress) != address(0), \"Enter a token address\");\r\n\r\n        (, , bool isStable) = staff.returnAvailableStablecoin(_tokenAddress);\r\n\r\n        require(isStable == true , \"Token not allowed!\");\r\n\r\n        stablecoin = _tokenAddress;\r\n\r\n        require(_amountToPay >= myTitle.monthlyValue, \"Wrong value!!\");\r\n\r\n        //Valida se o endereço tem o valor da parcela na carteira.\r\n        require(stablecoin.balanceOf(msg.sender)>= _amountToPay, \"Insufficient balance\");\r\n\r\n        //Valida se o contrato(esse), tem permissão para realizar a transferência do valor.\r\n        require(stablecoin.allowance(msg.sender, address(this)) >= _amountToPay, \"You must approve the contract to transfer the tokens\");\r\n\r\n        if(myTitle.periodLocked == 0){\r\n            title.totalValueReceived = title.totalValueReceived + title.monthlyInvestiment;\r\n            \r\n            stablecoin.transferFrom(msg.sender, address(this), title.monthlyInvestiment);\r\n            stablecoin.transferFrom(msg.sender, address(staff), (_amountToPay - title.monthlyInvestiment));\r\n        } else{\r\n            title.totalValueReceived = title.totalValueReceived + title.monthlyInvestiment;\r\n\r\n            if(_amountToPay - title.monthlyInvestiment > 0){\r\n            \r\n                stablecoin.transferFrom(msg.sender, address(this), title.monthlyInvestiment);\r\n                stablecoin.transferFrom(msg.sender, address(staff), (_amountToPay - title.monthlyInvestiment));\r\n            } else{\r\n                stablecoin.transferFrom(msg.sender, address(this), _amountToPay);\r\n            }\r\n        }\r\n\r\n        myTitle.installmentsPaid++;\r\n    }\r\n\r\n    function updateValueOfEnsurance(uint _idTitle, uint _contractId) internal { //OK\r\n        Titles storage titles = allTitles[_idTitle];\r\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\r\n\r\n        uint valueAlreadyPaid = (myTitle.installmentsPaid * titles.monthlyInvestiment);\r\n\r\n        if(valueAlreadyPaid >= myTitle.titleValue){\r\n            myTitle.valueOfEnsuranceNeeded = 0;\r\n        }else{\r\n            myTitle.valueOfEnsuranceNeeded = myTitle.titleValue - valueAlreadyPaid;\r\n        }\r\n\r\n        emit EnsuranceValueNeededUpdate(_idTitle, _contractId, myTitle.valueOfEnsuranceNeeded);\r\n    }\r\n\r\n    function monthlyVRFWinner(uint _idTitle) public { //OK\r\n        Titles storage title = allTitles[_idTitle];\r\n\r\n        uint thisDrawDate = staff.returnDrawDate(title.paymentSchedule, title.nextDrawNumber);\r\n\r\n        require(block.timestamp > thisDrawDate, \"Isn't the time yet!\");\r\n\r\n        uint nextDrawParticipants = staff.returnDrawParticipants(title.paymentSchedule, title.nextDrawNumber);\r\n\r\n        uint256 requestId = vrfv2consumer.requestRandomWords(_idTitle, title.nextDrawNumber, nextDrawParticipants);\r\n\r\n        title.status = TitleStatus.Waiting;\r\n\r\n        Draw memory draw = Draw({\r\n            idTitle: _idTitle,\r\n            drawNumber: title.nextDrawNumber,\r\n            drawDate: block.timestamp,\r\n            totalParticipants: nextDrawParticipants,\r\n            requestId: requestId,\r\n            randomNumberVRF: 0,\r\n            selectedContractID: 0,\r\n            winner: address(0)\r\n        });\r\n\r\n        drawInfos[_idTitle][title.nextDrawNumber] = draw;\r\n\r\n        if(title.nextDrawNumber > title.installments){\r\n            title.status = TitleStatus.Finalized;\r\n        }\r\n    }\r\n\r\n    function receiveVRFRandomNumber(uint256 _idTitle) public{ //OK\r\n        Titles storage title = allTitles[_idTitle];\r\n        Draw storage draw = drawInfos[_idTitle][title.nextDrawNumber];\r\n\r\n        (bool fulfilled, uint256[] memory randomWords, uint256 randomValue) = vrfv2consumer.getRequestStatus(draw.requestId);\r\n\r\n        require(fulfilled, \"VRF request not fulfilled\");\r\n        \r\n        emit VRFAnswer(fulfilled, randomWords, randomValue);\r\n\r\n        TitleRecord storage winningTicket = selectorVRF[_idTitle][draw.drawNumber][randomValue];\r\n\r\n        draw.randomNumberVRF = randomValue;\r\n        draw.selectedContractID = winningTicket.contractId;\r\n        draw.winner = winningTicket.user;\r\n\r\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][winningTicket.contractId];\r\n\r\n        myTitle.drawSelected = draw.drawNumber;\r\n\r\n        updateValueOfEnsurance(_idTitle, winningTicket.contractId);\r\n\r\n        title.status = TitleStatus.Closed;\r\n\r\n        title.nextDrawNumber++;\r\n\r\n        emit MonthlyWinnerSelected(_idTitle, draw.drawNumber, randomValue, winningTicket.contractId, winningTicket.user);\r\n    }\r\n\r\n    function addTitleAsColateral(uint _titleId, uint _contractId, uint _idOfColateralTitle, uint _idOfColateralContract) public{ //OK\r\n        TitlesSold storage myColateralTitle = titleSoldInfos[_idOfColateralTitle][_idOfColateralContract];\r\n        TitlesSold storage myTitle = titleSoldInfos[_titleId][_contractId]; \r\n\r\n        require(myTitle.drawSelected != 0, \"You haven't been selected yet!\");\r\n        require(myTitle.titleOwner == msg.sender, \"Only the owner can add a colateral!\");\r\n        require(myColateralTitle.titleOwner == msg.sender, \"Only the owner can add a colateral!\");\r\n        require(myColateralTitle.titleValue >= myTitle.valueOfEnsuranceNeeded, \"The colateral total value must be greater than tue ensuranceValueNeeded\");\r\n        \r\n        uint colateralValuePaid = myColateralTitle.installmentsPaid * myColateralTitle.monthlyValue;\r\n        uint ensuranceNeeded = myTitle.valueOfEnsuranceNeeded * 2;\r\n\r\n        require(myColateralTitle.titleValue == colateralValuePaid || colateralValuePaid >= ensuranceNeeded, \"All the installments from the colateral must have been paid or at least the value paid must be greater then two times the ensureValueNeeded\");\r\n\r\n        myTitle.myTitleStatus = MyTitleWithdraw.Withdraw;\r\n\r\n        ColateralTitles memory colateral = ColateralTitles ({\r\n            colateralOwner: msg.sender,\r\n            titleIdOfColateral: _idOfColateralTitle,\r\n            contractIdOfColateral: _idOfColateralContract\r\n        });\r\n\r\n        colateralInfos[_titleId][_contractId] = colateral;\r\n\r\n        myColateralTitle.titleOwner = address(this);\r\n\r\n        emit ColateralTitleAdded(_titleId, _contractId, myTitle.drawSelected, _idOfColateralTitle, _idOfColateralContract);\r\n    }\r\n\r\n    function addRWAColateral(uint _idTitle, uint _contractId) public { //OK\r\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\r\n\r\n        require(myTitle.drawSelected != 0, \"You haven't been selected yet!\");\r\n\r\n        require(msg.sender == myTitle.titleOwner, \"Only the draw winner can create a permission!\");\r\n\r\n        bytes32 permissionHash = keccak256(abi.encodePacked(_idTitle, _contractId, myTitle.drawSelected));\r\n\r\n        FujiPermissions memory fuji = FujiPermissions({\r\n            idTitle: _idTitle,\r\n            contractId: _contractId,\r\n            drawNumber: myTitle.drawSelected\r\n        });\r\n\r\n        permissionInfo[permissionHash] = fuji;\r\n\r\n        uint rwaValueNeeded = myTitle.valueOfEnsuranceNeeded;\r\n\r\n        bytes memory permission = abi.encode(permissionHash, rwaValueNeeded, true);\r\n    \r\n        sender.sendMessagePayLINK(14767482510784806043, fujiReceiver,  permission); // CHAIN -14767482510784806043\r\n\r\n        emit CreatingPermission(_idTitle, _contractId, myTitle.drawSelected, fujiReceiver);\r\n    }\r\n\r\n    function refundColateral(uint _idTitle, uint _contractId) public { //OK\r\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\r\n        \r\n        require(myTitle.installmentsPaid == myTitle.installments, \"All the installments must have been paid!\");\r\n        require(myTitle.paid == true, \"You can't retrieve the colateral before the withdraw!\");\r\n\r\n        if(myTitle.installmentsPaid == myTitle.installments && myTitle.colateralRWAAddress != address(0)){\r\n\r\n            bytes32 permissionHash = keccak256(abi.encodePacked(_idTitle, _contractId, myTitle.drawSelected));\r\n\r\n            bytes memory updatePermission = abi.encode(permissionHash, myTitle.valueOfEnsuranceNeeded, false);\r\n\r\n            sender.sendMessagePayLINK(14767482510784806043, fujiReceiver, updatePermission); // Chain - 14767482510784806043\r\n        }else{\r\n            if(myTitle.installmentsPaid == myTitle.installments && myTitle.colateralId != 0){\r\n                \r\n                ColateralTitles memory colateral = colateralInfos[_idTitle][_contractId];\r\n                \r\n                TitlesSold storage myColateralTitle = titleSoldInfos[colateral.titleIdOfColateral][colateral.contractIdOfColateral];\r\n\r\n                myColateralTitle.titleOwner = colateral.colateralOwner;\r\n\r\n                myTitle.myTitleStatus = MyTitleWithdraw.Finalized;\r\n            }\r\n        }\r\n    }\r\n\r\n    function winnerWithdraw(uint _idTitle, uint _contractId, IERC20 _stablecoin) public { //OK\r\n        Titles storage title = allTitles[_idTitle];\r\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\r\n        \r\n        require(msg.sender == myTitle.titleOwner || msg.sender == owner, \"Msg.sender must be the contract Owner or the protocol owner!\");\r\n        require(address(_stablecoin) != address(0), \"Token not allowed\");\r\n        require(myTitle.myTitleStatus == MyTitleWithdraw.Withdraw, \"This title don't have the permission to withdraw\");\r\n \r\n        if(myTitle.installmentsPaid == myTitle.installments ||\r\n           myTitle.colateralId != 0 || myTitle.colateralRWAAddress != address(0) && myTitle.colateralId != 0) {\r\n\r\n            (, , bool isStable) = staff.returnAvailableStablecoin(_stablecoin);\r\n\r\n            require(isStable == true , \"Token not allowed!\");\r\n\r\n            stablecoin = _stablecoin;\r\n\r\n            //Valida se o endereço tem o valor da parcela na carteira.\r\n            require(stablecoin.balanceOf(address(this))>= myTitle.titleValue);\r\n            //Transfere o valor correspondente a parcela para o contrato.\r\n            stablecoin.transfer(myTitle.titleOwner, myTitle.titleValue);\r\n\r\n            emit MonthlyWinnerPaid(_idTitle, myTitle.drawSelected, myTitle.titleOwner, myTitle.titleValue);\r\n        }else{\r\n            emit ThereAreSomePendencies(myTitle.installmentsPaid,\r\n                                        myTitle.colateralId,\r\n                                        myTitle.colateralTitleAddress,\r\n                                        myTitle.colateralRWAAddress,\r\n                                        myTitle.myTitleStatus);\r\n        }\r\n        myTitle.paid = true;\r\n        title.totalValuePaid = title.totalValuePaid + myTitle.titleValue;\r\n    }\r\n\r\n    // Function to check titles with overdue payments and apply rules\r\n    function verifyLatePayments(uint _titleId, uint _contractId) public { //OK\r\n        Titles storage title = allTitles[_titleId];\r\n\r\n        for(uint i = 1; i < title.numberOfTitlesSold; i++){\r\n\r\n            TitlesSold storage clientTitle = titleSoldInfos[_titleId][i];\r\n\r\n            if(title.nextDrawNumber - clientTitle.installmentsPaid >= 2){\r\n                clientTitle.myTitleStatus = MyTitleWithdraw.Canceled;\r\n                title.titleCanceled++;\r\n\r\n                if(clientTitle.colateralId != 0 || clientTitle.colateralRWAAddress != address(0) && clientTitle.colateralId != 0){\r\n                            \r\n                    ColateralTitles storage colateral = colateralInfos[_titleId][_contractId];\r\n                    Titles storage colateralTitle = allTitles[colateral.titleIdOfColateral];\r\n                    TitlesSold storage colateralContract = titleSoldInfos[colateral.titleIdOfColateral][colateral.contractIdOfColateral];\r\n\r\n                    colateralContract.myTitleStatus = MyTitleWithdraw.Canceled;\r\n                    colateralTitle.titleCanceled++;\r\n                }\r\n            }else{\r\n                uint paymentDate = staff.returnPaymentDeadline(title.paymentSchedule, title.nextDrawNumber);\r\n                if(block.timestamp > paymentDate) {\r\n                    clientTitle.myTitleStatus = MyTitleWithdraw.Late;\r\n\r\n                    emit MyTitleStatusUpdated(clientTitle.myTitleStatus);\r\n\r\n                }\r\n            }    \r\n        }\r\n    }\r\n\r\n    function protocolWithdraw(uint _idTitle, IERC20 _tokenAddress) public onlyOwner{ //OK\r\n        Titles storage title = allTitles[_idTitle];\r\n\r\n        require(title.status == TitleStatus.Finalized || title.status == TitleStatus.Canceled);\r\n\r\n        uint validTitles = title.numberOfTitlesSold - title.titleCanceled;\r\n\r\n        uint lockedAmount = validTitles * title.titleValue;\r\n\r\n        uint amount = title.totalValueReceived - lockedAmount;\r\n\r\n        require(amount <= title.totalValueReceived - lockedAmount,\"_amount can't exceed the title value!\");\r\n\r\n        require(address(_tokenAddress) != address(0), \"Token not allowed\");\r\n\r\n        (, , bool isStable) = staff.returnAvailableStablecoin(_tokenAddress);\r\n\r\n        require(isStable == true , \"Token not allowed!\");\r\n\r\n        stablecoin = _tokenAddress;\r\n\r\n        require(stablecoin.balanceOf(address(this))>= amount);\r\n        stablecoin.transfer(address(staff), amount);\r\n    }\r\n\r\n    /* FUNÇÕES CCIP */\r\n    //Add source chains\r\n    function addSourceChain( uint64 _sourceChainSelector) external onlyOwner {//OK\r\n        whitelistedSourceChains[_sourceChainSelector] = true;\r\n    }\r\n    //removesource chains\r\n    function removelistSourceChain( uint64 _sourceChainSelector) external onlyOwner {//OK\r\n        whitelistedSourceChains[_sourceChainSelector] = false;\r\n    }\r\n    //add senders\r\n    function addSender(address _sender) external onlyOwner { //OK\r\n        whitelistedSenders[_sender] = true;\r\n    }\r\n    //remove senders\r\n    function removeSender(address _sender) external onlyOwner {//OK\r\n        whitelistedSenders[_sender] = false;\r\n    }\r\n\r\n    function addReceiver(address _receiverAddress) public { //OK\r\n        fujiReceiver = _receiverAddress;\r\n    }\r\n\r\n    /* handle a received message*/\r\n    function _ccipReceive( Client.Any2EVMMessage memory any2EvmMessage) internal override /*onlyWhitelistedSourceChain(any2EvmMessage.sourceChainSelector) onlyWhitelistedSenders(abi.decode(any2EvmMessage.sender, (address)))*/ {\r\n        lastReceivedMessageId = any2EvmMessage.messageId;\r\n        lastReceivedText = abi.decode(any2EvmMessage.data, (bytes));\r\n\r\n        bytes32 _permissionHash;\r\n        address _colectionAddress;\r\n        uint _nftId;\r\n\r\n        (_permissionHash, _colectionAddress, _nftId) = abi.decode(lastReceivedText, (bytes32, address, uint));\r\n\r\n        FujiPermissions storage permission = permissionInfo[_permissionHash];\r\n        TitlesSold storage myTitle = titleSoldInfos[permission.idTitle][permission.contractId];\r\n\r\n        myTitle.colateralId = _nftId;\r\n        myTitle.colateralRWAAddress = _colectionAddress;\r\n\r\n        if(myTitle.colateralId != 0 && myTitle.colateralRWAAddress != address(0)) {\r\n            myTitle.myTitleStatus = MyTitleWithdraw.Withdraw;\r\n        }\r\n\r\n        emit MessageReceived( any2EvmMessage.messageId, any2EvmMessage.sourceChainSelector, abi.decode(any2EvmMessage.sender, (address)), abi.decode(any2EvmMessage.data, (string)));\r\n    }\r\n\r\n    function getLastReceivedMessageDetails() external view returns (bytes32 messageId, bytes memory text) {\r\n        return (lastReceivedMessageId, lastReceivedText);\r\n    }\r\n\r\n    modifier onlyWhitelistedSourceChain(uint64 _sourceChainSelector) {\r\n        if (!whitelistedSourceChains[_sourceChainSelector])\r\n            revert SourceChainNotWhitelisted(_sourceChainSelector);\r\n        _;\r\n    }\r\n\r\n    modifier onlyWhitelistedSenders(address _sender) {\r\n        if (!whitelistedSenders[_sender]) revert SenderNotWhitelisted(_sender);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"The caller must be the owner!\");\r\n        _;\r\n    }\r\n}"},"contracts/HorizonReceipt.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\r\n\r\ncontract HorizonReceipt is ERC721, ERC721URIStorage, ERC721Burnable {\r\n    uint256 private _nextTokenId;\r\n\r\n    constructor()\r\n        ERC721(\"HorizonReceipt\", \"HZR\")\r\n    {}\r\n\r\n    function safeMint(address to, string memory uri) public returns(uint){\r\n        uint256 tokenId = _nextTokenId++;\r\n        _safeMint(to, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n\r\n        return tokenId;\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (string memory)\r\n    {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n"},"contracts/HorizonS.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\nimport {IRouterClient} from \"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\";\r\nimport {Client} from \"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\";\r\nimport {CCIPReceiver} from \"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\";\r\nimport {IERC20} from \"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\";\r\nimport {LinkTokenInterface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\r\n\r\ncontract HorizonS is CCIPReceiver {\r\n\r\n    // Custom errors to provide more descriptive revert messages.\r\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees);\r\n    error NothingToWithdraw();\r\n    error FailedToWithdrawEth(address owner, address target, uint256 value);\r\n    error DestinationChainNotWhitelisted(uint64 destinationChainSelector);\r\n\r\n    // Event emitted when a message is sent to another chain.\r\n    event MessageSent(bytes32 indexed messageId, uint64 indexed destinationChainSelector, address receiver, bytes text, address feeToken, uint256 fees);\r\n    event MessageReceived(bytes32 indexed messageId, uint64 indexed sourceChainSelector, address sender, string text, address token, uint256 tokenAmount);\r\n    event CCIPReceiverAdded(string blockchainName, address receiverAddress);\r\n    event CCIPReceiverRemoved(address _receiverAddress);\r\n\r\n    bytes32 private lastReceivedMessageId;\r\n    string private lastReceivedText;\r\n    uint private destinationChainSelector;\r\n\r\n    address owner;\r\n\r\n    /* STRUCTS */\r\n    struct ReceiverInfo {\r\n        string blockchainName;\r\n        address receiverAddress;\r\n        bool isReceiver;\r\n    }\r\n\r\n    // Mapping to keep track of whitelisted destination chains.\r\n    mapping(uint64 => bool) public whitelistedDestinationChains;\r\n    // Mapping to keep track of receivers.\r\n    mapping(address receiverAddress => ReceiverInfo) public ccipReceicers;\r\n\r\n    LinkTokenInterface linkToken = LinkTokenInterface(0x5FA769922a6428758fb44453815e2c436c57C3c7);  //\r\n\r\n    constructor(address _router, //0x70499c328e1e2a3c41108bd3730f6670a44595d1\r\n                address _linkToken //0x326C977E6efc84E512bB9C30f76E30c160eD06FB\r\n               ) CCIPReceiver(_router){ \r\n        linkToken = LinkTokenInterface(_linkToken);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /// @dev Whitelists a chain for transactions.\r\n    /// @notice This function can only be called by the owner.\r\n    /// @param _destinationChainSelector The selector of the destination chain to be whitelisted.\r\n    function whitelistDestinationChain(uint64 _destinationChainSelector) external onlyOwner {\r\n        whitelistedDestinationChains[_destinationChainSelector] = true;\r\n    }\r\n\r\n    /// @dev Denylists a chain for transactions.\r\n    /// @notice This function can only be called by the owner.\r\n    /// @param _destinationChainSelector The selector of the destination chain to be denylisted.\r\n    function denylistDestinationChain(uint64 _destinationChainSelector) external onlyOwner {\r\n        whitelistedDestinationChains[_destinationChainSelector] = false;\r\n    }\r\n\r\n    function addReceiver(string memory _blockchainName, address _receiverAddress) public onlyOwner{\r\n        require(_receiverAddress != address(0), \"Enter a valid address!\");\r\n        require(ccipReceicers[_receiverAddress].isReceiver == false, \"Receiver is already registered!\");\r\n\r\n        ReceiverInfo memory newReceiver = ReceiverInfo({\r\n            blockchainName: _blockchainName,\r\n            receiverAddress: _receiverAddress,\r\n            isReceiver: true\r\n        });\r\n        \r\n        ccipReceicers[_receiverAddress] = newReceiver;\r\n\r\n        emit CCIPReceiverAdded(_blockchainName, _receiverAddress);\r\n    }\r\n\r\n    function removeReceiver(address _receiverAddress) public onlyOwner {\r\n        require(ccipReceicers[_receiverAddress].isReceiver == true, \"Receiver is already registered!\");\r\n\r\n        delete ccipReceicers[_receiverAddress];\r\n\r\n        emit CCIPReceiverRemoved(_receiverAddress);\r\n    }\r\n\r\n    function sendMessagePayLINK(uint64 _destinationChainSelector, address _receiverAddress, bytes memory _data) external /*onlyOwner*/ returns (bytes32 messageId){\r\n        require(ccipReceicers[_receiverAddress].receiverAddress != address(0), \"Enter a valid receiver address!\");\r\n        require(ccipReceicers[_receiverAddress].isReceiver == true, \"This receiver is not whitelisted yet!\");\r\n\r\n        Client.EVM2AnyMessage memory evm2AnyMessage = _buildCCIPMessage(\r\n            ccipReceicers[_receiverAddress].receiverAddress,\r\n            _data,\r\n            address(linkToken)\r\n        );\r\n\r\n        IRouterClient router = IRouterClient(this.getRouter());\r\n\r\n        uint256 fees = router.getFee(_destinationChainSelector, evm2AnyMessage);\r\n\r\n        if (fees > linkToken.balanceOf(address(this)))\r\n            revert NotEnoughBalance(linkToken.balanceOf(address(this)), fees);\r\n\r\n        linkToken.approve(address(router), fees);\r\n\r\n        messageId = router.ccipSend(_destinationChainSelector, evm2AnyMessage);\r\n\r\n        emit MessageSent(messageId, _destinationChainSelector, _receiverAddress, _data, address(0), fees);\r\n\r\n        return messageId;\r\n    }\r\n\r\n    function _buildCCIPMessage(address _receiver, bytes memory _data, address _feeTokenAddress) internal pure returns (Client.EVM2AnyMessage memory) {\r\n        Client.EVM2AnyMessage memory evm2AnyMessage = Client.EVM2AnyMessage({\r\n            receiver: abi.encode(_receiver),\r\n            data: abi.encode(_data),\r\n            tokenAmounts: new Client.EVMTokenAmount[](0),\r\n            extraArgs:  Client._argsToBytes(\r\n                Client.EVMExtraArgsV1({gasLimit: 800_000, strict: false})\r\n            ),\r\n            feeToken: _feeTokenAddress\r\n        });\r\n        return evm2AnyMessage;\r\n    }\r\n\r\n    function _ccipReceive(Client.Any2EVMMessage memory any2EvmMessage) internal override{\r\n        lastReceivedMessageId = any2EvmMessage.messageId;\r\n        lastReceivedText = abi.decode(any2EvmMessage.data, (string));\r\n\r\n        emit MessageReceived(any2EvmMessage.messageId, any2EvmMessage.sourceChainSelector, abi.decode(any2EvmMessage.sender, (address)), abi.decode(any2EvmMessage.data, (string)), any2EvmMessage.destTokenAmounts[0].token, any2EvmMessage.destTokenAmounts[0].amount);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function withdraw(address _beneficiary) public /*onlyOwner*/ {\r\n        uint256 amount = address(this).balance;\r\n\r\n        if (amount == 0) revert NothingToWithdraw();\r\n\r\n        (bool sent, ) = _beneficiary.call{value: amount}(\"\");\r\n\r\n        if (!sent) revert FailedToWithdrawEth(msg.sender, _beneficiary, amount);\r\n    }\r\n\r\n    function withdrawToken( address _beneficiary, address _token) public /*onlyOwner*/ {\r\n        uint256 amount = IERC20(_token).balanceOf(address(this));\r\n\r\n        if (amount == 0) revert NothingToWithdraw();\r\n\r\n        IERC20(_token).transfer(_beneficiary, amount);\r\n    }\r\n\r\n    modifier onlyOwner(){\r\n        require(msg.sender == owner, \"Only Owner can call this function!\");\r\n        _;\r\n    }\r\n}\r\n"},"contracts/HorizonStaff.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.9 <=0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\nerror NothingToWithdraw();\r\n\r\ncontract HorizonStaff {\r\n\r\n    /*Interest variables*/\r\n    uint scheduleId = 1;\r\n    uint public baseInterestRate = 10;\r\n    uint public dailyInterestRate = 3;\r\n    uint oneDay = 60; //86400\r\n    address owner;\r\n\r\n    /* Events */\r\n    event AdminADD(address indexed _wallet);\r\n    event AdminRemoved(address indexed _wallet);\r\n    event TokenAdded(IERC20 tokenAddress, string symbol);\r\n    event TokenRemoved(string symbol, address _stablecoin );\r\n    event InstallmentDateUpdated(uint _installmentNumber, uint _dateOfPayment);    \r\n    event TheInstallmenteIsOnTime(uint _paymentDelay);\r\n    event TheInstallmentIsOneDayLate(uint _amountToPay);\r\n    event TheTitleIsCloseToBeCanceled(uint currentInterestRate, uint amountToPay);\r\n    event PaymentIsLate(uint currentInterestRate, uint amountToPay);\r\n\r\n    /* Structs */\r\n    struct AdminInfo {\r\n        address wallet;\r\n        bool isAdmin;\r\n    }\r\n    struct TokenInfo {        \r\n        string tokenSymbol;\r\n        IERC20 stablecoin;\r\n        bool isStable;\r\n    }\r\n    struct Deadlines {\r\n        uint installmentNumber;\r\n        uint participants;\r\n        uint dateOfPayment;\r\n        uint dateOfDraw;\r\n        uint baseInterestRate;\r\n        uint dailyInterestRate;\r\n    }\r\n\r\n    /* Mappings */\r\n    mapping(IERC20 coinAddress => TokenInfo) public allowedCrypto;\r\n    mapping(uint _titleId => mapping(uint installmentId => Deadlines)) internal schedule;\r\n    mapping(address adminWallet => AdminInfo) public staff;\r\n\r\n    IERC20 stablecoin;\r\n\r\n    constructor (){\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function addAdmin(address _wallet) public {//OK\r\n        require(_wallet != address(0), \"Admin wallet can't be empty!\");\r\n        require(staff[_wallet].isAdmin == false,\"Admin already registered\");\r\n\r\n        staff[_wallet] = AdminInfo({\r\n            wallet: _wallet,\r\n            isAdmin: true\r\n        });\r\n\r\n        emit AdminADD(_wallet);\r\n    }\r\n\r\n    function removeAdmin(address _wallet) public {// OK\r\n        require(_wallet != address(0), \"Admin wallet can't be empty!\");\r\n        require(staff[_wallet].isAdmin == true);\r\n        \r\n        delete staff[_wallet];\r\n\r\n        emit AdminRemoved(_wallet);\r\n    }\r\n\r\n    function addToken(IERC20 _stablecoin, string memory _tokenSymbol) public { //OK\r\n        require(address(_stablecoin) != address(0), \"Token address cannot be zero\");\r\n        require(allowedCrypto[_stablecoin].stablecoin == IERC20(address(0)), \"Token already added\");\r\n\r\n        allowedCrypto[_stablecoin] = TokenInfo({\r\n            tokenSymbol: _tokenSymbol,\r\n            stablecoin: _stablecoin,\r\n            isStable: true\r\n        });\r\n\r\n        emit TokenAdded(_stablecoin, _tokenSymbol);\r\n    }\r\n\r\n    function removeToken(IERC20 _stablecoin) public { //OK\r\n        address stablecoinAddress = address(allowedCrypto[_stablecoin].stablecoin);\r\n\r\n        require(stablecoinAddress != address(0), \"Token address cannot be zero\");\r\n\r\n        TokenInfo storage tokenToRemove = allowedCrypto[_stablecoin];\r\n\r\n        delete allowedCrypto[_stablecoin];\r\n\r\n        emit TokenRemoved(tokenToRemove.tokenSymbol, stablecoinAddress);\r\n    }\r\n\r\n    function createSchedule(uint _titleId, uint _numPayments, uint _closing) public returns(uint _scheduleId){//OK\r\n        require(_numPayments > 0, \"Number of payments must be greater than 0!\");\r\n        require(_closing > block.timestamp, \"The closing of title selling must be in the future!\");\r\n\r\n        uint intervalDays = 5 minutes; // This will be dinamic. We can adjust this as needed.\r\n\r\n        uint nextDate = _closing + 300; // We can adjust this as needed.\r\n\r\n        for (uint i = 1; i <= _numPayments; i++) {\r\n            require(nextDate > block.timestamp, \"Payment date must be in the future!\");\r\n\r\n            Deadlines memory dates = Deadlines({\r\n                installmentNumber: i,\r\n                participants: 0,\r\n                dateOfPayment: nextDate,\r\n                dateOfDraw: nextDate + 300, // We can adjust this as needed.\r\n                baseInterestRate: baseInterestRate,\r\n                dailyInterestRate: dailyInterestRate\r\n            });\r\n\r\n            schedule[_titleId][i] = dates;\r\n\r\n            nextDate = nextDate + intervalDays;\r\n        }\r\n\r\n        uint titleSchedule = scheduleId;\r\n\r\n        scheduleId ++;\r\n\r\n        return titleSchedule;\r\n    }\r\n    \r\n    function updatePaymentDate(uint _scheduleId, uint _installmentNumber, uint _dateOfPayment) public { //OK\r\n        require(_installmentNumber > 0, \"Installment number must be greater than zero!\");\r\n        require(schedule[_scheduleId][_installmentNumber].installmentNumber == _installmentNumber, \"Installment number must exist!\");\r\n        require(_dateOfPayment > schedule[_scheduleId][_installmentNumber].dateOfPayment, \"You can only postpone the payment!\");\r\n\r\n        uint nextDate = _dateOfPayment * (1 minutes);\r\n\r\n        require(nextDate - (schedule[_scheduleId][_installmentNumber - 1].dateOfPayment) > 5 minutes, \"Must have a period of 30 days between installments!\"); // We can adjust this as needed.\r\n\r\n        schedule[_scheduleId][_installmentNumber].dateOfPayment = _dateOfPayment;\r\n\r\n        emit InstallmentDateUpdated(_installmentNumber, _dateOfPayment);\r\n    }\r\n    \r\n    function addParticipantsToDraw(uint _scheduleId, uint _drawNumber) public {\r\n        Deadlines storage deadline = schedule[_scheduleId][_drawNumber];\r\n\r\n        deadline.participants++;\r\n    }\r\n\r\n    /* INTERESTS */\r\n\r\n    function calculateDelayedPayment(uint _paymentDelay, uint _scheduleId, uint _inicialInstallment) external returns(uint) { //OK\r\n\r\n        uint inicialValue = _inicialInstallment;\r\n        uint currentInterestRate;\r\n        uint amountToPay;\r\n\r\n\r\n        if(_paymentDelay < oneDay){\r\n            currentInterestRate = schedule[_scheduleId][_inicialInstallment].baseInterestRate;\r\n\r\n            uint valueWithInterest = (inicialValue * currentInterestRate) / 100;\r\n\r\n            amountToPay = inicialValue + valueWithInterest;\r\n\r\n            emit TheInstallmentIsOneDayLate(amountToPay);\r\n        }else{\r\n            //Calcula os juros a partir dos dias atrasados\r\n            uint daily = schedule[_scheduleId][_inicialInstallment].dailyInterestRate;\r\n\r\n            uint totalDailyInterest = (_paymentDelay / oneDay) * daily;\r\n\r\n            currentInterestRate = baseInterestRate + totalDailyInterest;\r\n\r\n            uint valueWithInterests = (inicialValue * currentInterestRate) / 100;\r\n\r\n            //Calcula o valor a pagar a partir do valor inicial + juros(se houver)\r\n            amountToPay = inicialValue + valueWithInterests;\r\n\r\n            if(currentInterestRate > 40){\r\n                emit TheTitleIsCloseToBeCanceled(currentInterestRate, amountToPay);\r\n            }else{\r\n                emit PaymentIsLate(currentInterestRate, amountToPay);\r\n            }\r\n        }\r\n        return amountToPay;\r\n    }\r\n\r\n    function updateInterest(uint _baseRate, uint _dailyRate) public { // OK.\r\n        baseInterestRate = _baseRate;\r\n        dailyInterestRate = _dailyRate;\r\n    }\r\n\r\n    /* WITHDRAW */\r\n\r\n    function withdrawProtocolFee(IERC20 _tokenAddress) public onlyOwner {//OK\r\n        require(allowedCrypto[_tokenAddress].isStable == true, \"Token not allowed\");\r\n\r\n        stablecoin = allowedCrypto[_tokenAddress].stablecoin;\r\n\r\n        uint amount = stablecoin.balanceOf(address(this));\r\n\r\n        // Revert if there is nothing to withdraw\r\n        if (amount == 0){\r\n            revert NothingToWithdraw();\r\n        }\r\n        \r\n        stablecoin.transfer(owner, amount);\r\n    }\r\n\r\n    /* GET FUNCTIONS */\r\n\r\n    function returnAvailableStablecoin(IERC20 _stablecoin) external returns(string memory, IERC20, bool){//ok\r\n        string memory symbol = allowedCrypto[_stablecoin].tokenSymbol;\r\n        stablecoin = allowedCrypto[_stablecoin].stablecoin;\r\n        bool isStable = allowedCrypto[_stablecoin].isStable;\r\n\r\n        return (symbol, stablecoin, isStable);\r\n    }\r\n\r\n    function returnPaymentDeadline(uint _scheduleId, uint _installmentNumber) external view returns(uint){ //OK\r\n        uint paymentDate = schedule[_scheduleId][_installmentNumber].dateOfPayment;\r\n        return paymentDate;\r\n    }\r\n\r\n    function returnDrawDate(uint _scheduleId, uint _installmentNumber) external view returns(uint){ //OK\r\n        uint drawDate = schedule[_scheduleId][_installmentNumber].dateOfDraw;\r\n        \r\n        return drawDate;\r\n    }\r\n\r\n    function returnDrawParticipants(uint _scheduleId, uint _drawNumber) public view returns(uint) {\r\n        Deadlines storage deadline = schedule[_scheduleId][_drawNumber];\r\n\r\n        return deadline.participants;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner,\"The caller must be the owner\");\r\n        _;\r\n    }\r\n}"},"contracts/HorizonVRF.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.9 <=0.8.20;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\r\n\r\ncontract HorizonVRF is VRFConsumerBaseV2{\r\n\r\n    event RequestSent(uint requestId, uint32 numWords, uint _titleId, uint _drawNumber, uint _totalPlayersAvailable);\r\n    event RequestFulfilled(uint256 requestId, uint256[] randomWords, uint randomValue);\r\n    event RandomValueUpdated(uint256 randomValue);\r\n\r\n    struct RequestStatus {\r\n        bool fulfilled;\r\n        bool exists;\r\n        uint256[] randomWords;\r\n        uint256 randomValue;\r\n    }\r\n    struct DrawInfos{\r\n        uint titleId;\r\n        uint drawNumber;\r\n        uint totalPlayersAvailable;\r\n    }\r\n\r\n    mapping(uint256 requestId => RequestStatus) public s_requests;\r\n    mapping(uint256 requestId => DrawInfos) public s_draw;\r\n\r\n    //State variable\r\n    uint256 private randomValue;\r\n    address public owner;\r\n\r\n    // past requests Id.\r\n    uint256[] public requestIds;\r\n    uint256 public lastRequestId;\r\n    \r\n    VRFCoordinatorV2Interface COORDINATOR;\r\n    address vrfCoordinator;\r\n    bytes32 keyHash;\r\n    uint64 s_subscriptionId;\r\n    uint32 callbackGasLimit;\r\n    uint16 requestConfirmations;\r\n    uint32 numWords;\r\n\r\n    constructor(address _vrfCoordinator, //0x7a1BaC17Ccc5b313516C5E16fb24f7659aA5ebed\r\n                bytes32 _keyHash, //0x4b09e658ed251bcafeebbc69400383d49f344ace09b9576fe248bb02c003fe9f\r\n                uint64 _subscriptionId, //5413\r\n                uint32 _callbackGasLimit, //100000\r\n                uint16 _requestConfirmations, //3\r\n                uint32 _numWords //1\r\n               ) VRFConsumerBaseV2(_vrfCoordinator){\r\n        COORDINATOR = VRFCoordinatorV2Interface(_vrfCoordinator);\r\n        keyHash = _keyHash;\r\n        s_subscriptionId = _subscriptionId;\r\n        callbackGasLimit = _callbackGasLimit;\r\n        requestConfirmations = _requestConfirmations;\r\n        numWords = _numWords;\r\n    }\r\n\r\n    function requestRandomWords(uint _titleId, uint _drawNumber, uint256 _totalPlayersAvailable) external returns (uint256 requestId) {\r\n \r\n        requestId = COORDINATOR.requestRandomWords(keyHash, s_subscriptionId, requestConfirmations, callbackGasLimit, numWords);\r\n        s_requests[requestId] = RequestStatus({\r\n            randomWords: new uint256[](0),\r\n            exists: true,\r\n            fulfilled: false,\r\n            randomValue: 0\r\n        });\r\n\r\n        requestIds.push(requestId);\r\n        lastRequestId = requestId;\r\n\r\n        s_draw[requestId] = DrawInfos({\r\n            titleId: _titleId,\r\n            drawNumber: _drawNumber,\r\n            totalPlayersAvailable: _totalPlayersAvailable\r\n        });\r\n\r\n        emit RequestSent(requestId, numWords, _titleId, _drawNumber, _totalPlayersAvailable);\r\n        return requestId;\r\n    }\r\n\r\n    function fulfillRandomWords(uint256 _requestId, uint256[] memory _randomWords) internal override {\r\n        require(s_requests[_requestId].exists, \"request not found\");\r\n\r\n        s_requests[_requestId].fulfilled = true;\r\n        s_requests[_requestId].randomWords = _randomWords ;\r\n        s_requests[_requestId].randomValue = (_randomWords[0] % s_draw[_requestId].totalPlayersAvailable)+1;\r\n\r\n        emit RequestFulfilled(_requestId, _randomWords, s_requests[_requestId].randomValue);\r\n    }\r\n\r\n    function getRequestStatus(uint256 _requestId) external view returns (bool fulfilled, uint256[] memory randomWords, uint256 _randomValue) {\r\n        require(s_requests[_requestId].exists, \"request not found\");\r\n        RequestStatus memory request = s_requests[_requestId];\r\n        return (request.fulfilled, request.randomWords, request.randomValue);\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/Horizon.sol:272:9:\n    |\n272 |         uint myTitleReceiptId = receipt.safeMint(msg.sender, string(myTitleReceipt));\n    |         ^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":10617,"file":"contracts/Horizon.sol","start":10596},"type":"Warning"}],"sources":{"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol":{"ast":{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol","exportedSymbols":{"CCIPReceiver":[119],"Client":[241],"IAny2EVMMessageReceiver":[132],"IERC165":[331]},"id":120,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol","file":"../interfaces/IAny2EVMMessageReceiver.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":120,"sourceUnit":133,"src":"57:82:0","symbolAliases":[{"foreign":{"id":2,"name":"IAny2EVMMessageReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"65:23:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"../libraries/Client.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":120,"sourceUnit":242,"src":"141:47:0","symbolAliases":[{"foreign":{"id":4,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"149:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol","file":"../../vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":120,"sourceUnit":332,"src":"190:98:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"198:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"IAny2EVMMessageReceiver","nameLocations":["413:23:0"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"413:23:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"413:23:0"},{"baseName":{"id":11,"name":"IERC165","nameLocations":["438:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":331,"src":"438:7:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"438:7:0"}],"canonicalName":"CCIPReceiver","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"290:89:0","text":"@title CCIPReceiver - Base contract for CCIP applications that can receive messages."},"fullyImplemented":false,"id":119,"linearizedBaseContracts":[119,331,132],"name":"CCIPReceiver","nameLocation":"397:12:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":14,"mutability":"immutable","name":"i_router","nameLocation":"477:8:0","nodeType":"VariableDeclaration","scope":119,"src":"450:35:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"body":{"id":37,"nodeType":"Block","src":"518:92:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":19,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"528:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":22,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"546:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":21,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"538:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:0","typeDescriptions":{}}},"id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"538:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"528:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":32,"nodeType":"IfStatement","src":"524:58:0","trueBody":{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"579:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":27,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"571:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"571:7:0","typeDescriptions":{}}},"id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":25,"name":"InvalidRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"557:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"557:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":31,"nodeType":"RevertStatement","src":"550:32:0"}},{"expression":{"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":33,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"588:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":34,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"599:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"588:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":36,"nodeType":"ExpressionStatement","src":"588:17:0"}]},"id":38,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"router","nameLocation":"510:6:0","nodeType":"VariableDeclaration","scope":38,"src":"502:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"501:16:0"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"518:0:0"},"scope":119,"src":"490:120:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[330],"body":{"id":61,"nodeType":"Block","src":"844:118:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"857:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAny2EVMMessageReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"877:23:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAny2EVMMessageReceiver_$132_$","typeString":"type(contract IAny2EVMMessageReceiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAny2EVMMessageReceiver_$132_$","typeString":"type(contract IAny2EVMMessageReceiver)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"872:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"872:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAny2EVMMessageReceiver_$132","typeString":"type(contract IAny2EVMMessageReceiver)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"902:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"872:41:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"857:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":53,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"917:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":55,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"937:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$331_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$331_$","typeString":"type(contract IERC165)"}],"id":54,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"932:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":56,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$331","typeString":"type(contract IERC165)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"946:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"932:25:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"917:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"857:100:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":60,"nodeType":"Return","src":"850:107:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"614:144:0","text":"@notice IERC165 supports an interfaceId\n @param interfaceId The interfaceId to check\n @return true if the interfaceId is supported"},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"770:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"820:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"795:11:0","nodeType":"VariableDeclaration","scope":62,"src":"788:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"788:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"787:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"838:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:0"},"scope":119,"src":"761:201:0","stateMutability":"pure","virtual":false,"visibility":"public"},{"baseFunctions":[131],"body":{"id":76,"nodeType":"Block","src":"1106:32:0","statements":[{"expression":{"arguments":[{"id":73,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1125:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_calldata_ptr","typeString":"struct Client.Any2EVMMessage calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_calldata_ptr","typeString":"struct Client.Any2EVMMessage calldata"}],"id":72,"name":"_ccipReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1112:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$204_memory_ptr_$returns$__$","typeString":"function (struct Client.Any2EVMMessage memory)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":75,"nodeType":"ExpressionStatement","src":"1112:21:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"966:39:0","text":"@inheritdoc IAny2EVMMessageReceiver"},"functionSelector":"85572ffb","id":77,"implemented":true,"kind":"function","modifiers":[{"id":70,"kind":"modifierInvocation","modifierName":{"id":69,"name":"onlyRouter","nameLocations":["1095:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":118,"src":"1095:10:0"},"nodeType":"ModifierInvocation","src":"1095:10:0"}],"name":"ccipReceive","nameLocation":"1017:11:0","nodeType":"FunctionDefinition","overrides":{"id":68,"nodeType":"OverrideSpecifier","overrides":[],"src":"1086:8:0"},"parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"message","nameLocation":"1060:7:0","nodeType":"VariableDeclaration","scope":77,"src":"1029:38:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_calldata_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":65,"nodeType":"UserDefinedTypeName","pathNode":{"id":64,"name":"Client.Any2EVMMessage","nameLocations":["1029:6:0","1036:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":204,"src":"1029:21:0"},"referencedDeclaration":204,"src":"1029:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"1028:40:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1106:0:0"},"scope":119,"src":"1008:130:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1142:94:0","text":"@notice Override this function in your implementation.\n @param message Any2EVMMessage"},"id":84,"implemented":false,"kind":"function","modifiers":[],"name":"_ccipReceive","nameLocation":"1248:12:0","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"message","nameLocation":"1290:7:0","nodeType":"VariableDeclaration","scope":84,"src":"1261:36:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":80,"nodeType":"UserDefinedTypeName","pathNode":{"id":79,"name":"Client.Any2EVMMessage","nameLocations":["1261:6:0","1268:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":204,"src":"1261:21:0"},"referencedDeclaration":204,"src":"1261:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"1260:38:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"1315:0:0"},"scope":119,"src":"1239:77:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":95,"nodeType":"Block","src":"1601:35:0","statements":[{"expression":{"arguments":[{"id":92,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1622:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":91,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1614:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"1614:7:0","typeDescriptions":{}}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":89,"id":94,"nodeType":"Return","src":"1607:24:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1479:68:0","text":"@notice Return the current router\n @return i_router address"},"functionSelector":"b0f479a1","id":96,"implemented":true,"kind":"function","modifiers":[],"name":"getRouter","nameLocation":"1559:9:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"1568:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":96,"src":"1592:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1591:9:0"},"scope":119,"src":"1550:86:0","stateMutability":"view","virtual":false,"visibility":"public"},{"errorSelector":"d7f73334","id":100,"name":"InvalidRouter","nameLocation":"1646:13:0","nodeType":"ErrorDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"router","nameLocation":"1668:6:0","nodeType":"VariableDeclaration","scope":100,"src":"1660:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1660:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1659:16:0"},"src":"1640:36:0"},{"body":{"id":117,"nodeType":"Block","src":"1758:87:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1768:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1772:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1768:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":107,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1790:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1782:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:0","typeDescriptions":{}}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1782:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1768:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":115,"nodeType":"IfStatement","src":"1764:69:0","trueBody":{"errorCall":{"arguments":[{"expression":{"id":111,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1822:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1822:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":110,"name":"InvalidRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1808:13:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":114,"nodeType":"RevertStatement","src":"1801:32:0"}},{"id":116,"nodeType":"PlaceholderStatement","src":"1839:1:0"}]},"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1680:53:0","text":"@dev only calls from the set router are accepted."},"id":118,"name":"onlyRouter","nameLocation":"1745:10:0","nodeType":"ModifierDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[],"src":"1755:2:0"},"src":"1736:109:0","virtual":false,"visibility":"internal"}],"scope":120,"src":"379:1468:0","usedErrors":[100],"usedEvents":[]}],"src":"32:1816:0"},"id":0},"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol":{"ast":{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol","exportedSymbols":{"Client":[241],"IAny2EVMMessageReceiver":[132]},"id":133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":121,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"../libraries/Client.sol","id":123,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":242,"src":"57:47:1","symbolAliases":[{"foreign":{"id":122,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"65:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAny2EVMMessageReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"106:119:1","text":"@notice Application contracts that intend to receive messages from\n the router should implement this interface."},"fullyImplemented":false,"id":132,"linearizedBaseContracts":[132],"name":"IAny2EVMMessageReceiver","nameLocation":"235:23:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"263:302:1","text":"@notice Called by the Router to deliver a message.\n If this reverts, any token transfers also revert. The message\n will move to a FAILED state and become available for manual execution.\n @param message CCIP Message\n @dev Note ensure you check the msg.sender is the OffRampRouter"},"functionSelector":"85572ffb","id":131,"implemented":false,"kind":"function","modifiers":[],"name":"ccipReceive","nameLocation":"577:11:1","nodeType":"FunctionDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"message","nameLocation":"620:7:1","nodeType":"VariableDeclaration","scope":131,"src":"589:38:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_calldata_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":127,"nodeType":"UserDefinedTypeName","pathNode":{"id":126,"name":"Client.Any2EVMMessage","nameLocations":["589:6:1","596:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":204,"src":"589:21:1"},"referencedDeclaration":204,"src":"589:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"588:40:1"},"returnParameters":{"id":130,"nodeType":"ParameterList","parameters":[],"src":"637:0:1"},"scope":132,"src":"568:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":133,"src":"225:415:1","usedErrors":[],"usedEvents":[]}],"src":"32:609:1"},"id":1},"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol":{"ast":{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol","exportedSymbols":{"Client":[241],"IRouterClient":[184]},"id":185,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":134,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"../libraries/Client.sol","id":136,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":185,"sourceUnit":242,"src":"57:47:2","symbolAliases":[{"foreign":{"id":135,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"65:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IRouterClient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":184,"linearizedBaseContracts":[184],"name":"IRouterClient","nameLocation":"116:13:2","nodeType":"ContractDefinition","nodes":[{"errorSelector":"ae236d9c","id":140,"name":"UnsupportedDestinationChain","nameLocation":"140:27:2","nodeType":"ErrorDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"destChainSelector","nameLocation":"175:17:2","nodeType":"VariableDeclaration","scope":140,"src":"168:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":137,"name":"uint64","nodeType":"ElementaryTypeName","src":"168:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"167:26:2"},"src":"134:60:2"},{"errorSelector":"07da6ee6","id":142,"name":"InsufficientFeeTokenAmount","nameLocation":"203:26:2","nodeType":"ErrorDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"229:2:2"},"src":"197:35:2"},{"errorSelector":"1841b4e1","id":144,"name":"InvalidMsgValue","nameLocation":"241:15:2","nodeType":"ErrorDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"256:2:2"},"src":"235:24:2"},{"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"263:189:2","text":"@notice Checks if the given chain ID is supported for sending/receiving.\n @param chainSelector The chain to check.\n @return supported is true if it is supported, false if not."},"functionSelector":"a48a9058","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"isChainSupported","nameLocation":"464:16:2","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"chainSelector","nameLocation":"488:13:2","nodeType":"VariableDeclaration","scope":152,"src":"481:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":146,"name":"uint64","nodeType":"ElementaryTypeName","src":"481:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"480:22:2"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"supported","nameLocation":"531:9:2","nodeType":"VariableDeclaration","scope":152,"src":"526:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"526:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"525:16:2"},"scope":184,"src":"455:87:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"546:224:2","text":"@notice Gets a list of all supported tokens which can be sent or received\n to/from a given chain id.\n @param chainSelector The chainSelector.\n @return tokens The addresses of all tokens that are supported."},"functionSelector":"fbca3b74","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"getSupportedTokens","nameLocation":"782:18:2","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"chainSelector","nameLocation":"808:13:2","nodeType":"VariableDeclaration","scope":161,"src":"801:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":154,"name":"uint64","nodeType":"ElementaryTypeName","src":"801:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"800:22:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"tokens","nameLocation":"863:6:2","nodeType":"VariableDeclaration","scope":161,"src":"846:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":158,"nodeType":"ArrayTypeName","src":"846:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"845:25:2"},"scope":184,"src":"773:98:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"875:302:2","text":"@param destinationChainSelector The destination chainSelector\n @param message The cross-chain CCIP message including data and/or tokens\n @return fee returns guaranteed execution fee for the specified message\n delivery to destination chain\n @dev returns 0 fee on invalid message."},"functionSelector":"20487ded","id":172,"implemented":false,"kind":"function","modifiers":[],"name":"getFee","nameLocation":"1189:6:2","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"destinationChainSelector","nameLocation":"1208:24:2","nodeType":"VariableDeclaration","scope":172,"src":"1201:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":163,"name":"uint64","nodeType":"ElementaryTypeName","src":"1201:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":167,"mutability":"mutable","name":"message","nameLocation":"1267:7:2","nodeType":"VariableDeclaration","scope":172,"src":"1238:36:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage"},"typeName":{"id":166,"nodeType":"UserDefinedTypeName","pathNode":{"id":165,"name":"Client.EVM2AnyMessage","nameLocations":["1238:6:2","1245:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":217,"src":"1238:21:2"},"referencedDeclaration":217,"src":"1238:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_storage_ptr","typeString":"struct Client.EVM2AnyMessage"}},"visibility":"internal"}],"src":"1195:83:2"},"returnParameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"fee","nameLocation":"1310:3:2","nodeType":"VariableDeclaration","scope":172,"src":"1302:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1302:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1301:13:2"},"scope":184,"src":"1180:135:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"1319:369:2","text":"@notice Request a message to be sent to the destination chain\n @param destinationChainSelector The destination chain ID\n @param message The cross-chain CCIP message including data and/or tokens\n @return messageId The message ID\n @dev Note if msg.value is larger than the required fee (from getFee) we accept\n the overpayment with no refund."},"functionSelector":"96f4e9f9","id":183,"implemented":false,"kind":"function","modifiers":[],"name":"ccipSend","nameLocation":"1700:8:2","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"destinationChainSelector","nameLocation":"1721:24:2","nodeType":"VariableDeclaration","scope":183,"src":"1714:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":174,"name":"uint64","nodeType":"ElementaryTypeName","src":"1714:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"message","nameLocation":"1782:7:2","nodeType":"VariableDeclaration","scope":183,"src":"1751:38:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_calldata_ptr","typeString":"struct Client.EVM2AnyMessage"},"typeName":{"id":177,"nodeType":"UserDefinedTypeName","pathNode":{"id":176,"name":"Client.EVM2AnyMessage","nameLocations":["1751:6:2","1758:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":217,"src":"1751:21:2"},"referencedDeclaration":217,"src":"1751:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_storage_ptr","typeString":"struct Client.EVM2AnyMessage"}},"visibility":"internal"}],"src":"1708:85:2"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":183,"src":"1820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1820:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1819:9:2"},"scope":184,"src":"1691:138:2","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":185,"src":"106:1725:2","usedErrors":[140,142,144],"usedEvents":[]}],"src":"32:1800:2"},"id":2},"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol":{"ast":{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","exportedSymbols":{"Client":[241]},"id":242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":186,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"Client","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":241,"linearizedBaseContracts":[241],"name":"Client","nameLocation":"90:6:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Client.EVMTokenAmount","id":191,"members":[{"constant":false,"id":188,"mutability":"mutable","name":"token","nameLocation":"137:5:3","nodeType":"VariableDeclaration","scope":191,"src":"129:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"129:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"amount","nameLocation":"193:6:3","nodeType":"VariableDeclaration","scope":191,"src":"185:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"EVMTokenAmount","nameLocation":"108:14:3","nodeType":"StructDefinition","scope":241,"src":"101:124:3","visibility":"public"},{"canonicalName":"Client.Any2EVMMessage","id":204,"members":[{"constant":false,"id":193,"mutability":"mutable","name":"messageId","nameLocation":"265:9:3","nodeType":"VariableDeclaration","scope":204,"src":"257:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"257:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"sourceChainSelector","nameLocation":"337:19:3","nodeType":"VariableDeclaration","scope":204,"src":"330:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":194,"name":"uint64","nodeType":"ElementaryTypeName","src":"330:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"sender","nameLocation":"394:6:3","nodeType":"VariableDeclaration","scope":204,"src":"388:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":196,"name":"bytes","nodeType":"ElementaryTypeName","src":"388:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"data","nameLocation":"463:4:3","nodeType":"VariableDeclaration","scope":204,"src":"457:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"457:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"destTokenAmounts","nameLocation":"527:16:3","nodeType":"VariableDeclaration","scope":204,"src":"510:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_storage_$dyn_storage_ptr","typeString":"struct Client.EVMTokenAmount[]"},"typeName":{"baseType":{"id":201,"nodeType":"UserDefinedTypeName","pathNode":{"id":200,"name":"EVMTokenAmount","nameLocations":["510:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":191,"src":"510:14:3"},"referencedDeclaration":191,"src":"510:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_EVMTokenAmount_$191_storage_ptr","typeString":"struct Client.EVMTokenAmount"}},"id":202,"nodeType":"ArrayTypeName","src":"510:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_storage_$dyn_storage_ptr","typeString":"struct Client.EVMTokenAmount[]"}},"visibility":"internal"}],"name":"Any2EVMMessage","nameLocation":"236:14:3","nodeType":"StructDefinition","scope":241,"src":"229:390:3","visibility":"public"},{"canonicalName":"Client.EVM2AnyMessage","id":217,"members":[{"constant":false,"id":206,"mutability":"mutable","name":"receiver","nameLocation":"741:8:3","nodeType":"VariableDeclaration","scope":217,"src":"735:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":205,"name":"bytes","nodeType":"ElementaryTypeName","src":"735:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"data","nameLocation":"813:4:3","nodeType":"VariableDeclaration","scope":217,"src":"807:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":207,"name":"bytes","nodeType":"ElementaryTypeName","src":"807:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"tokenAmounts","nameLocation":"856:12:3","nodeType":"VariableDeclaration","scope":217,"src":"839:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_storage_$dyn_storage_ptr","typeString":"struct Client.EVMTokenAmount[]"},"typeName":{"baseType":{"id":210,"nodeType":"UserDefinedTypeName","pathNode":{"id":209,"name":"EVMTokenAmount","nameLocations":["839:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":191,"src":"839:14:3"},"referencedDeclaration":191,"src":"839:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_EVMTokenAmount_$191_storage_ptr","typeString":"struct Client.EVMTokenAmount"}},"id":211,"nodeType":"ArrayTypeName","src":"839:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_storage_$dyn_storage_ptr","typeString":"struct Client.EVMTokenAmount[]"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"feeToken","nameLocation":"901:8:3","nodeType":"VariableDeclaration","scope":217,"src":"893:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"extraArgs","nameLocation":"987:9:3","nodeType":"VariableDeclaration","scope":217,"src":"981:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":215,"name":"bytes","nodeType":"ElementaryTypeName","src":"981:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"EVM2AnyMessage","nameLocation":"714:14:3","nodeType":"StructDefinition","scope":241,"src":"707:345:3","visibility":"public"},{"constant":true,"functionSelector":"3ab8c0d0","id":220,"mutability":"constant","name":"EVM_EXTRA_ARGS_V1_TAG","nameLocation":"1177:21:3","nodeType":"VariableDeclaration","scope":241,"src":"1154:57:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":218,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1154:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783937613635376339","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1201:10:3","typeDescriptions":{"typeIdentifier":"t_rational_2544261065_by_1","typeString":"int_const 2544261065"},"value":"0x97a657c9"},"visibility":"public"},{"canonicalName":"Client.EVMExtraArgsV1","id":225,"members":[{"constant":false,"id":222,"mutability":"mutable","name":"gasLimit","nameLocation":"1251:8:3","nodeType":"VariableDeclaration","scope":225,"src":"1243:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"strict","nameLocation":"1320:6:3","nodeType":"VariableDeclaration","scope":225,"src":"1315:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":223,"name":"bool","nodeType":"ElementaryTypeName","src":"1315:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EVMExtraArgsV1","nameLocation":"1222:14:3","nodeType":"StructDefinition","scope":241,"src":"1215:156:3","visibility":"public"},{"body":{"id":239,"nodeType":"Block","src":"1471:74:3","statements":[{"expression":{"arguments":[{"id":235,"name":"EVM_EXTRA_ARGS_V1_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1507:21:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":236,"name":"extraArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1530:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_EVMExtraArgsV1_$225_memory_ptr","typeString":"struct Client.EVMExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_struct$_EVMExtraArgsV1_$225_memory_ptr","typeString":"struct Client.EVMExtraArgsV1 memory"}],"expression":{"id":233,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1484:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1488:18:3","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1484:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1484:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":232,"id":238,"nodeType":"Return","src":"1477:63:3"}]},"id":240,"implemented":true,"kind":"function","modifiers":[],"name":"_argsToBytes","nameLocation":"1384:12:3","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"extraArgs","nameLocation":"1419:9:3","nodeType":"VariableDeclaration","scope":240,"src":"1397:31:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVMExtraArgsV1_$225_memory_ptr","typeString":"struct Client.EVMExtraArgsV1"},"typeName":{"id":227,"nodeType":"UserDefinedTypeName","pathNode":{"id":226,"name":"EVMExtraArgsV1","nameLocations":["1397:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"1397:14:3"},"referencedDeclaration":225,"src":"1397:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_EVMExtraArgsV1_$225_storage_ptr","typeString":"struct Client.EVMExtraArgsV1"}},"visibility":"internal"}],"src":"1396:33:3"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"bts","nameLocation":"1466:3:3","nodeType":"VariableDeclaration","scope":240,"src":"1453:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":230,"name":"bytes","nodeType":"ElementaryTypeName","src":"1453:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1452:18:3"},"scope":241,"src":"1375:170:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":242,"src":"82:1465:3","usedErrors":[],"usedEvents":[]}],"src":"32:1516:3"},"id":3},"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[319]},"id":320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":243,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":319,"linearizedBaseContracts":[319],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"223:148:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":253,"name":"Transfer","nameLocation":"380:8:4","nodeType":"EventDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"405:4:4","nodeType":"VariableDeclaration","scope":253,"src":"389:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"427:2:4","nodeType":"VariableDeclaration","scope":253,"src":"411:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":251,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"439:5:4","nodeType":"VariableDeclaration","scope":253,"src":"431:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"388:57:4"},"src":"374:72:4"},{"anonymous":false,"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"450:142:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":262,"name":"Approval","nameLocation":"601:8:4","nodeType":"EventDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"626:5:4","nodeType":"VariableDeclaration","scope":262,"src":"610:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"649:7:4","nodeType":"VariableDeclaration","scope":262,"src":"633:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":260,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"666:5:4","nodeType":"VariableDeclaration","scope":262,"src":"658:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"609:63:4"},"src":"595:78:4"},{"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"677:62:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":268,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"751:11:4","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"762:2:4"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"788:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"788:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"787:9:4"},"scope":319,"src":"742:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"801:68:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":276,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"881:9:4","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"account","nameLocation":"899:7:4","nodeType":"VariableDeclaration","scope":276,"src":"891:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:17:4"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"931:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"930:9:4"},"scope":319,"src":"872:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"944:190:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":286,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1146:8:4","nodeType":"FunctionDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"to","nameLocation":"1163:2:4","nodeType":"VariableDeclaration","scope":286,"src":"1155:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"amount","nameLocation":"1175:6:4","nodeType":"VariableDeclaration","scope":286,"src":"1167:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1154:28:4"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":286,"src":"1201:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":283,"name":"bool","nodeType":"ElementaryTypeName","src":"1201:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1200:6:4"},"scope":319,"src":"1137:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"1211:252:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1475:9:4","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"1493:5:4","nodeType":"VariableDeclaration","scope":296,"src":"1485:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"1485:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"spender","nameLocation":"1508:7:4","nodeType":"VariableDeclaration","scope":296,"src":"1500:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1484:32:4"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":296,"src":"1540:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1540:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1539:9:4"},"scope":319,"src":"1466:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"1553:616:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":306,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2181:7:4","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"spender","nameLocation":"2197:7:4","nodeType":"VariableDeclaration","scope":306,"src":"2189:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"2189:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"amount","nameLocation":"2214:6:4","nodeType":"VariableDeclaration","scope":306,"src":"2206:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2206:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2188:33:4"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"2240:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"2240:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2239:6:4"},"scope":319,"src":"2172:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"2250:271:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":318,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2533:12:4","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"from","nameLocation":"2559:4:4","nodeType":"VariableDeclaration","scope":318,"src":"2551:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"to","nameLocation":"2577:2:4","nodeType":"VariableDeclaration","scope":318,"src":"2569:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"amount","nameLocation":"2593:6:4","nodeType":"VariableDeclaration","scope":318,"src":"2585:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2585:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2545:58:4"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":318,"src":"2622:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":315,"name":"bool","nodeType":"ElementaryTypeName","src":"2622:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2621:6:4"},"scope":319,"src":"2524:104:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":320,"src":"202:2428:4","usedErrors":[],"usedEvents":[253,262]}],"src":"106:2524:4"},"id":4},"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[331]},"id":332,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":321,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"125:279:5","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":331,"linearizedBaseContracts":[331],"name":"IERC165","nameLocation":"415:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"427:333:5","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":330,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:5","nodeType":"FunctionDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:5","nodeType":"VariableDeclaration","scope":330,"src":"790:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":324,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:5"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":330,"src":"833:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":327,"name":"bool","nodeType":"ElementaryTypeName","src":"833:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"832:6:5"},"scope":331,"src":"763:76:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":332,"src":"405:436:5","usedErrors":[],"usedEvents":[]}],"src":"100:741:5"},"id":5},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[427]},"id":428,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":333,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":427,"linearizedBaseContracts":[427],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"97:267:6","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":344,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:6","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"392:2:6"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":344,"src":"418:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":336,"name":"uint16","nodeType":"ElementaryTypeName","src":"418:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":344,"src":"426:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":338,"name":"uint32","nodeType":"ElementaryTypeName","src":"426:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":344,"src":"434:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":341,"nodeType":"ArrayTypeName","src":"434:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"417:34:6"},"scope":427,"src":"367:85:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"456:1511:6","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":360,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"1979:18:6","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"keyHash","nameLocation":"2011:7:6","nodeType":"VariableDeclaration","scope":360,"src":"2003:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"subId","nameLocation":"2031:5:6","nodeType":"VariableDeclaration","scope":360,"src":"2024:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":348,"name":"uint64","nodeType":"ElementaryTypeName","src":"2024:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":351,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2049:27:6","nodeType":"VariableDeclaration","scope":360,"src":"2042:34:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":350,"name":"uint16","nodeType":"ElementaryTypeName","src":"2042:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2089:16:6","nodeType":"VariableDeclaration","scope":360,"src":"2082:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":352,"name":"uint32","nodeType":"ElementaryTypeName","src":"2082:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":355,"mutability":"mutable","name":"numWords","nameLocation":"2118:8:6","nodeType":"VariableDeclaration","scope":360,"src":"2111:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":354,"name":"uint32","nodeType":"ElementaryTypeName","src":"2111:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1997:133:6"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"requestId","nameLocation":"2157:9:6","nodeType":"VariableDeclaration","scope":360,"src":"2149:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:19:6"},"scope":427,"src":"1970:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"2172:384:6","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":366,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2568:18:6","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"2586:2:6"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"subId","nameLocation":"2614:5:6","nodeType":"VariableDeclaration","scope":366,"src":"2607:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":363,"name":"uint64","nodeType":"ElementaryTypeName","src":"2607:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2606:14:6"},"scope":427,"src":"2559:62:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"2625:381:6","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":381,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3018:15:6","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"subId","nameLocation":"3046:5:6","nodeType":"VariableDeclaration","scope":381,"src":"3039:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":368,"name":"uint64","nodeType":"ElementaryTypeName","src":"3039:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3033:22:6"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"balance","nameLocation":"3086:7:6","nodeType":"VariableDeclaration","scope":381,"src":"3079:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":371,"name":"uint96","nodeType":"ElementaryTypeName","src":"3079:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"reqCount","nameLocation":"3102:8:6","nodeType":"VariableDeclaration","scope":381,"src":"3095:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":373,"name":"uint64","nodeType":"ElementaryTypeName","src":"3095:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"owner","nameLocation":"3120:5:6","nodeType":"VariableDeclaration","scope":381,"src":"3112:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"consumers","nameLocation":"3144:9:6","nodeType":"VariableDeclaration","scope":381,"src":"3127:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":377,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":378,"nodeType":"ArrayTypeName","src":"3127:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3078:76:6"},"scope":427,"src":"3009:146:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"3159:164:6","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":389,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3335:32:6","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"subId","nameLocation":"3375:5:6","nodeType":"VariableDeclaration","scope":389,"src":"3368:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":383,"name":"uint64","nodeType":"ElementaryTypeName","src":"3368:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"newOwner","nameLocation":"3390:8:6","nodeType":"VariableDeclaration","scope":389,"src":"3382:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3367:32:6"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"3408:0:6"},"scope":427,"src":"3326:83:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"3413:212:6","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":395,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3637:31:6","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"subId","nameLocation":"3676:5:6","nodeType":"VariableDeclaration","scope":395,"src":"3669:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":391,"name":"uint64","nodeType":"ElementaryTypeName","src":"3669:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3668:14:6"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"3691:0:6"},"scope":427,"src":"3628:64:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"3696:170:6","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":403,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3878:11:6","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"subId","nameLocation":"3897:5:6","nodeType":"VariableDeclaration","scope":403,"src":"3890:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":397,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"consumer","nameLocation":"3912:8:6","nodeType":"VariableDeclaration","scope":403,"src":"3904:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3889:32:6"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"3930:0:6"},"scope":427,"src":"3869:62:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"3935:172:6","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":411,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4119:14:6","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"subId","nameLocation":"4141:5:6","nodeType":"VariableDeclaration","scope":411,"src":"4134:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":405,"name":"uint64","nodeType":"ElementaryTypeName","src":"4134:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"consumer","nameLocation":"4156:8:6","nodeType":"VariableDeclaration","scope":411,"src":"4148:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4133:32:6"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"4174:0:6"},"scope":427,"src":"4110:65:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"4179:140:6","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":419,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4331:18:6","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"subId","nameLocation":"4357:5:6","nodeType":"VariableDeclaration","scope":419,"src":"4350:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":413,"name":"uint64","nodeType":"ElementaryTypeName","src":"4350:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"to","nameLocation":"4372:2:6","nodeType":"VariableDeclaration","scope":419,"src":"4364:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4349:26:6"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"4384:0:6"},"scope":427,"src":"4322:63:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4690:20:6","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"subId","nameLocation":"4718:5:6","nodeType":"VariableDeclaration","scope":426,"src":"4711:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":420,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:14:6"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"4748:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":423,"name":"bool","nodeType":"ElementaryTypeName","src":"4748:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4747:6:6"},"scope":427,"src":"4681:73:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":428,"src":"57:4699:6","usedErrors":[],"usedEvents":[]}],"src":"32:4725:6"},"id":6},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[522]},"id":523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":429,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"LinkTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":522,"linearizedBaseContracts":[522],"name":"LinkTokenInterface","nameLocation":"67:18:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":438,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:7","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"owner","nameLocation":"117:5:7","nodeType":"VariableDeclaration","scope":438,"src":"109:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"spender","nameLocation":"132:7:7","nodeType":"VariableDeclaration","scope":438,"src":"124:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:7"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"remaining","nameLocation":"172:9:7","nodeType":"VariableDeclaration","scope":438,"src":"164:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:7"},"scope":522,"src":"90:93:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":447,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:7","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"spender","nameLocation":"212:7:7","nodeType":"VariableDeclaration","scope":447,"src":"204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"value","nameLocation":"229:5:7","nodeType":"VariableDeclaration","scope":447,"src":"221:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:7"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"success","nameLocation":"259:7:7","nodeType":"VariableDeclaration","scope":447,"src":"254:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":444,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:7"},"scope":522,"src":"187:81:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":454,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:7","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"owner","nameLocation":"299:5:7","nodeType":"VariableDeclaration","scope":454,"src":"291:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:7"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"balance","nameLocation":"337:7:7","nodeType":"VariableDeclaration","scope":454,"src":"329:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:7"},"scope":522,"src":"272:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":459,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:7","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"367:2:7"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:7","nodeType":"VariableDeclaration","scope":459,"src":"393:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":456,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:7"},"scope":522,"src":"350:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":468,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:7","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"spender","nameLocation":"452:7:7","nodeType":"VariableDeclaration","scope":468,"src":"444:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:7","nodeType":"VariableDeclaration","scope":468,"src":"461:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:7"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"success","nameLocation":"504:7:7","nodeType":"VariableDeclaration","scope":468,"src":"499:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":465,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:7"},"scope":522,"src":"418:95:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":475,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:7","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"spender","nameLocation":"551:7:7","nodeType":"VariableDeclaration","scope":475,"src":"543:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:7","nodeType":"VariableDeclaration","scope":475,"src":"560:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:7"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"593:0:7"},"scope":522,"src":"517:77:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":480,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:7","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"611:2:7"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:7","nodeType":"VariableDeclaration","scope":480,"src":"637:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":477,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:7"},"scope":522,"src":"598:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":485,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:7","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"681:2:7"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:7","nodeType":"VariableDeclaration","scope":485,"src":"707:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":482,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:7"},"scope":522,"src":"666:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":490,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:7","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"758:2:7"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:7","nodeType":"VariableDeclaration","scope":490,"src":"784:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:7"},"scope":522,"src":"738:73:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":499,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:7","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"841:2:7","nodeType":"VariableDeclaration","scope":499,"src":"833:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"value","nameLocation":"853:5:7","nodeType":"VariableDeclaration","scope":499,"src":"845:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:7"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"success","nameLocation":"883:7:7","nodeType":"VariableDeclaration","scope":499,"src":"878:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":496,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:7"},"scope":522,"src":"815:77:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":510,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:7","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"to","nameLocation":"929:2:7","nodeType":"VariableDeclaration","scope":510,"src":"921:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"value","nameLocation":"941:5:7","nodeType":"VariableDeclaration","scope":510,"src":"933:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"data","nameLocation":"963:4:7","nodeType":"VariableDeclaration","scope":510,"src":"948:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"948:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:48:7"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"success","nameLocation":"992:7:7","nodeType":"VariableDeclaration","scope":510,"src":"987:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"987:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"986:14:7"},"scope":522,"src":"896:105:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":521,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1014:12:7","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"from","nameLocation":"1035:4:7","nodeType":"VariableDeclaration","scope":521,"src":"1027:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"1027:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"to","nameLocation":"1049:2:7","nodeType":"VariableDeclaration","scope":521,"src":"1041:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"1061:5:7","nodeType":"VariableDeclaration","scope":521,"src":"1053:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:41:7"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"success","nameLocation":"1091:7:7","nodeType":"VariableDeclaration","scope":521,"src":"1086:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":518,"name":"bool","nodeType":"ElementaryTypeName","src":"1086:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1085:14:7"},"scope":522,"src":"1005:95:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":523,"src":"57:1045:7","usedErrors":[],"usedEvents":[]}],"src":"32:1071:7"},"id":7},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[580]},"id":581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":524,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"57:5275:8","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":580,"linearizedBaseContracts":[580],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:8","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":531,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:8","nodeType":"ErrorDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"have","nameLocation":"5413:4:8","nodeType":"VariableDeclaration","scope":531,"src":"5405:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"want","nameLocation":"5427:4:8","nodeType":"VariableDeclaration","scope":531,"src":"5419:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:8"},"src":"5373:60:8"},{"constant":false,"id":533,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:8","nodeType":"VariableDeclaration","scope":580,"src":"5436:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":543,"nodeType":"Block","src":"5593:43:8","statements":[{"expression":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":539,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5599:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":540,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"5616:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":542,"nodeType":"ExpressionStatement","src":"5599:32:8"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"5481:72:8","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":544,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:8","nodeType":"VariableDeclaration","scope":544,"src":"5568:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:8"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"5593:0:8"},"scope":580,"src":"5556:80:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"5640:686:8","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":553,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:8","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:8","nodeType":"VariableDeclaration","scope":553,"src":"6357:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:8","nodeType":"VariableDeclaration","scope":553,"src":"6376:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":549,"nodeType":"ArrayTypeName","src":"6376:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:8"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"6422:0:8"},"scope":580,"src":"6329:94:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"6707:167:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6717:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":563,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6731:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":572,"nodeType":"IfStatement","src":"6713:109:8","trueBody":{"id":571,"nodeType":"Block","src":"6747:75:8","statements":[{"errorCall":{"arguments":[{"expression":{"id":566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:6:8","memberName":"sender","nodeType":"MemberAccess","src":"6788:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":568,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6800:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":565,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"6762:25:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"RevertStatement","src":"6755:60:8"}]}},{"expression":{"arguments":[{"id":574,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6846:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":575,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6857:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":573,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"6827:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"ExpressionStatement","src":"6827:42:8"}]},"functionSelector":"1fe543e3","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:8","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:8","nodeType":"VariableDeclaration","scope":579,"src":"6649:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:8","nodeType":"VariableDeclaration","scope":579,"src":"6668:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":557,"nodeType":"ArrayTypeName","src":"6668:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:8"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"6707:0:8"},"scope":580,"src":"6618:256:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":581,"src":"5333:1543:8","usedErrors":[531],"usedEvents":[]}],"src":"32:6845:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2467]},"id":585,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":582,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":585,"sourceUnit":2468,"src":"132:59:9","symbolAliases":[{"foreign":{"id":583,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"140:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[2467],"IERC4906":[608],"IERC721":[1953]},"id":609,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":586,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:10"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":609,"sourceUnit":585,"src":"133:38:10","symbolAliases":[{"foreign":{"id":587,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"141:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":590,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":609,"sourceUnit":613,"src":"172:38:10","symbolAliases":[{"foreign":{"id":589,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"180:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":592,"name":"IERC165","nameLocations":["279:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2467,"src":"279:7:10"},"id":593,"nodeType":"InheritanceSpecifier","src":"279:7:10"},{"baseName":{"id":594,"name":"IERC721","nameLocations":["288:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":1953,"src":"288:7:10"},"id":595,"nodeType":"InheritanceSpecifier","src":"288:7:10"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"212:45:10","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":608,"linearizedBaseContracts":[608,1953,2467],"name":"IERC4906","nameLocation":"267:8:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"302:201:10","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":600,"name":"MetadataUpdate","nameLocation":"514:14:10","nodeType":"EventDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:10","nodeType":"VariableDeclaration","scope":600,"src":"529:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:10"},"src":"508:39:10"},{"anonymous":false,"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"553:212:10","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":607,"name":"BatchMetadataUpdate","nameLocation":"776:19:10","nodeType":"EventDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:10","nodeType":"VariableDeclaration","scope":607,"src":"796:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":605,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:10","nodeType":"VariableDeclaration","scope":607,"src":"818:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:10"},"src":"770:68:10"}],"scope":609,"src":"257:583:10","usedErrors":[],"usedEvents":[600,607,1852,1861,1870]}],"src":"107:734:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1953]},"id":613,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":610,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":613,"sourceUnit":1954,"src":"132:52:11","symbolAliases":[{"foreign":{"id":611,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"140:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:11"},"id":11},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[749],"IERC20Errors":[654],"IERC721Errors":[702]},"id":750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":614,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"138:139:12","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":654,"linearizedBaseContracts":[654],"name":"IERC20Errors","nameLocation":"288:12:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"307:309:12","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":624,"name":"ERC20InsufficientBalance","nameLocation":"627:24:12","nodeType":"ErrorDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"sender","nameLocation":"660:6:12","nodeType":"VariableDeclaration","scope":624,"src":"652:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"balance","nameLocation":"676:7:12","nodeType":"VariableDeclaration","scope":624,"src":"668:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"needed","nameLocation":"693:6:12","nodeType":"VariableDeclaration","scope":624,"src":"685:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:12"},"src":"621:80:12"},{"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"707:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":629,"name":"ERC20InvalidSender","nameLocation":"870:18:12","nodeType":"ErrorDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"sender","nameLocation":"897:6:12","nodeType":"VariableDeclaration","scope":629,"src":"889:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:12"},"src":"864:41:12"},{"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"911:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":634,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:12","nodeType":"ErrorDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:12","nodeType":"VariableDeclaration","scope":634,"src":"1102:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:12"},"src":"1075:45:12"},{"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"1126:345:12","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":643,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:12","nodeType":"ErrorDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"spender","nameLocation":"1517:7:12","nodeType":"VariableDeclaration","scope":643,"src":"1509:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:12","nodeType":"VariableDeclaration","scope":643,"src":"1526:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"needed","nameLocation":"1553:6:12","nodeType":"VariableDeclaration","scope":643,"src":"1545:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:12"},"src":"1476:85:12"},{"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"1567:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":648,"name":"ERC20InvalidApprover","nameLocation":"1752:20:12","nodeType":"ErrorDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"approver","nameLocation":"1781:8:12","nodeType":"VariableDeclaration","scope":648,"src":"1773:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:12"},"src":"1746:45:12"},{"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"1797:195:12","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":653,"name":"ERC20InvalidSpender","nameLocation":"2003:19:12","nodeType":"ErrorDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"spender","nameLocation":"2031:7:12","nodeType":"VariableDeclaration","scope":653,"src":"2023:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:12"},"src":"1997:43:12"}],"scope":750,"src":"278:1764:12","usedErrors":[624,629,634,643,648,653],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"2044:141:12","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":702,"linearizedBaseContracts":[702],"name":"IERC721Errors","nameLocation":"2196:13:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"2216:219:12","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":660,"name":"ERC721InvalidOwner","nameLocation":"2446:18:12","nodeType":"ErrorDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"owner","nameLocation":"2473:5:12","nodeType":"VariableDeclaration","scope":660,"src":"2465:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:12"},"src":"2440:40:12"},{"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"2486:132:12","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":665,"name":"ERC721NonexistentToken","nameLocation":"2629:22:12","nodeType":"ErrorDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:12","nodeType":"VariableDeclaration","scope":665,"src":"2652:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:12"},"src":"2623:46:12"},{"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"2675:289:12","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":674,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:12","nodeType":"ErrorDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"sender","nameLocation":"3004:6:12","nodeType":"VariableDeclaration","scope":674,"src":"2996:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:12","nodeType":"VariableDeclaration","scope":674,"src":"3012:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"owner","nameLocation":"3037:5:12","nodeType":"VariableDeclaration","scope":674,"src":"3029:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:12"},"src":"2969:75:12"},{"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"3050:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":679,"name":"ERC721InvalidSender","nameLocation":"3213:19:12","nodeType":"ErrorDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"sender","nameLocation":"3241:6:12","nodeType":"VariableDeclaration","scope":679,"src":"3233:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:12"},"src":"3207:42:12"},{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"3255:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":684,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:12","nodeType":"ErrorDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:12","nodeType":"VariableDeclaration","scope":684,"src":"3447:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:12"},"src":"3419:46:12"},{"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"3471:247:12","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":691,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:12","nodeType":"ErrorDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"operator","nameLocation":"3764:8:12","nodeType":"VariableDeclaration","scope":691,"src":"3756:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:12","nodeType":"VariableDeclaration","scope":691,"src":"3774:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:12"},"src":"3723:68:12"},{"documentation":{"id":692,"nodeType":"StructuredDocumentation","src":"3797:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":696,"name":"ERC721InvalidApprover","nameLocation":"3982:21:12","nodeType":"ErrorDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"approver","nameLocation":"4012:8:12","nodeType":"VariableDeclaration","scope":696,"src":"4004:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:12"},"src":"3976:46:12"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"4028:197:12","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":701,"name":"ERC721InvalidOperator","nameLocation":"4236:21:12","nodeType":"ErrorDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"operator","nameLocation":"4266:8:12","nodeType":"VariableDeclaration","scope":701,"src":"4258:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:12"},"src":"4230:46:12"}],"scope":750,"src":"2186:2092:12","usedErrors":[660,665,674,679,684,691,696,701],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"4280:143:12","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":749,"linearizedBaseContracts":[749],"name":"IERC1155Errors","nameLocation":"4434:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"4455:361:12","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":714,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:12","nodeType":"ErrorDefinition","parameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"sender","nameLocation":"4862:6:12","nodeType":"VariableDeclaration","scope":714,"src":"4854:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"balance","nameLocation":"4878:7:12","nodeType":"VariableDeclaration","scope":714,"src":"4870:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"needed","nameLocation":"4895:6:12","nodeType":"VariableDeclaration","scope":714,"src":"4887:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:12","nodeType":"VariableDeclaration","scope":714,"src":"4903:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:12"},"src":"4821:99:12"},{"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"4926:152:12","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":719,"name":"ERC1155InvalidSender","nameLocation":"5089:20:12","nodeType":"ErrorDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"sender","nameLocation":"5118:6:12","nodeType":"VariableDeclaration","scope":719,"src":"5110:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:12"},"src":"5083:43:12"},{"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"5132:159:12","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":724,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:12","nodeType":"ErrorDefinition","parameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:12","nodeType":"VariableDeclaration","scope":724,"src":"5325:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:12"},"src":"5296:47:12"},{"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"5349:256:12","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":731,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:12","nodeType":"ErrorDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"operator","nameLocation":"5653:8:12","nodeType":"VariableDeclaration","scope":731,"src":"5645:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"owner","nameLocation":"5671:5:12","nodeType":"VariableDeclaration","scope":731,"src":"5663:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:12"},"src":"5610:68:12"},{"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"5684:174:12","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":736,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:12","nodeType":"ErrorDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"approver","nameLocation":"5900:8:12","nodeType":"VariableDeclaration","scope":736,"src":"5892:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:12"},"src":"5863:47:12"},{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"5916:197:12","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":741,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:12","nodeType":"ErrorDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"operator","nameLocation":"6155:8:12","nodeType":"VariableDeclaration","scope":741,"src":"6147:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:12"},"src":"6118:47:12"},{"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"6171:280:12","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":748,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:12","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:12","nodeType":"VariableDeclaration","scope":748,"src":"6488:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:12","nodeType":"VariableDeclaration","scope":748,"src":"6507:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:12"},"src":"6456:73:12"}],"scope":750,"src":"4424:2107:12","usedErrors":[714,719,724,731,736,741,748],"usedEvents":[]}],"src":"112:6420:12"},"id":12},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[827]},"id":828,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":751,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"132:70:13","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":827,"linearizedBaseContracts":[827],"name":"IERC20","nameLocation":"213:6:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"226:158:13","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":761,"name":"Transfer","nameLocation":"395:8:13","nodeType":"EventDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:13","nodeType":"VariableDeclaration","scope":761,"src":"404:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:13","nodeType":"VariableDeclaration","scope":761,"src":"426:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:13","nodeType":"VariableDeclaration","scope":761,"src":"446:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:13"},"src":"389:72:13"},{"anonymous":false,"documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"467:148:13","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":770,"name":"Approval","nameLocation":"626:8:13","nodeType":"EventDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:13","nodeType":"VariableDeclaration","scope":770,"src":"635:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:13","nodeType":"VariableDeclaration","scope":770,"src":"658:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:13","nodeType":"VariableDeclaration","scope":770,"src":"683:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:13"},"src":"620:78:13"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"704:65:13","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:13","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"794:2:13"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"820:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:13"},"scope":827,"src":"774:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"835:71:13","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":784,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:13","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"account","nameLocation":"938:7:13","nodeType":"VariableDeclaration","scope":784,"src":"930:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:13"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"970:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:13"},"scope":827,"src":"911:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"985:213:13","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":794,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:13","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"1229:2:13","nodeType":"VariableDeclaration","scope":794,"src":"1221:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"value","nameLocation":"1241:5:13","nodeType":"VariableDeclaration","scope":794,"src":"1233:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:13"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":794,"src":"1266:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":791,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:13"},"scope":827,"src":"1203:69:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":795,"nodeType":"StructuredDocumentation","src":"1278:264:13","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":804,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:13","nodeType":"FunctionDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"owner","nameLocation":"1574:5:13","nodeType":"VariableDeclaration","scope":804,"src":"1566:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":799,"mutability":"mutable","name":"spender","nameLocation":"1589:7:13","nodeType":"VariableDeclaration","scope":804,"src":"1581:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:13"},"returnParameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":804,"src":"1621:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:13"},"scope":827,"src":"1547:83:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"1636:667:13","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":814,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:13","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"spender","nameLocation":"2333:7:13","nodeType":"VariableDeclaration","scope":814,"src":"2325:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"value","nameLocation":"2350:5:13","nodeType":"VariableDeclaration","scope":814,"src":"2342:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:13"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"2375:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":811,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:13"},"scope":827,"src":"2308:73:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"2387:297:13","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:13","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"from","nameLocation":"2719:4:13","nodeType":"VariableDeclaration","scope":826,"src":"2711:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"to","nameLocation":"2733:2:13","nodeType":"VariableDeclaration","scope":826,"src":"2725:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"value","nameLocation":"2745:5:13","nodeType":"VariableDeclaration","scope":826,"src":"2737:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:13"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"2770:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":823,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:13"},"scope":827,"src":"2689:87:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":828,"src":"203:2575:13","usedErrors":[],"usedEvents":[761,770]}],"src":"106:2673:13"},"id":13},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2176],"ERC165":[2455],"ERC721":[1836],"IERC165":[2467],"IERC721":[1953],"IERC721Errors":[702],"IERC721Metadata":[2154],"IERC721Receiver":[1971],"Strings":[2431]},"id":1837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":829,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1837,"sourceUnit":1954,"src":"133:38:14","symbolAliases":[{"foreign":{"id":830,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"141:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1837,"sourceUnit":1972,"src":"172:54:14","symbolAliases":[{"foreign":{"id":832,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"180:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1837,"sourceUnit":2155,"src":"227:65:14","symbolAliases":[{"foreign":{"id":834,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"235:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1837,"sourceUnit":2177,"src":"293:48:14","symbolAliases":[{"foreign":{"id":836,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"301:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1837,"sourceUnit":2432,"src":"342:48:14","symbolAliases":[{"foreign":{"id":838,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"350:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1837,"sourceUnit":2456,"src":"391:69:14","symbolAliases":[{"foreign":{"id":840,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"399:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":841,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"408:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1837,"sourceUnit":750,"src":"461:66:14","symbolAliases":[{"foreign":{"id":843,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"469:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":846,"name":"Context","nameLocations":["804:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2176,"src":"804:7:14"},"id":847,"nodeType":"InheritanceSpecifier","src":"804:7:14"},{"baseName":{"id":848,"name":"ERC165","nameLocations":["813:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"813:6:14"},"id":849,"nodeType":"InheritanceSpecifier","src":"813:6:14"},{"baseName":{"id":850,"name":"IERC721","nameLocations":["821:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":1953,"src":"821:7:14"},"id":851,"nodeType":"InheritanceSpecifier","src":"821:7:14"},{"baseName":{"id":852,"name":"IERC721Metadata","nameLocations":["830:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":2154,"src":"830:15:14"},"id":853,"nodeType":"InheritanceSpecifier","src":"830:15:14"},{"baseName":{"id":854,"name":"IERC721Errors","nameLocations":["847:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":702,"src":"847:13:14"},"id":855,"nodeType":"InheritanceSpecifier","src":"847:13:14"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"529:246:14","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1836,"linearizedBaseContracts":[1836,702,2154,1953,2455,2467,2176],"name":"ERC721","nameLocation":"794:6:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":858,"libraryName":{"id":856,"name":"Strings","nameLocations":["873:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2431,"src":"873:7:14"},"nodeType":"UsingForDirective","src":"867:26:14","typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":860,"mutability":"mutable","name":"_name","nameLocation":"932:5:14","nodeType":"VariableDeclaration","scope":1836,"src":"917:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":859,"name":"string","nodeType":"ElementaryTypeName","src":"917:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":862,"mutability":"mutable","name":"_symbol","nameLocation":"979:7:14","nodeType":"VariableDeclaration","scope":1836,"src":"964:22:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":861,"name":"string","nodeType":"ElementaryTypeName","src":"964:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":866,"mutability":"mutable","name":"_owners","nameLocation":"1037:7:14","nodeType":"VariableDeclaration","scope":1836,"src":"993:51:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":865,"keyName":"tokenId","keyNameLocation":"1009:7:14","keyType":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"993:35:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":870,"mutability":"mutable","name":"_balances","nameLocation":"1093:9:14","nodeType":"VariableDeclaration","scope":1836,"src":"1051:51:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":869,"keyName":"owner","keyNameLocation":"1067:5:14","keyType":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1051:33:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1076:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":874,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1153:15:14","nodeType":"VariableDeclaration","scope":1836,"src":"1109:59:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":873,"keyName":"tokenId","keyNameLocation":"1125:7:14","keyType":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1109:35:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":880,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1243:18:14","nodeType":"VariableDeclaration","scope":1836,"src":"1175:86:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":879,"keyName":"owner","keyNameLocation":"1191:5:14","keyType":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"1183:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1175:59:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":878,"keyName":"operator","keyNameLocation":"1216:8:14","keyType":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"1208:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1200:33:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":877,"name":"bool","nodeType":"ElementaryTypeName","src":"1228:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":896,"nodeType":"Block","src":"1437:57:14","statements":[{"expression":{"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":888,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"1447:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":889,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"1455:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1447:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":891,"nodeType":"ExpressionStatement","src":"1447:13:14"},{"expression":{"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":892,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"1470:7:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":893,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"1480:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1470:17:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":895,"nodeType":"ExpressionStatement","src":"1470:17:14"}]},"documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"1268:108:14","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":897,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":883,"mutability":"mutable","name":"name_","nameLocation":"1407:5:14","nodeType":"VariableDeclaration","scope":897,"src":"1393:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":882,"name":"string","nodeType":"ElementaryTypeName","src":"1393:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"symbol_","nameLocation":"1428:7:14","nodeType":"VariableDeclaration","scope":897,"src":"1414:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":884,"name":"string","nodeType":"ElementaryTypeName","src":"1414:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1392:44:14"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"1437:0:14"},"scope":1836,"src":"1381:113:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2454,2466],"body":{"id":927,"nodeType":"Block","src":"1669:192:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1698:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":910,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"1718:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1953_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1953_$","typeString":"type(contract IERC721)"}],"id":909,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1713:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1953","typeString":"type(contract IERC721)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1727:11:14","memberName":"interfaceId","nodeType":"MemberAccess","src":"1713:25:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1698:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1754:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":916,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"1774:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2154_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2154_$","typeString":"type(contract IERC721Metadata)"}],"id":915,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2154","typeString":"type(contract IERC721Metadata)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1791:11:14","memberName":"interfaceId","nodeType":"MemberAccess","src":"1769:33:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1754:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:104:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":923,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1842:11:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":921,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1818:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1836_$","typeString":"type(contract super ERC721)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:17:14","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2454,"src":"1818:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1818:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1698:156:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":907,"id":926,"nodeType":"Return","src":"1679:175:14"}]},"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"1500:56:14","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":928,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1570:17:14","nodeType":"FunctionDefinition","overrides":{"id":904,"nodeType":"OverrideSpecifier","overrides":[{"id":902,"name":"ERC165","nameLocations":["1637:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":2455,"src":"1637:6:14"},{"id":903,"name":"IERC165","nameLocations":["1645:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2467,"src":"1645:7:14"}],"src":"1628:25:14"},"parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"interfaceId","nameLocation":"1595:11:14","nodeType":"VariableDeclaration","scope":928,"src":"1588:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":899,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1588:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1587:20:14"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":928,"src":"1663:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":905,"name":"bool","nodeType":"ElementaryTypeName","src":"1663:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1662:6:14"},"scope":1836,"src":"1561:300:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1878],"body":{"id":955,"nodeType":"Block","src":"1992:136:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2006:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2015:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:14","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2006:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":950,"nodeType":"IfStatement","src":"2002:87:14","trueBody":{"id":949,"nodeType":"Block","src":"2027:62:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2075:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2067:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"2067:7:14","typeDescriptions":{}}},"id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":942,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"2048:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"RevertStatement","src":"2041:37:14"}]}},{"expression":{"baseExpression":{"id":951,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2105:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":953,"indexExpression":{"id":952,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"2115:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2105:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":935,"id":954,"nodeType":"Return","src":"2098:23:14"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"1867:48:14","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":956,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1929:9:14","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"owner","nameLocation":"1947:5:14","nodeType":"VariableDeclaration","scope":956,"src":"1939:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1938:15:14"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"1983:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:9:14"},"scope":1836,"src":"1920:208:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1886],"body":{"id":968,"nodeType":"Block","src":"2257:46:14","statements":[{"expression":{"arguments":[{"id":965,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"2288:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":964,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2274:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":963,"id":967,"nodeType":"Return","src":"2267:29:14"}]},"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"2134:46:14","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":969,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2194:7:14","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"tokenId","nameLocation":"2210:7:14","nodeType":"VariableDeclaration","scope":969,"src":"2202:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:17:14"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"2248:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2247:9:14"},"scope":1836,"src":"2185:118:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2139],"body":{"id":977,"nodeType":"Block","src":"2425:29:14","statements":[{"expression":{"id":975,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"2442:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":974,"id":976,"nodeType":"Return","src":"2435:12:14"}]},"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"2309:51:14","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":978,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2374:4:14","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[],"src":"2378:2:14"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"2410:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":972,"name":"string","nodeType":"ElementaryTypeName","src":"2410:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2409:15:14"},"scope":1836,"src":"2365:89:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2145],"body":{"id":986,"nodeType":"Block","src":"2580:31:14","statements":[{"expression":{"id":984,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"2597:7:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":983,"id":985,"nodeType":"Return","src":"2590:14:14"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"2460:53:14","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":987,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2527:6:14","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"2533:2:14"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":987,"src":"2565:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":981,"name":"string","nodeType":"ElementaryTypeName","src":"2565:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2564:15:14"},"scope":1836,"src":"2518:93:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2153],"body":{"id":1022,"nodeType":"Block","src":"2756:176:14","statements":[{"expression":{"arguments":[{"id":996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2780:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":995,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2766:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":998,"nodeType":"ExpressionStatement","src":"2766:22:14"},{"assignments":[1000],"declarations":[{"constant":false,"id":1000,"mutability":"mutable","name":"baseURI","nameLocation":"2813:7:14","nodeType":"VariableDeclaration","scope":1022,"src":"2799:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":999,"name":"string","nodeType":"ElementaryTypeName","src":"2799:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1003,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1001,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"2823:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2799:34:14"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1006,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2856:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"2850:5:14","typeDescriptions":{}}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:6:14","memberName":"length","nodeType":"MemberAccess","src":"2850:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2850:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2923:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2850:75:14","trueExpression":{"arguments":[{"id":1014,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"2892:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1015,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"2901:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2909:8:14","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2244,"src":"2901:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2878:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1011,"name":"string","nodeType":"ElementaryTypeName","src":"2878:6:14","typeDescriptions":{}}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:6:14","memberName":"concat","nodeType":"MemberAccess","src":"2878:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2878:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":994,"id":1021,"nodeType":"Return","src":"2843:82:14"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"2617:55:14","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1023,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2686:8:14","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"tokenId","nameLocation":"2703:7:14","nodeType":"VariableDeclaration","scope":1023,"src":"2695:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"2695:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:17:14"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"2741:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":992,"name":"string","nodeType":"ElementaryTypeName","src":"2741:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2740:15:14"},"scope":1836,"src":"2677:255:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1031,"nodeType":"Block","src":"3240:26:14","statements":[{"expression":{"hexValue":"","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3257:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1028,"id":1030,"nodeType":"Return","src":"3250:9:14"}]},"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"2938:231:14","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3183:8:14","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[],"src":"3191:2:14"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"3225:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1026,"name":"string","nodeType":"ElementaryTypeName","src":"3225:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3224:15:14"},"scope":1836,"src":"3174:92:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1926],"body":{"id":1047,"nodeType":"Block","src":"3384:52:14","statements":[{"expression":{"arguments":[{"id":1041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"3403:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"3407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1043,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"3416:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1040,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1639,1705],"referencedDeclaration":1639,"src":"3394:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3394:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1046,"nodeType":"ExpressionStatement","src":"3394:35:14"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"3272:46:14","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3332:7:14","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"to","nameLocation":"3348:2:14","nodeType":"VariableDeclaration","scope":1048,"src":"3340:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"tokenId","nameLocation":"3360:7:14","nodeType":"VariableDeclaration","scope":1048,"src":"3352:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"3352:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3339:29:14"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"3384:0:14"},"scope":1836,"src":"3323:113:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1942],"body":{"id":1064,"nodeType":"Block","src":"3573:78:14","statements":[{"expression":{"arguments":[{"id":1057,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3597:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1056,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"3583:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1059,"nodeType":"ExpressionStatement","src":"3583:22:14"},{"expression":{"arguments":[{"id":1061,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3636:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1060,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3623:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1055,"id":1063,"nodeType":"Return","src":"3616:28:14"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"3442:50:14","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3506:11:14","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:14","nodeType":"VariableDeclaration","scope":1065,"src":"3518:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3517:17:14"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"3564:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"3564:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3563:9:14"},"scope":1836,"src":"3497:154:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1934],"body":{"id":1080,"nodeType":"Block","src":"3793:69:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1074,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"3822:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1076,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3836:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1077,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3846:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1073,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3803:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"ExpressionStatement","src":"3803:52:14"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"3657:56:14","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1081,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3727:17:14","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"operator","nameLocation":"3753:8:14","nodeType":"VariableDeclaration","scope":1081,"src":"3745:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"approved","nameLocation":"3768:8:14","nodeType":"VariableDeclaration","scope":1081,"src":"3763:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1069,"name":"bool","nodeType":"ElementaryTypeName","src":"3763:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3744:33:14"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[],"src":"3793:0:14"},"scope":1836,"src":"3718:144:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1952],"body":{"id":1097,"nodeType":"Block","src":"4022:59:14","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1091,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"4039:18:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1093,"indexExpression":{"id":1092,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"4058:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:25:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1095,"indexExpression":{"id":1094,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"4065:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4039:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1090,"id":1096,"nodeType":"Return","src":"4032:42:14"}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"3868:55:14","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3937:16:14","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"owner","nameLocation":"3962:5:14","nodeType":"VariableDeclaration","scope":1098,"src":"3954:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"3954:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"operator","nameLocation":"3977:8:14","nodeType":"VariableDeclaration","scope":1098,"src":"3969:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"3969:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3953:33:14"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"4016:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1088,"name":"bool","nodeType":"ElementaryTypeName","src":"4016:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4015:6:14"},"scope":1836,"src":"3928:153:14","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1918],"body":{"id":1143,"nodeType":"Block","src":"4223:498:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1108,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4237:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"4243:7:14","typeDescriptions":{}}},"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4237:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1122,"nodeType":"IfStatement","src":"4233:87:14","trueBody":{"id":1121,"nodeType":"Block","src":"4255:65:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4298:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:14","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4298:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1114,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"4276:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"RevertStatement","src":"4269:40:14"}]}},{"assignments":[1124],"declarations":[{"constant":false,"id":1124,"mutability":"mutable","name":"previousOwner","nameLocation":"4546:13:14","nodeType":"VariableDeclaration","scope":1143,"src":"4538:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1131,"initialValue":{"arguments":[{"id":1126,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"4570:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1127,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4574:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1128,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"4583:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1125,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"4562:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4538:58:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"4610:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"4627:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4610:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1142,"nodeType":"IfStatement","src":"4606:109:14","trueBody":{"id":1141,"nodeType":"Block","src":"4633:82:14","statements":[{"errorCall":{"arguments":[{"id":1136,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"4675:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4681:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1138,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"4690:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1135,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4654:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"RevertStatement","src":"4647:57:14"}]}}]},"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"4087:51:14","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4152:12:14","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"from","nameLocation":"4173:4:14","nodeType":"VariableDeclaration","scope":1144,"src":"4165:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"4165:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"to","nameLocation":"4187:2:14","nodeType":"VariableDeclaration","scope":1144,"src":"4179:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"4179:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"tokenId","nameLocation":"4199:7:14","nodeType":"VariableDeclaration","scope":1144,"src":"4191:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4164:43:14"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"4223:0:14"},"scope":1836,"src":"4143:578:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1908],"body":{"id":1161,"nodeType":"Block","src":"4863:56:14","statements":[{"expression":{"arguments":[{"id":1155,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"4890:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4896:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4900:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4909:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1154,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1162,1188],"referencedDeclaration":1188,"src":"4873:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"ExpressionStatement","src":"4873:39:14"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"4727:55:14","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1162,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4796:16:14","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"from","nameLocation":"4821:4:14","nodeType":"VariableDeclaration","scope":1162,"src":"4813:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"4813:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"to","nameLocation":"4835:2:14","nodeType":"VariableDeclaration","scope":1162,"src":"4827:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"tokenId","nameLocation":"4847:7:14","nodeType":"VariableDeclaration","scope":1162,"src":"4839:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"4839:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4812:43:14"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"4863:0:14"},"scope":1836,"src":"4787:132:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1898],"body":{"id":1187,"nodeType":"Block","src":"5088:105:14","statements":[{"expression":{"arguments":[{"id":1175,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5111:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"5117:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5121:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1174,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"5098:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1179,"nodeType":"ExpressionStatement","src":"5098:31:14"},{"expression":{"arguments":[{"id":1181,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5162:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"5168:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"5172:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1184,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"5181:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1180,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"5139:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"ExpressionStatement","src":"5139:47:14"}]},"documentation":{"id":1163,"nodeType":"StructuredDocumentation","src":"4925:55:14","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4994:16:14","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"from","nameLocation":"5019:4:14","nodeType":"VariableDeclaration","scope":1188,"src":"5011:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"to","nameLocation":"5033:2:14","nodeType":"VariableDeclaration","scope":1188,"src":"5025:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"5025:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"tokenId","nameLocation":"5045:7:14","nodeType":"VariableDeclaration","scope":1188,"src":"5037:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5037:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"data","nameLocation":"5067:4:14","nodeType":"VariableDeclaration","scope":1188,"src":"5054:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1170,"name":"bytes","nodeType":"ElementaryTypeName","src":"5054:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5010:62:14"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"5088:0:14"},"scope":1836,"src":"4985:208:14","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1200,"nodeType":"Block","src":"5782:40:14","statements":[{"expression":{"baseExpression":{"id":1196,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"5799:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1198,"indexExpression":{"id":1197,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5807:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5799:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1195,"id":1199,"nodeType":"Return","src":"5792:23:14"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"5199:503:14","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1201,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5716:8:14","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"tokenId","nameLocation":"5733:7:14","nodeType":"VariableDeclaration","scope":1201,"src":"5725:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"5725:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5724:17:14"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1201,"src":"5773:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5772:9:14"},"scope":1836,"src":"5707:115:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1213,"nodeType":"Block","src":"6017:48:14","statements":[{"expression":{"baseExpression":{"id":1209,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"6034:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1211,"indexExpression":{"id":1210,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6050:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6034:24:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1208,"id":1212,"nodeType":"Return","src":"6027:31:14"}]},"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"5828:105:14","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1214,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5947:12:14","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"tokenId","nameLocation":"5968:7:14","nodeType":"VariableDeclaration","scope":1214,"src":"5960:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5960:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5959:17:14"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1214,"src":"6008:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6007:9:14"},"scope":1836,"src":"5938:127:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1249,"nodeType":"Block","src":"6485:163:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"6514:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6533:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6525:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"6525:7:14","typeDescriptions":{}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6525:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6514:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6552:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1233,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"6561:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6552:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1236,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"6589:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1237,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"6596:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1235,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"6572:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6572:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1241,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6621:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1240,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"6608:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6608:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1243,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"6633:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6608:32:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6552:88:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6551:90:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6514:127:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1225,"id":1248,"nodeType":"Return","src":"6495:146:14"}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"6071:300:14","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1250,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6385:13:14","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"owner","nameLocation":"6407:5:14","nodeType":"VariableDeclaration","scope":1250,"src":"6399:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"spender","nameLocation":"6422:7:14","nodeType":"VariableDeclaration","scope":1250,"src":"6414:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"6414:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"tokenId","nameLocation":"6439:7:14","nodeType":"VariableDeclaration","scope":1250,"src":"6431:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6398:49:14"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1250,"src":"6479:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1223,"name":"bool","nodeType":"ElementaryTypeName","src":"6479:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6478:6:14"},"scope":1836,"src":"6376:272:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1286,"nodeType":"Block","src":"7179:271:14","statements":[{"condition":{"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7193:39:14","subExpression":{"arguments":[{"id":1261,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"7208:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"7215:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"7224:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1260,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"7194:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7194:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"IfStatement","src":"7189:255:14","trueBody":{"id":1284,"nodeType":"Block","src":"7234:210:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"7252:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7261:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"7261:7:14","typeDescriptions":{}}},"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7252:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1282,"nodeType":"Block","src":"7350:84:14","statements":[{"errorCall":{"arguments":[{"id":1278,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"7402:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"7411:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"7375:26:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"RevertStatement","src":"7368:51:14"}]},"id":1283,"nodeType":"IfStatement","src":"7248:186:14","trueBody":{"id":1276,"nodeType":"Block","src":"7273:71:14","statements":[{"errorCall":{"arguments":[{"id":1273,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1272,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"7298:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1275,"nodeType":"RevertStatement","src":"7291:38:14"}]}}]}}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"6654:423:14","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7091:16:14","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"owner","nameLocation":"7116:5:14","nodeType":"VariableDeclaration","scope":1287,"src":"7108:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"spender","nameLocation":"7131:7:14","nodeType":"VariableDeclaration","scope":1287,"src":"7123:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"7123:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"tokenId","nameLocation":"7148:7:14","nodeType":"VariableDeclaration","scope":1287,"src":"7140:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:49:14"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"7179:0:14"},"scope":1836,"src":"7082:368:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1302,"nodeType":"Block","src":"8167:78:14","statements":[{"id":1301,"nodeType":"UncheckedBlock","src":"8177:62:14","statements":[{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1295,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"8201:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1297,"indexExpression":{"id":1296,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"8211:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8201:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"8223:5:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8201:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ExpressionStatement","src":"8201:27:14"}]}]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"7456:631:14","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1303,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8101:16:14","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"account","nameLocation":"8126:7:14","nodeType":"VariableDeclaration","scope":1303,"src":"8118:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"8118:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"value","nameLocation":"8143:5:14","nodeType":"VariableDeclaration","scope":1303,"src":"8135:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1291,"name":"uint128","nodeType":"ElementaryTypeName","src":"8135:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8117:32:14"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"8167:0:14"},"scope":1836,"src":"8092:153:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1392,"nodeType":"Block","src":"8933:700:14","statements":[{"assignments":[1316],"declarations":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"8951:4:14","nodeType":"VariableDeclaration","scope":1392,"src":"8943:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"8943:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1320,"initialValue":{"arguments":[{"id":1318,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"8967:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1317,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"8958:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8943:32:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1321,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"9035:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9051:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9043:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"9043:7:14","typeDescriptions":{}}},"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9043:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9035:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1334,"nodeType":"IfStatement","src":"9031:86:14","trueBody":{"id":1333,"nodeType":"Block","src":"9055:62:14","statements":[{"expression":{"arguments":[{"id":1328,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"9086:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1329,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"9092:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1330,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"9098:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1327,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"9069:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1332,"nodeType":"ExpressionStatement","src":"9069:37:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"9161:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9177:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9169:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"9169:7:14","typeDescriptions":{}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9169:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9161:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1362,"nodeType":"IfStatement","src":"9157:256:14","trueBody":{"id":1361,"nodeType":"Block","src":"9181:232:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9286:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:14","typeDescriptions":{}}},"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9286:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1346,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"9298:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9307:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:14","typeDescriptions":{}}},"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9307:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9319:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1341,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1639,1705],"referencedDeclaration":1705,"src":"9277:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"9277:48:14"},{"id":1360,"nodeType":"UncheckedBlock","src":"9340:63:14","statements":[{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1354,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"9368:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1356,"indexExpression":{"id":1355,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"9378:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9368:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9387:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9368:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1359,"nodeType":"ExpressionStatement","src":"9368:20:14"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"9427:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9441:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9433:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"9433:7:14","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9433:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9427:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1377,"nodeType":"IfStatement","src":"9423:107:14","trueBody":{"id":1376,"nodeType":"Block","src":"9445:85:14","statements":[{"id":1375,"nodeType":"UncheckedBlock","src":"9459:61:14","statements":[{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1369,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"9487:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1371,"indexExpression":{"id":1370,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"9497:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9487:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9504:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9487:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ExpressionStatement","src":"9487:18:14"}]}]}},{"expression":{"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1378,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"9540:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1380,"indexExpression":{"id":1379,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"9548:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9540:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1381,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"9559:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9540:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1383,"nodeType":"ExpressionStatement","src":"9540:21:14"},{"eventCall":{"arguments":[{"id":1385,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"9586:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"9592:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"9596:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1384,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"9577:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1389,"nodeType":"EmitStatement","src":"9572:32:14"},{"expression":{"id":1390,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"9622:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1314,"id":1391,"nodeType":"Return","src":"9615:11:14"}]},"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"8251:582:14","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8847:7:14","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"to","nameLocation":"8863:2:14","nodeType":"VariableDeclaration","scope":1393,"src":"8855:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"8855:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"tokenId","nameLocation":"8875:7:14","nodeType":"VariableDeclaration","scope":1393,"src":"8867:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"8867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"auth","nameLocation":"8892:4:14","nodeType":"VariableDeclaration","scope":1393,"src":"8884:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"8884:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8854:43:14"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1393,"src":"8924:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"8924:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8923:9:14"},"scope":1836,"src":"8838:795:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1442,"nodeType":"Block","src":"10008:274:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"10022:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10036:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10028:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"10028:7:14","typeDescriptions":{}}},"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10028:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10022:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1415,"nodeType":"IfStatement","src":"10018:87:14","trueBody":{"id":1414,"nodeType":"Block","src":"10040:65:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10091:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10083:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"10083:7:14","typeDescriptions":{}}},"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10083:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1407,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"10061:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10061:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"RevertStatement","src":"10054:40:14"}]}},{"assignments":[1417],"declarations":[{"constant":false,"id":1417,"mutability":"mutable","name":"previousOwner","nameLocation":"10122:13:14","nodeType":"VariableDeclaration","scope":1442,"src":"10114:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"10114:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1426,"initialValue":{"arguments":[{"id":1419,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"10146:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1420,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"10150:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:14","typeDescriptions":{}}},"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10159:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1418,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"10138:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10114:56:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1427,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"10184:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10209:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10201:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"10201:7:14","typeDescriptions":{}}},"id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10201:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10184:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1441,"nodeType":"IfStatement","src":"10180:96:14","trueBody":{"id":1440,"nodeType":"Block","src":"10213:63:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10262:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10254:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"10254:7:14","typeDescriptions":{}}},"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1433,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"10234:19:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10234:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"RevertStatement","src":"10227:38:14"}]}}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"9639:311:14","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9964:5:14","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"9978:2:14","nodeType":"VariableDeclaration","scope":1443,"src":"9970:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"9970:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"9990:7:14","nodeType":"VariableDeclaration","scope":1443,"src":"9982:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"9982:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9969:29:14"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"10008:0:14"},"scope":1836,"src":"9955:327:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"10690:43:14","statements":[{"expression":{"arguments":[{"id":1452,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"10710:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"10714:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10723:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1451,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1458,1484],"referencedDeclaration":1484,"src":"10700:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10700:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"ExpressionStatement","src":"10700:26:14"}]},"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"10288:340:14","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10642:9:14","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"to","nameLocation":"10660:2:14","nodeType":"VariableDeclaration","scope":1458,"src":"10652:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"10652:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"tokenId","nameLocation":"10672:7:14","nodeType":"VariableDeclaration","scope":1458,"src":"10664:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"10664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10651:29:14"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"10690:0:14"},"scope":1836,"src":"10633:100:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1483,"nodeType":"Block","src":"11038:98:14","statements":[{"expression":{"arguments":[{"id":1469,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"11054:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1470,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"11058:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1468,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"11048:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11048:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1472,"nodeType":"ExpressionStatement","src":"11048:18:14"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11099:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"11099:7:14","typeDescriptions":{}}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1478,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"11111:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"11115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1480,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"11124:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1473,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"11076:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11076:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"ExpressionStatement","src":"11076:53:14"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"10739:210:14","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10963:9:14","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"to","nameLocation":"10981:2:14","nodeType":"VariableDeclaration","scope":1484,"src":"10973:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"10973:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"tokenId","nameLocation":"10993:7:14","nodeType":"VariableDeclaration","scope":1484,"src":"10985:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"10985:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"data","nameLocation":"11015:4:14","nodeType":"VariableDeclaration","scope":1484,"src":"11002:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1464,"name":"bytes","nodeType":"ElementaryTypeName","src":"11002:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10972:48:14"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"11038:0:14"},"scope":1836,"src":"10954:182:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1516,"nodeType":"Block","src":"11503:186:14","statements":[{"assignments":[1491],"declarations":[{"constant":false,"id":1491,"mutability":"mutable","name":"previousOwner","nameLocation":"11521:13:14","nodeType":"VariableDeclaration","scope":1516,"src":"11513:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"11513:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1503,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11545:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:14","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11545:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1497,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"11557:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11566:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"11566:7:14","typeDescriptions":{}}},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11566:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1492,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"11537:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11537:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11513:64:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"11591:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11608:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"11608:7:14","typeDescriptions":{}}},"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11608:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11591:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1515,"nodeType":"IfStatement","src":"11587:96:14","trueBody":{"id":1514,"nodeType":"Block","src":"11620:63:14","statements":[{"errorCall":{"arguments":[{"id":1511,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"11664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1510,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"11641:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11641:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1513,"nodeType":"RevertStatement","src":"11634:38:14"}]}}]},"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"11142:315:14","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11471:5:14","nodeType":"FunctionDefinition","parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"tokenId","nameLocation":"11485:7:14","nodeType":"VariableDeclaration","scope":1517,"src":"11477:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"11477:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11476:17:14"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[],"src":"11503:0:14"},"scope":1836,"src":"11462:227:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"12084:389:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1527,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"12098:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12104:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"12104:7:14","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12104:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12098:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1541,"nodeType":"IfStatement","src":"12094:87:14","trueBody":{"id":1540,"nodeType":"Block","src":"12116:65:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12167:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12159:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"12159:7:14","typeDescriptions":{}}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1533,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"12137:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"RevertStatement","src":"12130:40:14"}]}},{"assignments":[1543],"declarations":[{"constant":false,"id":1543,"mutability":"mutable","name":"previousOwner","nameLocation":"12198:13:14","nodeType":"VariableDeclaration","scope":1576,"src":"12190:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"12190:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1552,"initialValue":{"arguments":[{"id":1545,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"12222:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1546,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"12226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12235:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"12235:7:14","typeDescriptions":{}}},"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1544,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"12214:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12214:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12190:56:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"12260:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"12277:7:14","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12277:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12260:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"12362:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1565,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"12379:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12362:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1574,"nodeType":"IfStatement","src":"12358:109:14","trueBody":{"id":1573,"nodeType":"Block","src":"12385:82:14","statements":[{"errorCall":{"arguments":[{"id":1568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"12427:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1569,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"12433:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1570,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"12442:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1567,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"12406:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"RevertStatement","src":"12399:57:14"}]}},"id":1575,"nodeType":"IfStatement","src":"12256:211:14","trueBody":{"id":1563,"nodeType":"Block","src":"12289:63:14","statements":[{"errorCall":{"arguments":[{"id":1560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"12333:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1559,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"12310:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12310:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"RevertStatement","src":"12303:38:14"}]}}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"11695:313:14","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12022:9:14","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"from","nameLocation":"12040:4:14","nodeType":"VariableDeclaration","scope":1577,"src":"12032:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"12032:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"to","nameLocation":"12054:2:14","nodeType":"VariableDeclaration","scope":1577,"src":"12046:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"12046:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"tokenId","nameLocation":"12066:7:14","nodeType":"VariableDeclaration","scope":1577,"src":"12058:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1523,"name":"uint256","nodeType":"ElementaryTypeName","src":"12058:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12031:43:14"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"12084:0:14"},"scope":1836,"src":"12013:460:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"13481:53:14","statements":[{"expression":{"arguments":[{"id":1588,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"13505:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1589,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"13511:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1590,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"13515:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13524:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1587,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1595,1621],"referencedDeclaration":1621,"src":"13491:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13491:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1593,"nodeType":"ExpressionStatement","src":"13491:36:14"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"12479:922:14","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13415:13:14","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"from","nameLocation":"13437:4:14","nodeType":"VariableDeclaration","scope":1595,"src":"13429:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"13429:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"to","nameLocation":"13451:2:14","nodeType":"VariableDeclaration","scope":1595,"src":"13443:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"tokenId","nameLocation":"13463:7:14","nodeType":"VariableDeclaration","scope":1595,"src":"13455:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"13455:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13428:43:14"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"13481:0:14"},"scope":1836,"src":"13406:128:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1620,"nodeType":"Block","src":"13873:102:14","statements":[{"expression":{"arguments":[{"id":1608,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"13893:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1609,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"13899:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1610,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"13903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1607,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"13883:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13883:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"ExpressionStatement","src":"13883:28:14"},{"expression":{"arguments":[{"id":1614,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"13944:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"13950:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"13954:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1617,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"13963:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1613,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"13921:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1619,"nodeType":"ExpressionStatement","src":"13921:47:14"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"13540:226:14","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13780:13:14","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"from","nameLocation":"13802:4:14","nodeType":"VariableDeclaration","scope":1621,"src":"13794:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"13794:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"to","nameLocation":"13816:2:14","nodeType":"VariableDeclaration","scope":1621,"src":"13808:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"13808:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"tokenId","nameLocation":"13828:7:14","nodeType":"VariableDeclaration","scope":1621,"src":"13820:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"13820:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"data","nameLocation":"13850:4:14","nodeType":"VariableDeclaration","scope":1621,"src":"13837:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1603,"name":"bytes","nodeType":"ElementaryTypeName","src":"13837:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13793:62:14"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"13873:0:14"},"scope":1836,"src":"13771:204:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1638,"nodeType":"Block","src":"14488:50:14","statements":[{"expression":{"arguments":[{"id":1632,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"14507:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1633,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"14511:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1634,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"14520:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14526:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1631,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1639,1705],"referencedDeclaration":1705,"src":"14498:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14498:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"ExpressionStatement","src":"14498:33:14"}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"13981:432:14","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14427:8:14","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"to","nameLocation":"14444:2:14","nodeType":"VariableDeclaration","scope":1639,"src":"14436:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"14436:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"tokenId","nameLocation":"14456:7:14","nodeType":"VariableDeclaration","scope":1639,"src":"14448:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"14448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"auth","nameLocation":"14473:4:14","nodeType":"VariableDeclaration","scope":1639,"src":"14465:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"14465:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14435:43:14"},"returnParameters":{"id":1630,"nodeType":"ParameterList","parameters":[],"src":"14488:0:14"},"scope":1836,"src":"14418:120:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"14814:568:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1651,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"14880:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"14893:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14909:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14901:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"14901:7:14","typeDescriptions":{}}},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14901:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14893:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14880:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1697,"nodeType":"IfStatement","src":"14876:460:14","trueBody":{"id":1696,"nodeType":"Block","src":"14913:423:14","statements":[{"assignments":[1660],"declarations":[{"constant":false,"id":1660,"mutability":"mutable","name":"owner","nameLocation":"14935:5:14","nodeType":"VariableDeclaration","scope":1696,"src":"14927:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1664,"initialValue":{"arguments":[{"id":1662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"14957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1661,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"14943:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14943:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14927:38:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1665,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"15093:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15109:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15101:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"15101:7:14","typeDescriptions":{}}},"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15093:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"15115:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1672,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"15124:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15115:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15132:30:14","subExpression":{"arguments":[{"id":1676,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"15150:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1677,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"15157:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1675,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"15133:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15093:69:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1686,"nodeType":"IfStatement","src":"15089:142:14","trueBody":{"id":1685,"nodeType":"Block","src":"15164:67:14","statements":[{"errorCall":{"arguments":[{"id":1682,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"15211:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1681,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"15189:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15189:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"RevertStatement","src":"15182:34:14"}]}},{"condition":{"id":1687,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"15249:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1695,"nodeType":"IfStatement","src":"15245:81:14","trueBody":{"id":1694,"nodeType":"Block","src":"15260:66:14","statements":[{"eventCall":{"arguments":[{"id":1689,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"15292:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1690,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"15299:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"15303:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1688,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"15283:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15283:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"EmitStatement","src":"15278:33:14"}]}}]}},{"expression":{"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1698,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"15346:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1700,"indexExpression":{"id":1699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"15362:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15346:24:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1701,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"15373:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15346:29:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1703,"nodeType":"ExpressionStatement","src":"15346:29:14"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"14544:171:14","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14729:8:14","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"to","nameLocation":"14746:2:14","nodeType":"VariableDeclaration","scope":1705,"src":"14738:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1641,"name":"address","nodeType":"ElementaryTypeName","src":"14738:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"tokenId","nameLocation":"14758:7:14","nodeType":"VariableDeclaration","scope":1705,"src":"14750:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"14750:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"auth","nameLocation":"14775:4:14","nodeType":"VariableDeclaration","scope":1705,"src":"14767:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"14767:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"emitEvent","nameLocation":"14786:9:14","nodeType":"VariableDeclaration","scope":1705,"src":"14781:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1647,"name":"bool","nodeType":"ElementaryTypeName","src":"14781:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14737:59:14"},"returnParameters":{"id":1650,"nodeType":"ParameterList","parameters":[],"src":"14814:0:14"},"scope":1836,"src":"14720:662:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"15684:219:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1715,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"15698:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15718:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"15710:7:14","typeDescriptions":{}}},"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15698:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1726,"nodeType":"IfStatement","src":"15694:91:14","trueBody":{"id":1725,"nodeType":"Block","src":"15722:63:14","statements":[{"errorCall":{"arguments":[{"id":1722,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"15765:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1721,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"15743:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15743:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"RevertStatement","src":"15736:38:14"}]}},{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1727,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"15794:18:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1730,"indexExpression":{"id":1728,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"15813:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15794:25:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1731,"indexExpression":{"id":1729,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"15820:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15794:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1732,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"15832:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15794:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1734,"nodeType":"ExpressionStatement","src":"15794:46:14"},{"eventCall":{"arguments":[{"id":1736,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"15870:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"15877:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1738,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"15887:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1735,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"15855:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15855:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"EmitStatement","src":"15850:46:14"}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"15388:198:14","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15600:18:14","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"owner","nameLocation":"15627:5:14","nodeType":"VariableDeclaration","scope":1742,"src":"15619:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"15619:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"operator","nameLocation":"15642:8:14","nodeType":"VariableDeclaration","scope":1742,"src":"15634:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"15634:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"approved","nameLocation":"15657:8:14","nodeType":"VariableDeclaration","scope":1742,"src":"15652:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"15652:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15618:48:14"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[],"src":"15684:0:14"},"scope":1836,"src":"15591:312:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1770,"nodeType":"Block","src":"16210:169:14","statements":[{"assignments":[1751],"declarations":[{"constant":false,"id":1751,"mutability":"mutable","name":"owner","nameLocation":"16228:5:14","nodeType":"VariableDeclaration","scope":1770,"src":"16220:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"16220:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1755,"initialValue":{"arguments":[{"id":1753,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"16245:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1752,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"16236:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16236:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16220:33:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"16267:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16284:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16276:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"16276:7:14","typeDescriptions":{}}},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16276:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16267:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1767,"nodeType":"IfStatement","src":"16263:88:14","trueBody":{"id":1766,"nodeType":"Block","src":"16288:63:14","statements":[{"errorCall":{"arguments":[{"id":1763,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"16332:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1762,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"16309:22:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16309:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"RevertStatement","src":"16302:38:14"}]}},{"expression":{"id":1768,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"16367:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1749,"id":1769,"nodeType":"Return","src":"16360:12:14"}]},"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"15909:224:14","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16147:13:14","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"tokenId","nameLocation":"16169:7:14","nodeType":"VariableDeclaration","scope":1771,"src":"16161:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"16161:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16160:17:14"},"returnParameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1771,"src":"16201:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"16201:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16200:9:14"},"scope":1836,"src":"16138:241:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1834,"nodeType":"Block","src":"17020:680:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1783,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17034:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17037:4:14","memberName":"code","nodeType":"MemberAccess","src":"17034:7:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17042:6:14","memberName":"length","nodeType":"MemberAccess","src":"17034:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17051:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17034:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"nodeType":"IfStatement","src":"17030:664:14","trueBody":{"id":1832,"nodeType":"Block","src":"17054:640:14","statements":[{"clauses":[{"block":{"id":1812,"nodeType":"Block","src":"17168:162:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"17190:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1802,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"17200:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1971_$","typeString":"type(contract IERC721Receiver)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17216:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1970,"src":"17200:32:14","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17233:8:14","memberName":"selector","nodeType":"MemberAccess","src":"17200:41:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"17190:51:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1811,"nodeType":"IfStatement","src":"17186:130:14","trueBody":{"id":1810,"nodeType":"Block","src":"17243:73:14","statements":[{"errorCall":{"arguments":[{"id":1807,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17294:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1806,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"17272:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17272:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"RevertStatement","src":"17265:32:14"}]}}]},"errorName":"","id":1813,"nodeType":"TryCatchClause","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"retval","nameLocation":"17160:6:14","nodeType":"VariableDeclaration","scope":1813,"src":"17153:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1798,"name":"bytes4","nodeType":"ElementaryTypeName","src":"17153:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"17152:15:14"},"src":"17144:186:14"},{"block":{"id":1829,"nodeType":"Block","src":"17359:325:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1817,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"17381:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17388:6:14","memberName":"length","nodeType":"MemberAccess","src":"17381:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17398:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17381:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1827,"nodeType":"Block","src":"17480:190:14","statements":[{"AST":{"nodeType":"YulBlock","src":"17566:86:14","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17603:2:14","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"17607:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17599:3:14"},"nodeType":"YulFunctionCall","src":"17599:15:14"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"17622:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17616:5:14"},"nodeType":"YulFunctionCall","src":"17616:13:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17592:6:14"},"nodeType":"YulFunctionCall","src":"17592:38:14"},"nodeType":"YulExpressionStatement","src":"17592:38:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1815,"isOffset":false,"isSlot":false,"src":"17607:6:14","valueSize":1},{"declaration":1815,"isOffset":false,"isSlot":false,"src":"17622:6:14","valueSize":1}],"id":1826,"nodeType":"InlineAssembly","src":"17557:95:14"}]},"id":1828,"nodeType":"IfStatement","src":"17377:293:14","trueBody":{"id":1825,"nodeType":"Block","src":"17401:73:14","statements":[{"errorCall":{"arguments":[{"id":1822,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17452:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1821,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"17430:21:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17430:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1824,"nodeType":"RevertStatement","src":"17423:32:14"}]}}]},"errorName":"","id":1830,"nodeType":"TryCatchClause","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"reason","nameLocation":"17351:6:14","nodeType":"VariableDeclaration","scope":1830,"src":"17338:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"17338:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17337:21:14"},"src":"17331:353:14"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1792,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"17109:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17109:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1794,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"17123:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1795,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"17129:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1796,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"17138:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1789,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17088:2:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1788,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"17072:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1971_$","typeString":"type(contract IERC721Receiver)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1971","typeString":"contract IERC721Receiver"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17092:16:14","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1970,"src":"17072:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17072:71:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1831,"nodeType":"TryStatement","src":"17068:616:14"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"16385:528:14","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"16927:22:14","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"from","nameLocation":"16958:4:14","nodeType":"VariableDeclaration","scope":1835,"src":"16950:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"16950:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"to","nameLocation":"16972:2:14","nodeType":"VariableDeclaration","scope":1835,"src":"16964:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"16964:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"tokenId","nameLocation":"16984:7:14","nodeType":"VariableDeclaration","scope":1835,"src":"16976:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"data","nameLocation":"17006:4:14","nodeType":"VariableDeclaration","scope":1835,"src":"16993:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1779,"name":"bytes","nodeType":"ElementaryTypeName","src":"16993:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16949:62:14"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[],"src":"17020:0:14"},"scope":1836,"src":"16918:782:14","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1837,"src":"776:16926:14","usedErrors":[660,665,674,679,684,691,696,701],"usedEvents":[1852,1861,1870]}],"src":"107:17596:14"},"id":14},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2467],"IERC721":[1953]},"id":1954,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1838,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1954,"sourceUnit":2468,"src":"134:62:15","symbolAliases":[{"foreign":{"id":1839,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"142:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1842,"name":"IERC165","nameLocations":["287:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2467,"src":"287:7:15"},"id":1843,"nodeType":"InheritanceSpecifier","src":"287:7:15"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"198:67:15","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1953,"linearizedBaseContracts":[1953,2467],"name":"IERC721","nameLocation":"276:7:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"301:88:15","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1852,"name":"Transfer","nameLocation":"400:8:15","nodeType":"EventDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"425:4:15","nodeType":"VariableDeclaration","scope":1852,"src":"409:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1848,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"447:2:15","nodeType":"VariableDeclaration","scope":1852,"src":"431:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"467:7:15","nodeType":"VariableDeclaration","scope":1852,"src":"451:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"408:67:15"},"src":"394:82:15"},{"anonymous":false,"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"482:94:15","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1861,"name":"Approval","nameLocation":"587:8:15","nodeType":"EventDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"612:5:15","nodeType":"VariableDeclaration","scope":1861,"src":"596:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"635:8:15","nodeType":"VariableDeclaration","scope":1861,"src":"619:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1859,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"661:7:15","nodeType":"VariableDeclaration","scope":1861,"src":"645:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:74:15"},"src":"581:89:15"},{"anonymous":false,"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"676:117:15","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1870,"name":"ApprovalForAll","nameLocation":"804:14:15","nodeType":"EventDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"835:5:15","nodeType":"VariableDeclaration","scope":1870,"src":"819:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1866,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"858:8:15","nodeType":"VariableDeclaration","scope":1870,"src":"842:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1868,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"873:8:15","nodeType":"VariableDeclaration","scope":1870,"src":"868:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1867,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:64:15"},"src":"798:85:15"},{"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"889:76:15","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1878,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"979:9:15","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"owner","nameLocation":"997:5:15","nodeType":"VariableDeclaration","scope":1878,"src":"989:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"988:15:15"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"balance","nameLocation":"1035:7:15","nodeType":"VariableDeclaration","scope":1878,"src":"1027:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:17:15"},"scope":1953,"src":"970:74:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"1050:131:15","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1886,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1195:7:15","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"tokenId","nameLocation":"1211:7:15","nodeType":"VariableDeclaration","scope":1886,"src":"1203:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1202:17:15"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"owner","nameLocation":"1251:5:15","nodeType":"VariableDeclaration","scope":1886,"src":"1243:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1883,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1242:15:15"},"scope":1953,"src":"1186:72:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"1264:565:15","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1898,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1843:16:15","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"from","nameLocation":"1868:4:15","nodeType":"VariableDeclaration","scope":1898,"src":"1860:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"to","nameLocation":"1882:2:15","nodeType":"VariableDeclaration","scope":1898,"src":"1874:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:15","nodeType":"VariableDeclaration","scope":1898,"src":"1886:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"data","nameLocation":"1918:4:15","nodeType":"VariableDeclaration","scope":1898,"src":"1903:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1894,"name":"bytes","nodeType":"ElementaryTypeName","src":"1903:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1859:64:15"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"1932:0:15"},"scope":1953,"src":"1834:99:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"1939:705:15","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1908,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2658:16:15","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"from","nameLocation":"2683:4:15","nodeType":"VariableDeclaration","scope":1908,"src":"2675:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"2675:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1903,"mutability":"mutable","name":"to","nameLocation":"2697:2:15","nodeType":"VariableDeclaration","scope":1908,"src":"2689:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"2689:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"tokenId","nameLocation":"2709:7:15","nodeType":"VariableDeclaration","scope":1908,"src":"2701:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2674:43:15"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"2726:0:15"},"scope":1953,"src":"2649:78:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"2733:732:15","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1918,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3479:12:15","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"from","nameLocation":"3500:4:15","nodeType":"VariableDeclaration","scope":1918,"src":"3492:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"to","nameLocation":"3514:2:15","nodeType":"VariableDeclaration","scope":1918,"src":"3506:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"3506:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"tokenId","nameLocation":"3526:7:15","nodeType":"VariableDeclaration","scope":1918,"src":"3518:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"3518:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:43:15"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[],"src":"3543:0:15"},"scope":1953,"src":"3470:74:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"3550:452:15","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1926,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4016:7:15","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"to","nameLocation":"4032:2:15","nodeType":"VariableDeclaration","scope":1926,"src":"4024:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"4024:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1923,"mutability":"mutable","name":"tokenId","nameLocation":"4044:7:15","nodeType":"VariableDeclaration","scope":1926,"src":"4036:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4023:29:15"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[],"src":"4061:0:15"},"scope":1953,"src":"4007:55:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"4068:315:15","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1934,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4397:17:15","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"operator","nameLocation":"4423:8:15","nodeType":"VariableDeclaration","scope":1934,"src":"4415:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"4415:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"approved","nameLocation":"4438:8:15","nodeType":"VariableDeclaration","scope":1934,"src":"4433:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1930,"name":"bool","nodeType":"ElementaryTypeName","src":"4433:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:33:15"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[],"src":"4456:0:15"},"scope":1953,"src":"4388:69:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"4463:139:15","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1942,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4616:11:15","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"tokenId","nameLocation":"4636:7:15","nodeType":"VariableDeclaration","scope":1942,"src":"4628:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:17:15"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"operator","nameLocation":"4676:8:15","nodeType":"VariableDeclaration","scope":1942,"src":"4668:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4667:18:15"},"scope":1953,"src":"4607:79:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"4692:138:15","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1952,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4844:16:15","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"owner","nameLocation":"4869:5:15","nodeType":"VariableDeclaration","scope":1952,"src":"4861:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"operator","nameLocation":"4884:8:15","nodeType":"VariableDeclaration","scope":1952,"src":"4876:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4860:33:15"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"4917:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1949,"name":"bool","nodeType":"ElementaryTypeName","src":"4917:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4916:6:15"},"scope":1953,"src":"4835:88:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1954,"src":"266:4659:15","usedErrors":[],"usedEvents":[1852,1861,1870]}],"src":"108:4818:15"},"id":15},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1971]},"id":1972,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1955,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"142:152:16","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1971,"linearizedBaseContracts":[1971],"name":"IERC721Receiver","nameLocation":"305:15:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"327:500:16","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1970,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"841:16:16","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"operator","nameLocation":"875:8:16","nodeType":"VariableDeclaration","scope":1970,"src":"867:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"from","nameLocation":"901:4:16","nodeType":"VariableDeclaration","scope":1970,"src":"893:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"tokenId","nameLocation":"923:7:16","nodeType":"VariableDeclaration","scope":1970,"src":"915:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"data","nameLocation":"955:4:16","nodeType":"VariableDeclaration","scope":1970,"src":"940:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1964,"name":"bytes","nodeType":"ElementaryTypeName","src":"940:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"857:108:16"},"returnParameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"984:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1967,"name":"bytes4","nodeType":"ElementaryTypeName","src":"984:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"983:8:16"},"scope":1971,"src":"832:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1972,"src":"295:699:16","usedErrors":[],"usedEvents":[]}],"src":"116:879:16"},"id":16},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","exportedSymbols":{"Context":[2176],"ERC721":[1836],"ERC721Burnable":[2000]},"id":2001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1973,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2001,"sourceUnit":1837,"src":"152:37:17","symbolAliases":[{"foreign":{"id":1974,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"160:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2001,"sourceUnit":2177,"src":"190:51:17","symbolAliases":[{"foreign":{"id":1976,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"198:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1979,"name":"Context","nameLocations":["372:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":2176,"src":"372:7:17"},"id":1980,"nodeType":"InheritanceSpecifier","src":"372:7:17"},{"baseName":{"id":1981,"name":"ERC721","nameLocations":["381:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"381:6:17"},"id":1982,"nodeType":"InheritanceSpecifier","src":"381:6:17"}],"canonicalName":"ERC721Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"243:92:17","text":" @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."},"fullyImplemented":true,"id":2000,"linearizedBaseContracts":[2000,1836,702,2154,1953,2455,2467,2176],"name":"ERC721Burnable","nameLocation":"354:14:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":1998,"nodeType":"Block","src":"607:268:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"842:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"834:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:17","typeDescriptions":{}}},"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"834:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1993,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"846:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1994,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"855:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"855:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1988,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"826:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"826:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1997,"nodeType":"ExpressionStatement","src":"826:42:17"}]},"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"394:162:17","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"570:4:17","nodeType":"FunctionDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"tokenId","nameLocation":"583:7:17","nodeType":"VariableDeclaration","scope":1999,"src":"575:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"574:17:17"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[],"src":"607:0:17"},"scope":2000,"src":"561:314:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2001,"src":"336:541:17","usedErrors":[660,665,674,679,684,691,696,701],"usedEvents":[1852,1861,1870]}],"src":"126:752:17"},"id":17},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1836],"ERC721URIStorage":[2126],"IERC165":[2467],"IERC4906":[608],"Strings":[2431]},"id":2127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2002,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2127,"sourceUnit":1837,"src":"154:37:18","symbolAliases":[{"foreign":{"id":2003,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"162:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":2006,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2127,"sourceUnit":2432,"src":"192:51:18","symbolAliases":[{"foreign":{"id":2005,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"200:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":2008,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2127,"sourceUnit":609,"src":"244:58:18","symbolAliases":[{"foreign":{"id":2007,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"252:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":2010,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2127,"sourceUnit":585,"src":"303:56:18","symbolAliases":[{"foreign":{"id":2009,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"311:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2012,"name":"IERC4906","nameLocations":["469:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":608,"src":"469:8:18"},"id":2013,"nodeType":"InheritanceSpecifier","src":"469:8:18"},{"baseName":{"id":2014,"name":"ERC721","nameLocations":["479:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"479:6:18"},"id":2015,"nodeType":"InheritanceSpecifier","src":"479:6:18"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"361:69:18","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":true,"id":2126,"linearizedBaseContracts":[2126,1836,702,2154,608,1953,2455,2467,2176],"name":"ERC721URIStorage","nameLocation":"449:16:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2018,"libraryName":{"id":2016,"name":"Strings","nameLocations":["498:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2431,"src":"498:7:18"},"nodeType":"UsingForDirective","src":"492:26:18","typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":2024,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"730:20:18","nodeType":"VariableDeclaration","scope":2126,"src":"706:65:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2019,"name":"bytes4","nodeType":"ElementaryTypeName","src":"706:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"760:10:18","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"753:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2020,"name":"bytes4","nodeType":"ElementaryTypeName","src":"753:6:18","typeDescriptions":{}}},"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":2028,"mutability":"mutable","name":"_tokenURIs","nameLocation":"860:10:18","nodeType":"VariableDeclaration","scope":2126,"src":"817:53:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2027,"keyName":"tokenId","keyNameLocation":"833:7:18","keyType":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"825:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"817:34:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2026,"name":"string","nodeType":"ElementaryTypeName","src":"844:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[928,2466],"body":{"id":2048,"nodeType":"Block","src":"1045:99:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"1062:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2040,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"1077:20:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1062:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2044,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"1125:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2042,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1101:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2126_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1107:17:18","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":928,"src":"1101:23:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1101:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1062:75:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2038,"id":2047,"nodeType":"Return","src":"1055:82:18"}]},"documentation":{"id":2029,"nodeType":"StructuredDocumentation","src":"877:55:18","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":2049,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"946:17:18","nodeType":"FunctionDefinition","overrides":{"id":2035,"nodeType":"OverrideSpecifier","overrides":[{"id":2033,"name":"ERC721","nameLocations":["1013:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"1013:6:18"},{"id":2034,"name":"IERC165","nameLocations":["1021:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2467,"src":"1021:7:18"}],"src":"1004:25:18"},"parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"interfaceId","nameLocation":"971:11:18","nodeType":"VariableDeclaration","scope":2049,"src":"964:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2030,"name":"bytes4","nodeType":"ElementaryTypeName","src":"964:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"963:20:18"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2049,"src":"1039:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2036,"name":"bool","nodeType":"ElementaryTypeName","src":"1039:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1038:6:18"},"scope":2126,"src":"937:207:18","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1023],"body":{"id":2105,"nodeType":"Block","src":"1298:505:18","statements":[{"expression":{"arguments":[{"id":2059,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"1322:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2058,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1308:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2061,"nodeType":"ExpressionStatement","src":"1308:22:18"},{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"_tokenURI","nameLocation":"1355:9:18","nodeType":"VariableDeclaration","scope":2105,"src":"1341:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2062,"name":"string","nodeType":"ElementaryTypeName","src":"1341:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2067,"initialValue":{"baseExpression":{"id":2064,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"1367:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2066,"indexExpression":{"id":2065,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"1378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1367:19:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1341:45:18"},{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"base","nameLocation":"1410:4:18","nodeType":"VariableDeclaration","scope":2105,"src":"1396:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2068,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2072,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2070,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1417:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1396:31:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2075,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1506:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1500:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2073,"name":"bytes","nodeType":"ElementaryTypeName","src":"1500:5:18","typeDescriptions":{}}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:6:18","memberName":"length","nodeType":"MemberAccess","src":"1500:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1522:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1500:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2083,"nodeType":"IfStatement","src":"1496:70:18","trueBody":{"id":2082,"nodeType":"Block","src":"1525:41:18","statements":[{"expression":{"id":2080,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1546:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2057,"id":2081,"nodeType":"Return","src":"1539:16:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2086,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1671:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1665:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2084,"name":"bytes","nodeType":"ElementaryTypeName","src":"1665:5:18","typeDescriptions":{}}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1682:6:18","memberName":"length","nodeType":"MemberAccess","src":"1665:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1665:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"1661:95:18","trueBody":{"id":2098,"nodeType":"Block","src":"1694:62:18","statements":[{"expression":{"arguments":[{"id":2094,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"1729:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2095,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1735:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1715:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2091,"name":"string","nodeType":"ElementaryTypeName","src":"1715:6:18","typeDescriptions":{}}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1722:6:18","memberName":"concat","nodeType":"MemberAccess","src":"1715:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2057,"id":2097,"nodeType":"Return","src":"1708:37:18"}]}},{"expression":{"arguments":[{"id":2102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"1788:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2100,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1773:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2126_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:8:18","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"1773:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1773:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2057,"id":2104,"nodeType":"Return","src":"1766:30:18"}]},"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1150:55:18","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1219:8:18","nodeType":"FunctionDefinition","overrides":{"id":2054,"nodeType":"OverrideSpecifier","overrides":[],"src":"1265:8:18"},"parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"tokenId","nameLocation":"1236:7:18","nodeType":"VariableDeclaration","scope":2106,"src":"1228:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:17:18"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"1283:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2055,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:18"},"scope":2126,"src":"1210:593:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2124,"nodeType":"Block","src":"2003:86:18","statements":[{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2114,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"2013:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2116,"indexExpression":{"id":2115,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2024:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2013:19:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2117,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"2035:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2013:31:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2119,"nodeType":"ExpressionStatement","src":"2013:31:18"},{"eventCall":{"arguments":[{"id":2121,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"2074:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"2059:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2059:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"EmitStatement","src":"2054:28:18"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"1809:108:18","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1931:12:18","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"tokenId","nameLocation":"1952:7:18","nodeType":"VariableDeclaration","scope":2125,"src":"1944:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1944:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"_tokenURI","nameLocation":"1975:9:18","nodeType":"VariableDeclaration","scope":2125,"src":"1961:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2110,"name":"string","nodeType":"ElementaryTypeName","src":"1961:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1943:42:18"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"2003:0:18"},"scope":2126,"src":"1922:167:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2127,"src":"431:1660:18","usedErrors":[660,665,674,679,684,691,696,701],"usedEvents":[600,607,1852,1861,1870]}],"src":"128:1964:18"},"id":18},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1953],"IERC721Metadata":[2154]},"id":2155,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2155,"sourceUnit":1954,"src":"153:39:19","symbolAliases":[{"foreign":{"id":2129,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"161:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2132,"name":"IERC721","nameLocations":["357:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":1953,"src":"357:7:19"},"id":2133,"nodeType":"InheritanceSpecifier","src":"357:7:19"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"194:133:19","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2154,"linearizedBaseContracts":[2154,1953,2467],"name":"IERC721Metadata","nameLocation":"338:15:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"371:58:19","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2139,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:19","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[],"src":"447:2:19"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2139,"src":"473:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2136,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:19"},"scope":2154,"src":"434:54:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"494:60:19","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2145,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:19","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[],"src":"574:2:19"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2145,"src":"600:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2142,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:19"},"scope":2154,"src":"559:56:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2146,"nodeType":"StructuredDocumentation","src":"621:90:19","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2153,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:19","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:19","nodeType":"VariableDeclaration","scope":2153,"src":"734:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:19"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"774:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2150,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:19"},"scope":2154,"src":"716:73:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2155,"src":"328:463:19","usedErrors":[],"usedEvents":[1852,1861,1870]}],"src":"127:665:19"},"id":19},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2176]},"id":2177,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2156,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:20"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"127:496:20","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2176,"linearizedBaseContracts":[2176],"name":"Context","nameLocation":"642:7:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":2165,"nodeType":"Block","src":"718:34:20","statements":[{"expression":{"expression":{"id":2162,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:20","memberName":"sender","nodeType":"MemberAccess","src":"735:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2161,"id":2164,"nodeType":"Return","src":"728:17:20"}]},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:20","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[],"src":"675:2:20"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"709:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:20"},"scope":2176,"src":"656:96:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2174,"nodeType":"Block","src":"825:32:20","statements":[{"expression":{"expression":{"id":2171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:20","memberName":"data","nodeType":"MemberAccess","src":"842:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2170,"id":2173,"nodeType":"Return","src":"835:15:20"}]},"id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:20","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[],"src":"775:2:20"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2175,"src":"809:14:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2168,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:20"},"scope":2176,"src":"758:99:20","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2177,"src":"624:235:20","usedErrors":[],"usedEvents":[]}],"src":"101:759:20"},"id":20},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3521],"SignedMath":[3626],"Strings":[2431]},"id":2432,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2178,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2432,"sourceUnit":3522,"src":"127:37:21","symbolAliases":[{"foreign":{"id":2179,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"135:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2432,"sourceUnit":3627,"src":"165:49:21","symbolAliases":[{"foreign":{"id":2181,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"173:10:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2183,"nodeType":"StructuredDocumentation","src":"216:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":2431,"linearizedBaseContracts":[2431],"name":"Strings","nameLocation":"259:7:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2186,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:21","nodeType":"VariableDeclaration","scope":2431,"src":"273:56:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2184,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2189,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:21","nodeType":"VariableDeclaration","scope":2431,"src":"335:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2187,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2190,"nodeType":"StructuredDocumentation","src":"384:81:21","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2196,"name":"StringsInsufficientHexLength","nameLocation":"476:28:21","nodeType":"ErrorDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"value","nameLocation":"513:5:21","nodeType":"VariableDeclaration","scope":2196,"src":"505:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"length","nameLocation":"528:6:21","nodeType":"VariableDeclaration","scope":2196,"src":"520:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:21"},"src":"470:66:21"},{"body":{"id":2243,"nodeType":"Block","src":"708:627:21","statements":[{"id":2242,"nodeType":"UncheckedBlock","src":"718:611:21","statements":[{"assignments":[2205],"declarations":[{"constant":false,"id":2205,"mutability":"mutable","name":"length","nameLocation":"750:6:21","nodeType":"VariableDeclaration","scope":2242,"src":"742:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2212,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"770:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2206,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"759:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3521_$","typeString":"type(library Math)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:21","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3341,"src":"759:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:21"},{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"buffer","nameLocation":"808:6:21","nodeType":"VariableDeclaration","scope":2242,"src":"794:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2213,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2219,"initialValue":{"arguments":[{"id":2217,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"828:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2215,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:21"},{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"ptr","nameLocation":"857:3:21","nodeType":"VariableDeclaration","scope":2242,"src":"849:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2222,"nodeType":"VariableDeclarationStatement","src":"849:11:21"},{"AST":{"nodeType":"YulBlock","src":"930:67:21","statements":[{"nodeType":"YulAssignment","src":"948:35:21","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:21"},"nodeType":"YulFunctionCall","src":"967:15:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:21"},"nodeType":"YulFunctionCall","src":"955:28:21"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2214,"isOffset":false,"isSlot":false,"src":"959:6:21","valueSize":1},{"declaration":2205,"isOffset":false,"isSlot":false,"src":"975:6:21","valueSize":1},{"declaration":2221,"isOffset":false,"isSlot":false,"src":"948:3:21","valueSize":1}],"id":2223,"nodeType":"InlineAssembly","src":"921:76:21"},{"body":{"id":2238,"nodeType":"Block","src":"1023:269:21","statements":[{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:21","subExpression":{"id":2225,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1041:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"1041:5:21"},{"AST":{"nodeType":"YulBlock","src":"1124:86:21","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:21"},"nodeType":"YulFunctionCall","src":"1164:14:21"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:21"},"nodeType":"YulFunctionCall","src":"1159:32:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:21"},"nodeType":"YulFunctionCall","src":"1146:46:21"},"nodeType":"YulExpressionStatement","src":"1146:46:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2186,"isOffset":false,"isSlot":false,"src":"1180:10:21","valueSize":1},{"declaration":2221,"isOffset":false,"isSlot":false,"src":"1154:3:21","valueSize":1},{"declaration":2199,"isOffset":false,"isSlot":false,"src":"1168:5:21","valueSize":1}],"id":2228,"nodeType":"InlineAssembly","src":"1115:95:21"},{"expression":{"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1227:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2232,"nodeType":"ExpressionStatement","src":"1227:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1260:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"1256:21:21","trueBody":{"id":2236,"nodeType":"Break","src":"1272:5:21"}}]},"condition":{"hexValue":"74727565","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2239,"nodeType":"WhileStatement","src":"1010:282:21"},{"expression":{"id":2240,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"1312:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2203,"id":2241,"nodeType":"Return","src":"1305:13:21"}]}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"542:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:21","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"value","nameLocation":"663:5:21","nodeType":"VariableDeclaration","scope":2244,"src":"655:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2198,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:21"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"693:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2201,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:21"},"scope":2431,"src":"637:698:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"1511:92:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1542:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:21","trueExpression":{"hexValue":"2d","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1588:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2262,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"1573:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3626_$","typeString":"type(library SignedMath)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:21","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3625,"src":"1573:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2261,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"1564:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2252,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:21","typeDescriptions":{}}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:21","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:21","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2251,"id":2268,"nodeType":"Return","src":"1521:75:21"}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"1341:89:21","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:21","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"value","nameLocation":"1466:5:21","nodeType":"VariableDeclaration","scope":2270,"src":"1459:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2246,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:21"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"1496:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2249,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:21"},"scope":2431,"src":"1435:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2289,"nodeType":"Block","src":"1782:100:21","statements":[{"id":2288,"nodeType":"UncheckedBlock","src":"1792:84:21","statements":[{"expression":{"arguments":[{"id":2279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1854:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2280,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"1842:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3521_$","typeString":"type(library Math)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:21","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3463,"src":"1842:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2278,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2290,2373,2393],"referencedDeclaration":2373,"src":"1823:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2277,"id":2287,"nodeType":"Return","src":"1816:49:21"}]}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"1609:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:21","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"value","nameLocation":"1737:5:21","nodeType":"VariableDeclaration","scope":2290,"src":"1729:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:21"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"1767:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2275,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:21"},"scope":2431,"src":"1708:174:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2372,"nodeType":"Block","src":"2095:435:21","statements":[{"assignments":[2301],"declarations":[{"constant":false,"id":2301,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:21","nodeType":"VariableDeclaration","scope":2372,"src":"2105:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2303,"initialValue":{"id":2302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2126:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:21"},{"assignments":[2305],"declarations":[{"constant":false,"id":2305,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:21","nodeType":"VariableDeclaration","scope":2372,"src":"2141:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2314,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2309,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2177:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2306,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:21"},{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2315,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2198:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2317,"indexExpression":{"hexValue":"30","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2320,"nodeType":"ExpressionStatement","src":"2198:15:21"},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2321,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2223:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2323,"indexExpression":{"hexValue":"31","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2326,"nodeType":"ExpressionStatement","src":"2223:15:21"},{"body":{"id":2355,"nodeType":"Block","src":"2293:95:21","statements":[{"expression":{"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2341,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2307:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2343,"indexExpression":{"id":2342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2314:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2344,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"2319:10:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2348,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2330:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2350,"nodeType":"ExpressionStatement","src":"2307:40:21"},{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2351,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2361:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2354,"nodeType":"ExpressionStatement","src":"2361:16:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2281:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2356,"initializationExpression":{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"i","nameLocation":"2261:1:21","nodeType":"VariableDeclaration","scope":2356,"src":"2253:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2334,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2330,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2269:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:21"},"loopExpression":{"expression":{"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:21","subExpression":{"id":2338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2290:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2340,"nodeType":"ExpressionStatement","src":"2288:3:21"},"nodeType":"ForStatement","src":"2248:140:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"2401:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2366,"nodeType":"IfStatement","src":"2397:96:21","trueBody":{"id":2365,"nodeType":"Block","src":"2418:75:21","statements":[{"errorCall":{"arguments":[{"id":2361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"2468:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2362,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"2475:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2360,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"2439:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2364,"nodeType":"RevertStatement","src":"2432:50:21"}]}},{"expression":{"arguments":[{"id":2369,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2516:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2367,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:21","typeDescriptions":{}}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2299,"id":2371,"nodeType":"Return","src":"2502:21:21"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"1888:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:21","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"value","nameLocation":"2034:5:21","nodeType":"VariableDeclaration","scope":2373,"src":"2026:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"length","nameLocation":"2049:6:21","nodeType":"VariableDeclaration","scope":2373,"src":"2041:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:21"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2373,"src":"2080:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2297,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:21"},"scope":2431,"src":"2005:525:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2392,"nodeType":"Block","src":"2762:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2386,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"2807:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2384,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:21","typeDescriptions":{}}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:21","typeDescriptions":{}}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2389,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"2815:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2381,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2290,2373,2393],"referencedDeclaration":2373,"src":"2779:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2380,"id":2391,"nodeType":"Return","src":"2772:58:21"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"2536:148:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:21","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"addr","nameLocation":"2718:4:21","nodeType":"VariableDeclaration","scope":2393,"src":"2710:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2375,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:21"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"2747:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2378,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:21"},"scope":2431,"src":"2689:148:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2429,"nodeType":"Block","src":"2992:104:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"3015:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:21","typeDescriptions":{}}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:21","memberName":"length","nodeType":"MemberAccess","src":"3009:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"3034:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2408,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:21","typeDescriptions":{}}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:21","memberName":"length","nodeType":"MemberAccess","src":"3028:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"3063:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2415,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:21","typeDescriptions":{}}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2414,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"3086:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2421,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:21","typeDescriptions":{}}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2420,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2402,"id":2428,"nodeType":"Return","src":"3002:87:21"}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"2843:66:21","text":" @dev Returns true if the two strings are equal."},"id":2430,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:21","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"a","nameLocation":"2943:1:21","nodeType":"VariableDeclaration","scope":2430,"src":"2929:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2395,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"b","nameLocation":"2960:1:21","nodeType":"VariableDeclaration","scope":2430,"src":"2946:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2397,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:21"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2430,"src":"2986:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2400,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:21"},"scope":2431,"src":"2914:182:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2432,"src":"251:2847:21","usedErrors":[2196],"usedEvents":[]}],"src":"101:2998:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2455],"IERC165":[2467]},"id":2456,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2433,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2456,"sourceUnit":2468,"src":"140:38:22","symbolAliases":[{"foreign":{"id":2434,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"148:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2437,"name":"IERC165","nameLocations":["687:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":2467,"src":"687:7:22"},"id":2438,"nodeType":"InheritanceSpecifier","src":"687:7:22"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"180:478:22","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2455,"linearizedBaseContracts":[2455,2467],"name":"ERC165","nameLocation":"677:6:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2466],"body":{"id":2453,"nodeType":"Block","src":"844:64:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"861:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2448,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"881:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2467_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2467_$","typeString":"type(contract IERC165)"}],"id":2447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2467","typeString":"type(contract IERC165)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2445,"id":2452,"nodeType":"Return","src":"854:47:22"}]},"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"701:56:22","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:22","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:22","nodeType":"VariableDeclaration","scope":2454,"src":"789:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2440,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:22"},"returnParameters":{"id":2445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"838:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2443,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:22"},"scope":2455,"src":"762:146:22","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2456,"src":"659:251:22","usedErrors":[],"usedEvents":[]}],"src":"114:797:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2467]},"id":2468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2457,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"141:279:23","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2467,"linearizedBaseContracts":[2467],"name":"IERC165","nameLocation":"431:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"445:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2466,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:23","nodeType":"FunctionDefinition","parameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:23","nodeType":"VariableDeclaration","scope":2466,"src":"817:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2460,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:23"},"returnParameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"860:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2463,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:23"},"scope":2467,"src":"790:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2468,"src":"421:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:754:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3521]},"id":3522,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2469,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"129:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3521,"linearizedBaseContracts":[3521],"name":"Math","nameLocation":"211:4:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"222:50:24","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2473,"name":"MathOverflowedMulDiv","nameLocation":"283:20:24","nodeType":"ErrorDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[],"src":"303:2:24"},"src":"277:29:24"},{"canonicalName":"Math.Rounding","id":2478,"members":[{"id":2474,"name":"Floor","nameLocation":"336:5:24","nodeType":"EnumValue","src":"336:5:24"},{"id":2475,"name":"Ceil","nameLocation":"379:4:24","nodeType":"EnumValue","src":"379:4:24"},{"id":2476,"name":"Trunc","nameLocation":"421:5:24","nodeType":"EnumValue","src":"421:5:24"},{"id":2477,"name":"Expand","nameLocation":"451:6:24","nodeType":"EnumValue","src":"451:6:24"}],"name":"Rounding","nameLocation":"317:8:24","nodeType":"EnumDefinition","src":"312:169:24"},{"body":{"id":2509,"nodeType":"Block","src":"661:140:24","statements":[{"id":2508,"nodeType":"UncheckedBlock","src":"671:124:24","statements":[{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"c","nameLocation":"703:1:24","nodeType":"VariableDeclaration","scope":2508,"src":"695:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2495,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"707:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2493,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"711:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2496,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"730:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"734:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2503,"nodeType":"IfStatement","src":"726:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2489,"id":2502,"nodeType":"Return","src":"737:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2505,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"782:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2489,"id":2507,"nodeType":"Return","src":"768:16:24"}]}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"487:93:24","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:24","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"a","nameLocation":"609:1:24","nodeType":"VariableDeclaration","scope":2510,"src":"601:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"b","nameLocation":"620:1:24","nodeType":"VariableDeclaration","scope":2510,"src":"612:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:24"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2510,"src":"646:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2485,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2510,"src":"652:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:24"},"scope":3521,"src":"585:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2537,"nodeType":"Block","src":"984:113:24","statements":[{"id":2536,"nodeType":"UncheckedBlock","src":"994:97:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"1022:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"1026:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2529,"nodeType":"IfStatement","src":"1018:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2521,"id":2528,"nodeType":"Return","src":"1029:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"1074:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2532,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"1078:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2521,"id":2535,"nodeType":"Return","src":"1060:20:24"}]}]},"documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"807:96:24","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:24","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"a","nameLocation":"932:1:24","nodeType":"VariableDeclaration","scope":2538,"src":"924:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"b","nameLocation":"943:1:24","nodeType":"VariableDeclaration","scope":2538,"src":"935:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:24"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2538,"src":"969:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2517,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2538,"src":"975:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:24"},"scope":3521,"src":"908:189:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2579,"nodeType":"Block","src":"1283:417:24","statements":[{"id":2578,"nodeType":"UncheckedBlock","src":"1293:401:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"1551:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2557,"nodeType":"IfStatement","src":"1547:28:24","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2549,"id":2556,"nodeType":"Return","src":"1559:16:24"}},{"assignments":[2559],"declarations":[{"constant":false,"id":2559,"mutability":"mutable","name":"c","nameLocation":"1597:1:24","nodeType":"VariableDeclaration","scope":2578,"src":"1589:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2563,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"1601:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2561,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"1605:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1624:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2565,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"1628:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"1633:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2573,"nodeType":"IfStatement","src":"1620:33:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2549,"id":2572,"nodeType":"Return","src":"1636:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2575,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"1681:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2549,"id":2577,"nodeType":"Return","src":"1667:16:24"}]}]},"documentation":{"id":2539,"nodeType":"StructuredDocumentation","src":"1103:99:24","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:24","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"a","nameLocation":"1231:1:24","nodeType":"VariableDeclaration","scope":2580,"src":"1223:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"b","nameLocation":"1242:1:24","nodeType":"VariableDeclaration","scope":2580,"src":"1234:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:24"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"1268:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2545,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"1274:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:24"},"scope":3521,"src":"1207:493:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"1887:114:24","statements":[{"id":2606,"nodeType":"UncheckedBlock","src":"1897:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"1925:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2599,"nodeType":"IfStatement","src":"1921:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2591,"id":2598,"nodeType":"Return","src":"1933:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1978:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"1982:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2591,"id":2605,"nodeType":"Return","src":"1964:20:24"}]}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"1706:100:24","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2608,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:24","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"a","nameLocation":"1835:1:24","nodeType":"VariableDeclaration","scope":2608,"src":"1827:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"b","nameLocation":"1846:1:24","nodeType":"VariableDeclaration","scope":2608,"src":"1838:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:24"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"1872:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2587,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2608,"src":"1878:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:24"},"scope":3521,"src":"1811:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2635,"nodeType":"Block","src":"2198:114:24","statements":[{"id":2634,"nodeType":"UncheckedBlock","src":"2208:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"2236:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2627,"nodeType":"IfStatement","src":"2232:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2619,"id":2626,"nodeType":"Return","src":"2244:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2629,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"2289:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2630,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"2293:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2619,"id":2633,"nodeType":"Return","src":"2275:20:24"}]}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"2007:110:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2636,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:24","nodeType":"FunctionDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"a","nameLocation":"2146:1:24","nodeType":"VariableDeclaration","scope":2636,"src":"2138:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"b","nameLocation":"2157:1:24","nodeType":"VariableDeclaration","scope":2636,"src":"2149:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:24"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2636,"src":"2183:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2615,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2636,"src":"2189:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:24"},"scope":3521,"src":"2122:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2653,"nodeType":"Block","src":"2449:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2466:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2647,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2470:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2650,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2478:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:24","trueExpression":{"id":2649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2474:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2645,"id":2652,"nodeType":"Return","src":"2459:20:24"}]},"documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"2318:59:24","text":" @dev Returns the largest of two numbers."},"id":2654,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:24","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"a","nameLocation":"2403:1:24","nodeType":"VariableDeclaration","scope":2654,"src":"2395:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"b","nameLocation":"2414:1:24","nodeType":"VariableDeclaration","scope":2654,"src":"2406:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:24"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2654,"src":"2440:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:24"},"scope":3521,"src":"2382:104:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2671,"nodeType":"Block","src":"2624:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2641:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"2645:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2668,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"2653:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:24","trueExpression":{"id":2667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"2649:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2663,"id":2670,"nodeType":"Return","src":"2634:20:24"}]},"documentation":{"id":2655,"nodeType":"StructuredDocumentation","src":"2492:60:24","text":" @dev Returns the smallest of two numbers."},"id":2672,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:24","nodeType":"FunctionDefinition","parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"a","nameLocation":"2578:1:24","nodeType":"VariableDeclaration","scope":2672,"src":"2570:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"b","nameLocation":"2589:1:24","nodeType":"VariableDeclaration","scope":2672,"src":"2581:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:24"},"returnParameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2672,"src":"2615:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:24"},"scope":3521,"src":"2557:104:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2694,"nodeType":"Block","src":"2845:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2900:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2904:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2910:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2687,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2914:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2681,"id":2693,"nodeType":"Return","src":"2892:28:24"}]},"documentation":{"id":2673,"nodeType":"StructuredDocumentation","src":"2667:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2695,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:24","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"a","nameLocation":"2799:1:24","nodeType":"VariableDeclaration","scope":2695,"src":"2791:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"b","nameLocation":"2810:1:24","nodeType":"VariableDeclaration","scope":2695,"src":"2802:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:24"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2695,"src":"2836:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:24"},"scope":3521,"src":"2774:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2728,"nodeType":"Block","src":"3219:260:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3233:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2713,"nodeType":"IfStatement","src":"3229:127:24","trueBody":{"id":2712,"nodeType":"Block","src":"3241:115:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3340:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3344:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2704,"id":2711,"nodeType":"Return","src":"3333:12:24"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3444:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"3458:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3467:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:24","trueExpression":{"hexValue":"30","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2704,"id":2727,"nodeType":"Return","src":"3437:35:24"}]},"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"2933:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:24","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"a","nameLocation":"3173:1:24","nodeType":"VariableDeclaration","scope":2729,"src":"3165:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"b","nameLocation":"3184:1:24","nodeType":"VariableDeclaration","scope":2729,"src":"3176:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:24"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2729,"src":"3210:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:24"},"scope":3521,"src":"3148:331:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2854,"nodeType":"Block","src":"3901:4018:24","statements":[{"id":2853,"nodeType":"UncheckedBlock","src":"3911:4002:24","statements":[{"assignments":[2742],"declarations":[{"constant":false,"id":2742,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:24","nodeType":"VariableDeclaration","scope":2853,"src":"4232:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"4248:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2744,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"4252:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:24"},{"assignments":[2748],"declarations":[{"constant":false,"id":2748,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:24","nodeType":"VariableDeclaration","scope":2853,"src":"4312:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2749,"nodeType":"VariableDeclarationStatement","src":"4312:13:24"},{"AST":{"nodeType":"YulBlock","src":"4392:122:24","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:24"},"nodeType":"YulFunctionCall","src":"4433:6:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:24"},"nodeType":"YulFunctionCall","src":"4420:20:24"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:24","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:24"},"nodeType":"YulFunctionCall","src":"4470:14:24"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:24"},"nodeType":"YulFunctionCall","src":"4486:13:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:24"},"nodeType":"YulFunctionCall","src":"4466:34:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2742,"isOffset":false,"isSlot":false,"src":"4478:5:24","valueSize":1},{"declaration":2742,"isOffset":false,"isSlot":false,"src":"4493:5:24","valueSize":1},{"declaration":2748,"isOffset":false,"isSlot":false,"src":"4457:5:24","valueSize":1},{"declaration":2732,"isOffset":false,"isSlot":false,"src":"4427:1:24","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"4430:1:24","valueSize":1}],"id":2750,"nodeType":"InlineAssembly","src":"4383:131:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"4595:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2759,"nodeType":"IfStatement","src":"4591:368:24","trueBody":{"id":2758,"nodeType":"Block","src":"4607:352:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"4925:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2755,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"4933:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2740,"id":2757,"nodeType":"Return","src":"4918:26:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"5065:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2761,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"5080:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2767,"nodeType":"IfStatement","src":"5061:88:24","trueBody":{"id":2766,"nodeType":"Block","src":"5087:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2763,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"5112:20:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"RevertStatement","src":"5105:29:24"}]}},{"assignments":[2769],"declarations":[{"constant":false,"id":2769,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:24","nodeType":"VariableDeclaration","scope":2853,"src":"5404:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2770,"nodeType":"VariableDeclarationStatement","src":"5404:17:24"},{"AST":{"nodeType":"YulBlock","src":"5444:291:24","statements":[{"nodeType":"YulAssignment","src":"5513:38:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:24"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:24"},"nodeType":"YulFunctionCall","src":"5526:25:24"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:24"}]},{"nodeType":"YulAssignment","src":"5633:41:24","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:24"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:24"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:24"},"nodeType":"YulFunctionCall","src":"5653:20:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:24"},"nodeType":"YulFunctionCall","src":"5642:32:24"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:24"}]},{"nodeType":"YulAssignment","src":"5691:30:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:24"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:24"},"nodeType":"YulFunctionCall","src":"5700:21:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2736,"isOffset":false,"isSlot":false,"src":"5539:11:24","valueSize":1},{"declaration":2742,"isOffset":false,"isSlot":false,"src":"5667:5:24","valueSize":1},{"declaration":2742,"isOffset":false,"isSlot":false,"src":"5691:5:24","valueSize":1},{"declaration":2742,"isOffset":false,"isSlot":false,"src":"5704:5:24","valueSize":1},{"declaration":2748,"isOffset":false,"isSlot":false,"src":"5633:5:24","valueSize":1},{"declaration":2748,"isOffset":false,"isSlot":false,"src":"5646:5:24","valueSize":1},{"declaration":2769,"isOffset":false,"isSlot":false,"src":"5513:9:24","valueSize":1},{"declaration":2769,"isOffset":false,"isSlot":false,"src":"5656:9:24","valueSize":1},{"declaration":2769,"isOffset":false,"isSlot":false,"src":"5711:9:24","valueSize":1},{"declaration":2732,"isOffset":false,"isSlot":false,"src":"5533:1:24","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"5536:1:24","valueSize":1}],"id":2771,"nodeType":"InlineAssembly","src":"5435:300:24"},{"assignments":[2773],"declarations":[{"constant":false,"id":2773,"mutability":"mutable","name":"twos","nameLocation":"5947:4:24","nodeType":"VariableDeclaration","scope":2853,"src":"5939:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2772,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2780,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2774,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"5954:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2776,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"5973:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:24"},{"AST":{"nodeType":"YulBlock","src":"6008:362:24","statements":[{"nodeType":"YulAssignment","src":"6073:37:24","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:24"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:24"},"nodeType":"YulFunctionCall","src":"6088:22:24"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:24"}]},{"nodeType":"YulAssignment","src":"6177:25:24","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:24"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:24"},"nodeType":"YulFunctionCall","src":"6186:16:24"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:24"}]},{"nodeType":"YulAssignment","src":"6317:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:24","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:24"},"nodeType":"YulFunctionCall","src":"6333:12:24"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:24"},"nodeType":"YulFunctionCall","src":"6329:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:24"},"nodeType":"YulFunctionCall","src":"6325:31:24"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2736,"isOffset":false,"isSlot":false,"src":"6073:11:24","valueSize":1},{"declaration":2736,"isOffset":false,"isSlot":false,"src":"6092:11:24","valueSize":1},{"declaration":2742,"isOffset":false,"isSlot":false,"src":"6177:5:24","valueSize":1},{"declaration":2742,"isOffset":false,"isSlot":false,"src":"6190:5:24","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"6105:4:24","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"6197:4:24","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"6317:4:24","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"6340:4:24","valueSize":1},{"declaration":2773,"isOffset":false,"isSlot":false,"src":"6347:4:24","valueSize":1}],"id":2781,"nodeType":"InlineAssembly","src":"5999:371:24"},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2782,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"6436:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"6445:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2784,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"6453:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2787,"nodeType":"ExpressionStatement","src":"6436:21:24"},{"assignments":[2789],"declarations":[{"constant":false,"id":2789,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:24","nodeType":"VariableDeclaration","scope":2853,"src":"6775:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2796,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2791,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"6798:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:24"},{"expression":{"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2797,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"7046:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2800,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7060:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2804,"nodeType":"ExpressionStatement","src":"7031:36:24"},{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2805,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7100:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"7115:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2808,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7129:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"7100:36:24"},{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2813,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7170:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"7185:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2816,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7199:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"7170:36:24"},{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2821,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7240:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"7255:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2824,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7269:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2828,"nodeType":"ExpressionStatement","src":"7240:36:24"},{"expression":{"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2829,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"7325:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2832,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2836,"nodeType":"ExpressionStatement","src":"7310:36:24"},{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2837,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7381:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"7396:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2840,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7410:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"7381:36:24"},{"expression":{"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7851:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"7860:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2847,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7868:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2850,"nodeType":"ExpressionStatement","src":"7851:24:24"},{"expression":{"id":2851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"7896:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2740,"id":2852,"nodeType":"Return","src":"7889:13:24"}]}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"3485:313:24","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:24","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"x","nameLocation":"3827:1:24","nodeType":"VariableDeclaration","scope":2855,"src":"3819:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"y","nameLocation":"3838:1:24","nodeType":"VariableDeclaration","scope":2855,"src":"3830:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:24","nodeType":"VariableDeclaration","scope":2855,"src":"3841:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:24"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"result","nameLocation":"3893:6:24","nodeType":"VariableDeclaration","scope":2855,"src":"3885:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:24"},"scope":3521,"src":"3803:4116:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"8161:192:24","statements":[{"assignments":[2871],"declarations":[{"constant":false,"id":2871,"mutability":"mutable","name":"result","nameLocation":"8179:6:24","nodeType":"VariableDeclaration","scope":2897,"src":"8171:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2877,"initialValue":{"arguments":[{"id":2873,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"8195:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2874,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"8198:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2875,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8201:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2872,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2855,2898],"referencedDeclaration":2855,"src":"8188:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2879,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"8244:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}],"id":2878,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"8227:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2478_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2882,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"8264:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2883,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"8267:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2884,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"8270:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2881,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2894,"nodeType":"IfStatement","src":"8223:101:24","trueBody":{"id":2893,"nodeType":"Block","src":"8288:36:24","statements":[{"expression":{"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"8302:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2892,"nodeType":"ExpressionStatement","src":"8302:11:24"}]}},{"expression":{"id":2895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"8340:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2869,"id":2896,"nodeType":"Return","src":"8333:13:24"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"7925:121:24","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:24","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"x","nameLocation":"8075:1:24","nodeType":"VariableDeclaration","scope":2898,"src":"8067:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"y","nameLocation":"8086:1:24","nodeType":"VariableDeclaration","scope":2898,"src":"8078:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:24","nodeType":"VariableDeclaration","scope":2898,"src":"8089:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:24","nodeType":"VariableDeclaration","scope":2898,"src":"8110:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"},"typeName":{"id":2864,"nodeType":"UserDefinedTypeName","pathNode":{"id":2863,"name":"Rounding","nameLocations":["8110:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":2478,"src":"8110:8:24"},"referencedDeclaration":2478,"src":"8110:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:24"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"8152:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:24"},"scope":3521,"src":"8051:302:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"8644:1585:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"8658:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2912,"nodeType":"IfStatement","src":"8654:45:24","trueBody":{"id":2911,"nodeType":"Block","src":"8666:33:24","statements":[{"expression":{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2905,"id":2910,"nodeType":"Return","src":"8680:8:24"}]}},{"assignments":[2914],"declarations":[{"constant":false,"id":2914,"mutability":"mutable","name":"result","nameLocation":"9386:6:24","nodeType":"VariableDeclaration","scope":3009,"src":"9378:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2923,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"9406:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2916,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3177,3212],"referencedDeclaration":3177,"src":"9401:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:24"},{"id":3008,"nodeType":"UncheckedBlock","src":"9815:408:24","statements":[{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9839:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9849:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"9858:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9862:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2934,"nodeType":"ExpressionStatement","src":"9839:35:24"},{"expression":{"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9888:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9898:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"9907:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9911:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2945,"nodeType":"ExpressionStatement","src":"9888:35:24"},{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9937:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9947:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"9956:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9960:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"9937:35:24"},{"expression":{"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9986:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"9996:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"10005:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10009:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2967,"nodeType":"ExpressionStatement","src":"9986:35:24"},{"expression":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10035:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10045:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2970,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"10054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10058:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2978,"nodeType":"ExpressionStatement","src":"10035:35:24"},{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10084:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10094:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"10103:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10107:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2989,"nodeType":"ExpressionStatement","src":"10084:35:24"},{"expression":{"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10133:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10143:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"10152:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10156:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3000,"nodeType":"ExpressionStatement","src":"10133:35:24"},{"expression":{"arguments":[{"id":3002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10193:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"10201:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10205:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3001,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"10189:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2905,"id":3007,"nodeType":"Return","src":"10182:30:24"}]}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"8359:223:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:24","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"a","nameLocation":"8609:1:24","nodeType":"VariableDeclaration","scope":3010,"src":"8601:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:24"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3010,"src":"8635:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:24"},"scope":3521,"src":"8587:1642:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3044,"nodeType":"Block","src":"10405:164:24","statements":[{"id":3043,"nodeType":"UncheckedBlock","src":"10415:148:24","statements":[{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"result","nameLocation":"10447:6:24","nodeType":"VariableDeclaration","scope":3043,"src":"10439:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3026,"initialValue":{"arguments":[{"id":3024,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"10461:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3023,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3010,3045],"referencedDeclaration":3010,"src":"10456:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10484:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3029,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"10511:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}],"id":3028,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"10494:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2478_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10524:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10533:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"10542:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:24","trueExpression":{"hexValue":"31","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3020,"id":3042,"nodeType":"Return","src":"10477:75:24"}]}]},"documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"10235:89:24","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3045,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:24","nodeType":"FunctionDefinition","parameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"a","nameLocation":"10351:1:24","nodeType":"VariableDeclaration","scope":3045,"src":"10343:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:24","nodeType":"VariableDeclaration","scope":3045,"src":"10354:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"},"typeName":{"id":3015,"nodeType":"UserDefinedTypeName","pathNode":{"id":3014,"name":"Rounding","nameLocations":["10354:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":2478,"src":"10354:8:24"},"referencedDeclaration":2478,"src":"10354:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:24"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3045,"src":"10396:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:24"},"scope":3521,"src":"10329:240:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3176,"nodeType":"Block","src":"10760:922:24","statements":[{"assignments":[3054],"declarations":[{"constant":false,"id":3054,"mutability":"mutable","name":"result","nameLocation":"10778:6:24","nodeType":"VariableDeclaration","scope":3176,"src":"10770:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3056,"initialValue":{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:24"},{"id":3173,"nodeType":"UncheckedBlock","src":"10798:855:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"10826:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"nodeType":"IfStatement","src":"10822:99:24","trueBody":{"id":3070,"nodeType":"Block","src":"10844:77:24","statements":[{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"10862:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"10862:13:24"},{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"10893:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ExpressionStatement","src":"10893:13:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"10938:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3086,"nodeType":"IfStatement","src":"10934:96:24","trueBody":{"id":3085,"nodeType":"Block","src":"10955:75:24","statements":[{"expression":{"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"10973:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3080,"nodeType":"ExpressionStatement","src":"10973:12:24"},{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3081,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11003:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3084,"nodeType":"ExpressionStatement","src":"11003:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11047:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3101,"nodeType":"IfStatement","src":"11043:96:24","trueBody":{"id":3100,"nodeType":"Block","src":"11064:75:24","statements":[{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11082:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"11082:12:24"},{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11112:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3099,"nodeType":"ExpressionStatement","src":"11112:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11156:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3116,"nodeType":"IfStatement","src":"11152:96:24","trueBody":{"id":3115,"nodeType":"Block","src":"11173:75:24","statements":[{"expression":{"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11191:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3110,"nodeType":"ExpressionStatement","src":"11191:12:24"},{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11221:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"nodeType":"ExpressionStatement","src":"11221:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11265:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"nodeType":"IfStatement","src":"11261:93:24","trueBody":{"id":3130,"nodeType":"Block","src":"11281:73:24","statements":[{"expression":{"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11299:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3125,"nodeType":"ExpressionStatement","src":"11299:11:24"},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11328:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"11328:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11371:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3146,"nodeType":"IfStatement","src":"11367:93:24","trueBody":{"id":3145,"nodeType":"Block","src":"11387:73:24","statements":[{"expression":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11405:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3140,"nodeType":"ExpressionStatement","src":"11405:11:24"},{"expression":{"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11434:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3144,"nodeType":"ExpressionStatement","src":"11434:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11477:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3161,"nodeType":"IfStatement","src":"11473:93:24","trueBody":{"id":3160,"nodeType":"Block","src":"11493:73:24","statements":[{"expression":{"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11511:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3155,"nodeType":"ExpressionStatement","src":"11511:11:24"},{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11540:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ExpressionStatement","src":"11540:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"11583:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3172,"nodeType":"IfStatement","src":"11579:64:24","trueBody":{"id":3171,"nodeType":"Block","src":"11599:44:24","statements":[{"expression":{"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11617:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3170,"nodeType":"ExpressionStatement","src":"11617:11:24"}]}}]},{"expression":{"id":3174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"11669:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3052,"id":3175,"nodeType":"Return","src":"11662:13:24"}]},"documentation":{"id":3046,"nodeType":"StructuredDocumentation","src":"10575:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3177,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:24","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"value","nameLocation":"10721:5:24","nodeType":"VariableDeclaration","scope":3177,"src":"10713:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:24"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"10751:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:24"},"scope":3521,"src":"10699:983:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3211,"nodeType":"Block","src":"11915:168:24","statements":[{"id":3210,"nodeType":"UncheckedBlock","src":"11925:152:24","statements":[{"assignments":[3189],"declarations":[{"constant":false,"id":3189,"mutability":"mutable","name":"result","nameLocation":"11957:6:24","nodeType":"VariableDeclaration","scope":3210,"src":"11949:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3193,"initialValue":{"arguments":[{"id":3191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"11971:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3190,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3177,3212],"referencedDeclaration":3177,"src":"11966:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"11998:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3196,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"12025:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}],"id":3195,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"12008:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2478_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"12043:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"12052:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:24","trueExpression":{"hexValue":"31","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3207,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3187,"id":3209,"nodeType":"Return","src":"11991:75:24"}]}]},"documentation":{"id":3178,"nodeType":"StructuredDocumentation","src":"11688:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3212,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:24","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"value","nameLocation":"11857:5:24","nodeType":"VariableDeclaration","scope":3212,"src":"11849:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:24","nodeType":"VariableDeclaration","scope":3212,"src":"11864:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"},"typeName":{"id":3182,"nodeType":"UserDefinedTypeName","pathNode":{"id":3181,"name":"Rounding","nameLocations":["11864:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":2478,"src":"11864:8:24"},"referencedDeclaration":2478,"src":"11864:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:24"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3212,"src":"11906:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:24"},"scope":3521,"src":"11835:248:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3340,"nodeType":"Block","src":"12276:854:24","statements":[{"assignments":[3221],"declarations":[{"constant":false,"id":3221,"mutability":"mutable","name":"result","nameLocation":"12294:6:24","nodeType":"VariableDeclaration","scope":3340,"src":"12286:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3223,"initialValue":{"hexValue":"30","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:24"},{"id":3337,"nodeType":"UncheckedBlock","src":"12314:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12342:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3240,"nodeType":"IfStatement","src":"12338:103:24","trueBody":{"id":3239,"nodeType":"Block","src":"12361:80:24","statements":[{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3234,"nodeType":"ExpressionStatement","src":"12379:17:24"},{"expression":{"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"12414:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3238,"nodeType":"ExpressionStatement","src":"12414:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12458:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"IfStatement","src":"12454:103:24","trueBody":{"id":3256,"nodeType":"Block","src":"12477:80:24","statements":[{"expression":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12495:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3251,"nodeType":"ExpressionStatement","src":"12495:17:24"},{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"12530:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"nodeType":"ExpressionStatement","src":"12530:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12574:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3274,"nodeType":"IfStatement","src":"12570:103:24","trueBody":{"id":3273,"nodeType":"Block","src":"12593:80:24","statements":[{"expression":{"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12611:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3268,"nodeType":"ExpressionStatement","src":"12611:17:24"},{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"12646:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3272,"nodeType":"ExpressionStatement","src":"12646:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12690:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3291,"nodeType":"IfStatement","src":"12686:100:24","trueBody":{"id":3290,"nodeType":"Block","src":"12708:78:24","statements":[{"expression":{"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12726:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3285,"nodeType":"ExpressionStatement","src":"12726:16:24"},{"expression":{"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"12760:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3289,"nodeType":"ExpressionStatement","src":"12760:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12803:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3308,"nodeType":"IfStatement","src":"12799:100:24","trueBody":{"id":3307,"nodeType":"Block","src":"12821:78:24","statements":[{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12839:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"12839:16:24"},{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"12873:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3306,"nodeType":"ExpressionStatement","src":"12873:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12916:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3325,"nodeType":"IfStatement","src":"12912:100:24","trueBody":{"id":3324,"nodeType":"Block","src":"12934:78:24","statements":[{"expression":{"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"12952:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ExpressionStatement","src":"12952:16:24"},{"expression":{"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"12986:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3323,"nodeType":"ExpressionStatement","src":"12986:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"13029:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3336,"nodeType":"IfStatement","src":"13025:66:24","trueBody":{"id":3335,"nodeType":"Block","src":"13047:44:24","statements":[{"expression":{"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"13065:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3334,"nodeType":"ExpressionStatement","src":"13065:11:24"}]}}]},{"expression":{"id":3338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"13117:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3219,"id":3339,"nodeType":"Return","src":"13110:13:24"}]},"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"12089:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3341,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:24","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"value","nameLocation":"12237:5:24","nodeType":"VariableDeclaration","scope":3341,"src":"12229:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:24"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3341,"src":"12267:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:24"},"scope":3521,"src":"12214:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3375,"nodeType":"Block","src":"13365:170:24","statements":[{"id":3374,"nodeType":"UncheckedBlock","src":"13375:154:24","statements":[{"assignments":[3353],"declarations":[{"constant":false,"id":3353,"mutability":"mutable","name":"result","nameLocation":"13407:6:24","nodeType":"VariableDeclaration","scope":3374,"src":"13399:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3357,"initialValue":{"arguments":[{"id":3355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"13422:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3354,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3341,3376],"referencedDeclaration":3341,"src":"13416:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"13449:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3360,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"13476:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}],"id":3359,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"13459:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2478_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"13495:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"13504:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:24","trueExpression":{"hexValue":"31","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3351,"id":3373,"nodeType":"Return","src":"13442:76:24"}]}]},"documentation":{"id":3342,"nodeType":"StructuredDocumentation","src":"13136:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:24","nodeType":"FunctionDefinition","parameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3344,"mutability":"mutable","name":"value","nameLocation":"13307:5:24","nodeType":"VariableDeclaration","scope":3376,"src":"13299:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:24","nodeType":"VariableDeclaration","scope":3376,"src":"13314:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"},"typeName":{"id":3346,"nodeType":"UserDefinedTypeName","pathNode":{"id":3345,"name":"Rounding","nameLocations":["13314:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":2478,"src":"13314:8:24"},"referencedDeclaration":2478,"src":"13314:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:24"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"13356:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:24"},"scope":3521,"src":"13284:251:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3462,"nodeType":"Block","src":"13855:600:24","statements":[{"assignments":[3385],"declarations":[{"constant":false,"id":3385,"mutability":"mutable","name":"result","nameLocation":"13873:6:24","nodeType":"VariableDeclaration","scope":3462,"src":"13865:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"initialValue":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:24"},{"id":3459,"nodeType":"UncheckedBlock","src":"13893:533:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"13921:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3402,"nodeType":"IfStatement","src":"13917:98:24","trueBody":{"id":3401,"nodeType":"Block","src":"13939:76:24","statements":[{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"13957:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ExpressionStatement","src":"13957:13:24"},{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"13988:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ExpressionStatement","src":"13988:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14032:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3417,"nodeType":"IfStatement","src":"14028:95:24","trueBody":{"id":3416,"nodeType":"Block","src":"14049:74:24","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14067:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"14067:12:24"},{"expression":{"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"14097:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3415,"nodeType":"ExpressionStatement","src":"14097:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14140:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3432,"nodeType":"IfStatement","src":"14136:95:24","trueBody":{"id":3431,"nodeType":"Block","src":"14157:74:24","statements":[{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14175:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3426,"nodeType":"ExpressionStatement","src":"14175:12:24"},{"expression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"14205:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3430,"nodeType":"ExpressionStatement","src":"14205:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14248:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3447,"nodeType":"IfStatement","src":"14244:95:24","trueBody":{"id":3446,"nodeType":"Block","src":"14265:74:24","statements":[{"expression":{"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14283:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3441,"nodeType":"ExpressionStatement","src":"14283:12:24"},{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"14313:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"14313:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3458,"nodeType":"IfStatement","src":"14352:64:24","trueBody":{"id":3457,"nodeType":"Block","src":"14372:44:24","statements":[{"expression":{"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"14390:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3456,"nodeType":"ExpressionStatement","src":"14390:11:24"}]}}]},{"expression":{"id":3460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"14442:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3383,"id":3461,"nodeType":"Return","src":"14435:13:24"}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"13541:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3463,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:24","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"value","nameLocation":"13816:5:24","nodeType":"VariableDeclaration","scope":3463,"src":"13808:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:24"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3463,"src":"13846:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:24"},"scope":3521,"src":"13792:663:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3500,"nodeType":"Block","src":"14692:177:24","statements":[{"id":3499,"nodeType":"UncheckedBlock","src":"14702:161:24","statements":[{"assignments":[3475],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"result","nameLocation":"14734:6:24","nodeType":"VariableDeclaration","scope":3499,"src":"14726:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3479,"initialValue":{"arguments":[{"id":3477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"14750:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3476,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3463,3501],"referencedDeclaration":3463,"src":"14743:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"14777:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3482,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"14804:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}],"id":3481,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"14787:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2478_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3485,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"14823:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"14838:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:24","trueExpression":{"hexValue":"31","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3473,"id":3498,"nodeType":"Return","src":"14770:82:24"}]}]},"documentation":{"id":3464,"nodeType":"StructuredDocumentation","src":"14461:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3501,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:24","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"value","nameLocation":"14634:5:24","nodeType":"VariableDeclaration","scope":3501,"src":"14626:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3469,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:24","nodeType":"VariableDeclaration","scope":3501,"src":"14641:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"},"typeName":{"id":3468,"nodeType":"UserDefinedTypeName","pathNode":{"id":3467,"name":"Rounding","nameLocations":["14641:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":2478,"src":"14641:8:24"},"referencedDeclaration":2478,"src":"14641:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:24"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3501,"src":"14683:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:24"},"scope":3521,"src":"14610:259:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3519,"nodeType":"Block","src":"15067:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3512,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"15090:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}],"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3510,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:24","typeDescriptions":{}}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3509,"id":3518,"nodeType":"Return","src":"15077:31:24"}]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"14875:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3520,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:24","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:24","nodeType":"VariableDeclaration","scope":3520,"src":"15019:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"},"typeName":{"id":3504,"nodeType":"UserDefinedTypeName","pathNode":{"id":3503,"name":"Rounding","nameLocations":["15019:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":2478,"src":"15019:8:24"},"referencedDeclaration":2478,"src":"15019:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2478","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:24"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3520,"src":"15061:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3507,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:24"},"scope":3521,"src":"14993:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3522,"src":"203:14914:24","usedErrors":[2473],"usedEvents":[]}],"src":"103:15015:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3626]},"id":3627,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3523,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3524,"nodeType":"StructuredDocumentation","src":"135:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3626,"linearizedBaseContracts":[3626],"name":"SignedMath","nameLocation":"224:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":3541,"nodeType":"Block","src":"376:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"393:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3535,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"397:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3538,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"405:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:25","trueExpression":{"id":3537,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"401:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3533,"id":3540,"nodeType":"Return","src":"386:20:25"}]},"documentation":{"id":3525,"nodeType":"StructuredDocumentation","src":"241:66:25","text":" @dev Returns the largest of two signed numbers."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:25","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"a","nameLocation":"332:1:25","nodeType":"VariableDeclaration","scope":3542,"src":"325:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3526,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"b","nameLocation":"342:1:25","nodeType":"VariableDeclaration","scope":3542,"src":"335:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3528,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:25"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3542,"src":"368:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3531,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:25"},"scope":3626,"src":"312:101:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3559,"nodeType":"Block","src":"555:37:25","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"572:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"576:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"584:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:25","trueExpression":{"id":3555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"580:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3551,"id":3558,"nodeType":"Return","src":"565:20:25"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"419:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":3560,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:25","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"a","nameLocation":"511:1:25","nodeType":"VariableDeclaration","scope":3560,"src":"504:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3544,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3547,"mutability":"mutable","name":"b","nameLocation":"521:1:25","nodeType":"VariableDeclaration","scope":3560,"src":"514:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3546,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:25"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3560,"src":"547:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3549,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:25"},"scope":3626,"src":"491:101:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"797:162:25","statements":[{"assignments":[3571],"declarations":[{"constant":false,"id":3571,"mutability":"mutable","name":"x","nameLocation":"866:1:25","nodeType":"VariableDeclaration","scope":3603,"src":"859:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3570,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3584,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"871:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"875:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"882:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"886:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"911:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3590,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"931:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:25","typeDescriptions":{}}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3586,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:25","typeDescriptions":{}}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"945:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"949:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3569,"id":3602,"nodeType":"Return","src":"904:48:25"}]},"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"598:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:25","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"a","nameLocation":"753:1:25","nodeType":"VariableDeclaration","scope":3604,"src":"746:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3562,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"b","nameLocation":"763:1:25","nodeType":"VariableDeclaration","scope":3604,"src":"756:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3564,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:25"},"returnParameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3604,"src":"789:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3567,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:25"},"scope":3626,"src":"729:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"1103:158:25","statements":[{"id":3623,"nodeType":"UncheckedBlock","src":"1113:142:25","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3614,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1228:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:25","subExpression":{"id":3618,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1242:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:25","trueExpression":{"id":3617,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1237:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:25","typeDescriptions":{}}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3611,"id":3622,"nodeType":"Return","src":"1213:31:25"}]}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"965:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:25","nodeType":"FunctionDefinition","parameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"n","nameLocation":"1068:1:25","nodeType":"VariableDeclaration","scope":3625,"src":"1061:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3606,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:25"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3625,"src":"1094:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:25"},"scope":3626,"src":"1048:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3627,"src":"216:1047:25","usedErrors":[],"usedEvents":[]}],"src":"109:1155:25"},"id":25},"contracts/Horizon.sol":{"ast":{"absolutePath":"contracts/Horizon.sol","exportedSymbols":{"CCIPReceiver":[119],"Client":[241],"Context":[2176],"ERC165":[2455],"ERC721":[1836],"ERC721Burnable":[2000],"ERC721URIStorage":[2126],"FailedToWithdrawEth":[3653],"Horizon":[6336],"HorizonReceipt":[6417],"HorizonS":[6966],"HorizonStaff":[7750],"HorizonVRF":[8040],"IERC165":[2467],"IERC20":[827],"IERC4906":[608],"IERC721":[1953],"IERC721Errors":[702],"IERC721Metadata":[2154],"IERC721Receiver":[1971],"IRouterClient":[184],"NothingToWithdraw":[6971],"SenderNotWhitelisted":[3657],"SourceChainNotWhitelisted":[3645],"Strings":[2431],"VRFConsumerBaseV2":[580],"VRFCoordinatorV2Interface":[427]},"id":6337,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3628,"literals":["solidity",">=","0.8",".9","<=","0.8",".20"],"nodeType":"PragmaDirective","src":"33:33:26"},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol","file":"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol","id":3630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":185,"src":"70:99:26","symbolAliases":[{"foreign":{"id":3629,"name":"IRouterClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"78:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol","file":"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol","id":3632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":120,"src":"171:99:26","symbolAliases":[{"foreign":{"id":3631,"name":"CCIPReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"179:12:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","id":3634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":242,"src":"272:84:26","symbolAliases":[{"foreign":{"id":3633,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"280:6:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/HorizonS.sol","file":"./HorizonS.sol","id":3636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":6967,"src":"358:40:26","symbolAliases":[{"foreign":{"id":3635,"name":"HorizonS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"366:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3637,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":828,"src":"400:56:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":3638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":1954,"src":"458:58:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/HorizonStaff.sol","file":"./HorizonStaff.sol","id":3639,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":7751,"src":"518:28:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/HorizonVRF.sol","file":"./HorizonVRF.sol","id":3640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":8041,"src":"548:26:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/HorizonReceipt.sol","file":"./HorizonReceipt.sol","id":3641,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6337,"sourceUnit":6418,"src":"576:30:26","symbolAliases":[],"unitAlias":""},{"errorSelector":"2682bad2","id":3645,"name":"SourceChainNotWhitelisted","nameLocation":"616:25:26","nodeType":"ErrorDefinition","parameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"sourceChainSelector","nameLocation":"649:19:26","nodeType":"VariableDeclaration","scope":3645,"src":"642:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3642,"name":"uint64","nodeType":"ElementaryTypeName","src":"642:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"641:28:26"},"src":"610:60:26"},{"errorSelector":"9d11f563","id":3653,"name":"FailedToWithdrawEth","nameLocation":"678:19:26","nodeType":"ErrorDefinition","parameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"owner","nameLocation":"706:5:26","nodeType":"VariableDeclaration","scope":3653,"src":"698:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3646,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"target","nameLocation":"721:6:26","nodeType":"VariableDeclaration","scope":3653,"src":"713:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3648,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3651,"mutability":"mutable","name":"value","nameLocation":"737:5:26","nodeType":"VariableDeclaration","scope":3653,"src":"729:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"697:46:26"},"src":"672:72:26"},{"errorSelector":"bf3f9389","id":3657,"name":"SenderNotWhitelisted","nameLocation":"752:20:26","nodeType":"ErrorDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"sender","nameLocation":"781:6:26","nodeType":"VariableDeclaration","scope":3657,"src":"773:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3654,"name":"address","nodeType":"ElementaryTypeName","src":"773:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"772:16:26"},"src":"746:43:26"},{"abstract":false,"baseContracts":[{"baseName":{"id":3658,"name":"CCIPReceiver","nameLocations":["813:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":119,"src":"813:12:26"},"id":3659,"nodeType":"InheritanceSpecifier","src":"813:12:26"}],"canonicalName":"Horizon","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6336,"linearizedBaseContracts":[6336,119,331,132],"name":"Horizon","nameLocation":"802:7:26","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3661,"mutability":"mutable","name":"lastReceivedMessageId","nameLocation":"866:21:26","nodeType":"VariableDeclaration","scope":6336,"src":"850:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"850:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3663,"mutability":"mutable","name":"lastReceivedText","nameLocation":"908:16:26","nodeType":"VariableDeclaration","scope":6336,"src":"894:30:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":3662,"name":"bytes","nodeType":"ElementaryTypeName","src":"894:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"private"},{"constant":false,"functionSelector":"7dc91a02","id":3667,"mutability":"mutable","name":"whitelistedSourceChains","nameLocation":"962:23:26","nodeType":"VariableDeclaration","scope":6336,"src":"931:54:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"},"typeName":{"id":3666,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3664,"name":"uint64","nodeType":"ElementaryTypeName","src":"939:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"931:23:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3665,"name":"bool","nodeType":"ElementaryTypeName","src":"949:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"272efc69","id":3671,"mutability":"mutable","name":"whitelistedSenders","nameLocation":"1024:18:26","nodeType":"VariableDeclaration","scope":6336,"src":"992:50:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3670,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3669,"name":"bool","nodeType":"ElementaryTypeName","src":"1011:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"id":3674,"mutability":"mutable","name":"titleId","nameLocation":"1056:7:26","nodeType":"VariableDeclaration","scope":6336,"src":"1051:16:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint","nodeType":"ElementaryTypeName","src":"1051:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1066:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"amountToPay","nameLocation":"1079:11:26","nodeType":"VariableDeclaration","scope":6336,"src":"1074:16:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint","nodeType":"ElementaryTypeName","src":"1074:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3678,"mutability":"mutable","name":"paymentDelay","nameLocation":"1102:12:26","nodeType":"VariableDeclaration","scope":6336,"src":"1097:17:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint","nodeType":"ElementaryTypeName","src":"1097:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3680,"mutability":"mutable","name":"fujiReceiver","nameLocation":"1129:12:26","nodeType":"VariableDeclaration","scope":6336,"src":"1121:20:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3679,"name":"address","nodeType":"ElementaryTypeName","src":"1121:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3682,"mutability":"mutable","name":"owner","nameLocation":"1156:5:26","nodeType":"VariableDeclaration","scope":6336,"src":"1148:13:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3681,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"89c4c2329efcd15ed5ec8cc7dd2e4c2103edd8b1d7e9e17e76da38d7b83ade67","id":3692,"name":"NewTitleCreated","nameLocation":"1176:15:26","nodeType":"EventDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"indexed":false,"mutability":"mutable","name":"_titleId","nameLocation":"1197:8:26","nodeType":"VariableDeclaration","scope":3692,"src":"1192:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint","nodeType":"ElementaryTypeName","src":"1192:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3686,"indexed":false,"mutability":"mutable","name":"_scheduleId","nameLocation":"1212:11:26","nodeType":"VariableDeclaration","scope":3692,"src":"1207:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint","nodeType":"ElementaryTypeName","src":"1207:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"indexed":false,"mutability":"mutable","name":"_monthlyValue","nameLocation":"1230:13:26","nodeType":"VariableDeclaration","scope":3692,"src":"1225:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint","nodeType":"ElementaryTypeName","src":"1225:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"indexed":false,"mutability":"mutable","name":"_titleValue","nameLocation":"1250:11:26","nodeType":"VariableDeclaration","scope":3692,"src":"1245:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint","nodeType":"ElementaryTypeName","src":"1245:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1191:71:26"},"src":"1170:93:26"},{"anonymous":false,"eventSelector":"b34436423c205503bb9de249902d7e3e7fc76197d9cec741c46e9e0dd6489f44","id":3697,"name":"TitleStatusUpdated","nameLocation":"1275:18:26","nodeType":"EventDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1306:6:26","nodeType":"VariableDeclaration","scope":3697,"src":"1294:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"typeName":{"id":3694,"nodeType":"UserDefinedTypeName","pathNode":{"id":3693,"name":"TitleStatus","nameLocations":["1294:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"1294:11:26"},"referencedDeclaration":3844,"src":"1294:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"visibility":"internal"}],"src":"1293:20:26"},"src":"1269:45:26"},{"anonymous":false,"eventSelector":"5462399704f0e380dbcb381163c0a1404e8b14097242551b2494b16157faa530","id":3703,"name":"NewTitleSold","nameLocation":"1326:12:26","nodeType":"EventDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"indexed":false,"mutability":"mutable","name":"_contractId","nameLocation":"1344:11:26","nodeType":"VariableDeclaration","scope":3703,"src":"1339:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint","nodeType":"ElementaryTypeName","src":"1339:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3701,"indexed":false,"mutability":"mutable","name":"_owner","nameLocation":"1365:6:26","nodeType":"VariableDeclaration","scope":3703,"src":"1357:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3700,"name":"address","nodeType":"ElementaryTypeName","src":"1357:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1338:34:26"},"src":"1320:53:26"},{"anonymous":false,"eventSelector":"57d559aaa778ae17e20a31e208d5763cb05667142a48b6098af5fb106b0ce8d9","id":3707,"name":"AmountToPay","nameLocation":"1385:11:26","nodeType":"EventDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"indexed":false,"mutability":"mutable","name":"amountWithInterests","nameLocation":"1402:19:26","nodeType":"VariableDeclaration","scope":3707,"src":"1397:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint","nodeType":"ElementaryTypeName","src":"1397:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1396:26:26"},"src":"1379:44:26"},{"anonymous":false,"eventSelector":"d6985739ec9552d19c3572fc03d8cc0f929e20de244eaa8d01c1786d61fd177a","id":3715,"name":"InstallmentPaid","nameLocation":"1435:15:26","nodeType":"EventDefinition","parameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"indexed":false,"mutability":"mutable","name":"_idTitle","nameLocation":"1456:8:26","nodeType":"VariableDeclaration","scope":3715,"src":"1451:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint","nodeType":"ElementaryTypeName","src":"1451:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3711,"indexed":false,"mutability":"mutable","name":"_contractId","nameLocation":"1471:11:26","nodeType":"VariableDeclaration","scope":3715,"src":"1466:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint","nodeType":"ElementaryTypeName","src":"1466:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3713,"indexed":false,"mutability":"mutable","name":"_installmentsPaid","nameLocation":"1489:17:26","nodeType":"VariableDeclaration","scope":3715,"src":"1484:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint","nodeType":"ElementaryTypeName","src":"1484:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1450:57:26"},"src":"1429:79:26"},{"anonymous":false,"eventSelector":"0612a8a5548125c3db9f13b41025df2c888d69f8a0351889cd94bd21a45dd34b","id":3723,"name":"EnsuranceValueNeededUpdate","nameLocation":"1520:26:26","nodeType":"EventDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"indexed":false,"mutability":"mutable","name":"_idTitle","nameLocation":"1552:8:26","nodeType":"VariableDeclaration","scope":3723,"src":"1547:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint","nodeType":"ElementaryTypeName","src":"1547:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3719,"indexed":false,"mutability":"mutable","name":"_contractId","nameLocation":"1567:11:26","nodeType":"VariableDeclaration","scope":3723,"src":"1562:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint","nodeType":"ElementaryTypeName","src":"1562:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3721,"indexed":false,"mutability":"mutable","name":"_valueOfEnsurance","nameLocation":"1585:17:26","nodeType":"VariableDeclaration","scope":3723,"src":"1580:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint","nodeType":"ElementaryTypeName","src":"1580:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1546:57:26"},"src":"1514:90:26"},{"anonymous":false,"eventSelector":"f67922b8fc71b337c87791902806c4de5560ee8d2fe58eabadb04c2848f7e103","id":3727,"name":"EnsuranceUpdated","nameLocation":"1616:16:26","nodeType":"EventDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"indexed":false,"mutability":"mutable","name":"_temporaryEnsurance","nameLocation":"1641:19:26","nodeType":"VariableDeclaration","scope":3727,"src":"1633:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1632:29:26"},"src":"1610:52:26"},{"anonymous":false,"eventSelector":"46bbb7a2247c057a25729c5f60845146a28f06a02c615e08356b3a415414fb86","id":3731,"name":"NextDraw","nameLocation":"1674:8:26","nodeType":"EventDefinition","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"indexed":false,"mutability":"mutable","name":"_nextDraw","nameLocation":"1688:9:26","nodeType":"VariableDeclaration","scope":3731,"src":"1683:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint","nodeType":"ElementaryTypeName","src":"1683:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:16:26"},"src":"1668:31:26"},{"anonymous":false,"eventSelector":"6eed17f1838c49c44631282c96ef8d77984fda771e865bc74772b03c5da4bde7","id":3740,"name":"VRFAnswer","nameLocation":"1711:9:26","nodeType":"EventDefinition","parameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"indexed":false,"mutability":"mutable","name":"fulfilled","nameLocation":"1726:9:26","nodeType":"VariableDeclaration","scope":3740,"src":"1721:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3732,"name":"bool","nodeType":"ElementaryTypeName","src":"1721:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3736,"indexed":false,"mutability":"mutable","name":"randomWords","nameLocation":"1747:11:26","nodeType":"VariableDeclaration","scope":3740,"src":"1737:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1737:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3735,"nodeType":"ArrayTypeName","src":"1737:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3738,"indexed":false,"mutability":"mutable","name":"randomValue","nameLocation":"1765:11:26","nodeType":"VariableDeclaration","scope":3740,"src":"1760:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint","nodeType":"ElementaryTypeName","src":"1760:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1720:57:26"},"src":"1705:73:26"},{"anonymous":false,"eventSelector":"495707aadfdb79a8158bc4c70170204a5bd6402ce8d4f16af9b93d19f5b864b7","id":3752,"name":"MonthlyWinnerSelected","nameLocation":"1790:21:26","nodeType":"EventDefinition","parameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"indexed":false,"mutability":"mutable","name":"_idTitle","nameLocation":"1817:8:26","nodeType":"VariableDeclaration","scope":3752,"src":"1812:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint","nodeType":"ElementaryTypeName","src":"1812:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3744,"indexed":false,"mutability":"mutable","name":"_drawNumber","nameLocation":"1832:11:26","nodeType":"VariableDeclaration","scope":3752,"src":"1827:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint","nodeType":"ElementaryTypeName","src":"1827:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3746,"indexed":false,"mutability":"mutable","name":"_randomValue","nameLocation":"1850:12:26","nodeType":"VariableDeclaration","scope":3752,"src":"1845:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint","nodeType":"ElementaryTypeName","src":"1845:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3748,"indexed":false,"mutability":"mutable","name":"_selectedContractId","nameLocation":"1869:19:26","nodeType":"VariableDeclaration","scope":3752,"src":"1864:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint","nodeType":"ElementaryTypeName","src":"1864:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3750,"indexed":false,"mutability":"mutable","name":"_winner","nameLocation":"1898:7:26","nodeType":"VariableDeclaration","scope":3752,"src":"1890:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3749,"name":"address","nodeType":"ElementaryTypeName","src":"1890:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1811:95:26"},"src":"1784:123:26"},{"anonymous":false,"eventSelector":"50243003e9d7ef147493229d55468984fe3256e1b1cf63b435c46d06331682a4","id":3764,"name":"ColateralTitleAdded","nameLocation":"1919:19:26","nodeType":"EventDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"indexed":false,"mutability":"mutable","name":"_idTitle","nameLocation":"1944:8:26","nodeType":"VariableDeclaration","scope":3764,"src":"1939:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint","nodeType":"ElementaryTypeName","src":"1939:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3756,"indexed":false,"mutability":"mutable","name":"_contractId","nameLocation":"1959:11:26","nodeType":"VariableDeclaration","scope":3764,"src":"1954:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint","nodeType":"ElementaryTypeName","src":"1954:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3758,"indexed":false,"mutability":"mutable","name":"_drawNumber","nameLocation":"1977:11:26","nodeType":"VariableDeclaration","scope":3764,"src":"1972:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint","nodeType":"ElementaryTypeName","src":"1972:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3760,"indexed":false,"mutability":"mutable","name":"_idOfColateralTitle","nameLocation":"1995:19:26","nodeType":"VariableDeclaration","scope":3764,"src":"1990:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint","nodeType":"ElementaryTypeName","src":"1990:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3762,"indexed":false,"mutability":"mutable","name":"_idOfColateralContract","nameLocation":"2021:22:26","nodeType":"VariableDeclaration","scope":3764,"src":"2016:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint","nodeType":"ElementaryTypeName","src":"2016:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1938:106:26"},"src":"1913:132:26"},{"anonymous":false,"eventSelector":"28c64511bad94645265b4ac8c503dd3b588ca95f2bfb17598135c3e6cdc4be82","id":3774,"name":"CreatingPermission","nameLocation":"2057:18:26","nodeType":"EventDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"indexed":false,"mutability":"mutable","name":"_idTitle","nameLocation":"2081:8:26","nodeType":"VariableDeclaration","scope":3774,"src":"2076:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint","nodeType":"ElementaryTypeName","src":"2076:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3768,"indexed":false,"mutability":"mutable","name":"_contractId","nameLocation":"2096:11:26","nodeType":"VariableDeclaration","scope":3774,"src":"2091:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint","nodeType":"ElementaryTypeName","src":"2091:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3770,"indexed":false,"mutability":"mutable","name":"_drawSelected","nameLocation":"2114:13:26","nodeType":"VariableDeclaration","scope":3774,"src":"2109:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint","nodeType":"ElementaryTypeName","src":"2109:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3772,"indexed":false,"mutability":"mutable","name":"_fujiReceiver","nameLocation":"2137:13:26","nodeType":"VariableDeclaration","scope":3774,"src":"2129:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"2129:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2075:76:26"},"src":"2051:101:26"},{"anonymous":false,"eventSelector":"a15c2435fada31fa58c0eb6a516d9b0df54ed70f48f3680ba2b527955c5797c1","id":3784,"name":"MonthlyWinnerPaid","nameLocation":"2164:17:26","nodeType":"EventDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"indexed":false,"mutability":"mutable","name":"_idTitle","nameLocation":"2187:8:26","nodeType":"VariableDeclaration","scope":3784,"src":"2182:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint","nodeType":"ElementaryTypeName","src":"2182:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3778,"indexed":false,"mutability":"mutable","name":"_drawNumber","nameLocation":"2202:11:26","nodeType":"VariableDeclaration","scope":3784,"src":"2197:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint","nodeType":"ElementaryTypeName","src":"2197:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3780,"indexed":false,"mutability":"mutable","name":"_winner","nameLocation":"2223:7:26","nodeType":"VariableDeclaration","scope":3784,"src":"2215:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3779,"name":"address","nodeType":"ElementaryTypeName","src":"2215:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3782,"indexed":false,"mutability":"mutable","name":"_titleValue","nameLocation":"2237:11:26","nodeType":"VariableDeclaration","scope":3784,"src":"2232:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint","nodeType":"ElementaryTypeName","src":"2232:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2181:68:26"},"src":"2158:92:26"},{"anonymous":false,"eventSelector":"5238eef763c91b9905201192c7b588678d655a1fec573e5434470d30d3f975be","id":3789,"name":"MyTitleStatusUpdated","nameLocation":"2262:20:26","nodeType":"EventDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"indexed":false,"mutability":"mutable","name":"myTitleStatus","nameLocation":"2299:13:26","nodeType":"VariableDeclaration","scope":3789,"src":"2283:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"typeName":{"id":3786,"nodeType":"UserDefinedTypeName","pathNode":{"id":3785,"name":"MyTitleWithdraw","nameLocations":["2283:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3853,"src":"2283:15:26"},"referencedDeclaration":3853,"src":"2283:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"visibility":"internal"}],"src":"2282:31:26"},"src":"2256:58:26"},{"anonymous":false,"eventSelector":"f68198b0bdb51731a285119121019817b7958b8fe7d4d1f418fc095a2e7fdb53","id":3793,"name":"PaymentLateNumber","nameLocation":"2326:17:26","nodeType":"EventDefinition","parameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"indexed":false,"mutability":"mutable","name":"_i","nameLocation":"2349:2:26","nodeType":"VariableDeclaration","scope":3793,"src":"2344:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint","nodeType":"ElementaryTypeName","src":"2344:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2343:9:26"},"src":"2320:33:26"},{"anonymous":false,"eventSelector":"b8b6aebc89ec870dc8f574ed640e3b4f9d1542bcbf6c9ca9171827c2d43ddcd9","id":3797,"name":"AmountLateWithInterest","nameLocation":"2365:22:26","nodeType":"EventDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"indexed":false,"mutability":"mutable","name":"totalAmountLate","nameLocation":"2393:15:26","nodeType":"VariableDeclaration","scope":3797,"src":"2388:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint","nodeType":"ElementaryTypeName","src":"2388:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2387:22:26"},"src":"2359:51:26"},{"anonymous":false,"eventSelector":"b5b1786c7c36e84356c86dfc352605cc6857541d4123a5ab42904c38b2c85f44","id":3801,"name":"PaymentIsLate","nameLocation":"2422:13:26","nodeType":"EventDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"indexed":false,"mutability":"mutable","name":"lateInstallments","nameLocation":"2441:16:26","nodeType":"VariableDeclaration","scope":3801,"src":"2436:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint","nodeType":"ElementaryTypeName","src":"2436:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2435:23:26"},"src":"2416:43:26"},{"anonymous":false,"eventSelector":"09878aa34b75479da70e37bce4455679dae86d7580d3cf362e48f2abb18baacd","id":3814,"name":"ThereAreSomePendencies","nameLocation":"2471:22:26","nodeType":"EventDefinition","parameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"indexed":false,"mutability":"mutable","name":"_installmentsPaid","nameLocation":"2499:17:26","nodeType":"VariableDeclaration","scope":3814,"src":"2494:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint","nodeType":"ElementaryTypeName","src":"2494:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3805,"indexed":false,"mutability":"mutable","name":"_colateralTitleId","nameLocation":"2523:17:26","nodeType":"VariableDeclaration","scope":3814,"src":"2518:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint","nodeType":"ElementaryTypeName","src":"2518:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3807,"indexed":false,"mutability":"mutable","name":"_colateralReceiptAddress","nameLocation":"2550:24:26","nodeType":"VariableDeclaration","scope":3814,"src":"2542:32:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3806,"name":"address","nodeType":"ElementaryTypeName","src":"2542:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3809,"indexed":false,"mutability":"mutable","name":"_nftAddress","nameLocation":"2584:11:26","nodeType":"VariableDeclaration","scope":3814,"src":"2576:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3808,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3812,"indexed":false,"mutability":"mutable","name":"myTitleStatus","nameLocation":"2613:13:26","nodeType":"VariableDeclaration","scope":3814,"src":"2597:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"typeName":{"id":3811,"nodeType":"UserDefinedTypeName","pathNode":{"id":3810,"name":"MyTitleWithdraw","nameLocations":["2597:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3853,"src":"2597:15:26"},"referencedDeclaration":3853,"src":"2597:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"visibility":"internal"}],"src":"2493:134:26"},"src":"2465:163:26"},{"anonymous":false,"eventSelector":"eef75e1cb83ae235f03cbc9e31296e9899b8e966228a77060765ec934d1cbc96","id":3818,"name":"LastInstallmentPaid","nameLocation":"2640:19:26","nodeType":"EventDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"indexed":false,"mutability":"mutable","name":"_installmentsPaid","nameLocation":"2665:17:26","nodeType":"VariableDeclaration","scope":3818,"src":"2660:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint","nodeType":"ElementaryTypeName","src":"2660:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2659:24:26"},"src":"2634:50:26"},{"anonymous":false,"eventSelector":"80ddfa553dad5baf183fd52c869100ce04e2174453116662eedf72905d03df32","id":3824,"name":"NewInvestmentCreated","nameLocation":"2696:20:26","nodeType":"EventDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"indexed":false,"mutability":"mutable","name":"_investmentValue","nameLocation":"2722:16:26","nodeType":"VariableDeclaration","scope":3824,"src":"2717:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint","nodeType":"ElementaryTypeName","src":"2717:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3822,"indexed":false,"mutability":"mutable","name":"_protocolAddress","nameLocation":"2748:16:26","nodeType":"VariableDeclaration","scope":3824,"src":"2740:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"2740:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2716:49:26"},"src":"2690:76:26"},{"anonymous":false,"eventSelector":"2e24ed849df3be5edecca4a9280b775d8d82b800d0ebefaa298f3d61a0998a70","id":3828,"name":"ThisTitleHasBeenCanceled","nameLocation":"2778:24:26","nodeType":"EventDefinition","parameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"indexed":false,"mutability":"mutable","name":"_titlesAvailableForNextDraw","nameLocation":"2808:27:26","nodeType":"VariableDeclaration","scope":3828,"src":"2803:32:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint","nodeType":"ElementaryTypeName","src":"2803:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2802:34:26"},"src":"2772:65:26"},{"anonymous":false,"eventSelector":"b1e312a29937cc11967b0e4a346fef1ae132424ebaba9dc6d90249dba053e87c","id":3838,"name":"MessageReceived","nameLocation":"2849:15:26","nodeType":"EventDefinition","parameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"indexed":true,"mutability":"mutable","name":"messageId","nameLocation":"2882:9:26","nodeType":"VariableDeclaration","scope":3838,"src":"2866:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2866:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3832,"indexed":true,"mutability":"mutable","name":"sourceChainSelector","nameLocation":"2908:19:26","nodeType":"VariableDeclaration","scope":3838,"src":"2893:34:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3831,"name":"uint64","nodeType":"ElementaryTypeName","src":"2893:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3834,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"2937:6:26","nodeType":"VariableDeclaration","scope":3838,"src":"2929:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3833,"name":"address","nodeType":"ElementaryTypeName","src":"2929:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3836,"indexed":false,"mutability":"mutable","name":"text","nameLocation":"2952:4:26","nodeType":"VariableDeclaration","scope":3838,"src":"2945:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3835,"name":"string","nodeType":"ElementaryTypeName","src":"2945:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2864:93:26"},"src":"2843:115:26"},{"canonicalName":"Horizon.TitleStatus","id":3844,"members":[{"id":3839,"name":"Canceled","nameLocation":"2993:8:26","nodeType":"EnumValue","src":"2993:8:26"},{"id":3840,"name":"Closed","nameLocation":"3016:6:26","nodeType":"EnumValue","src":"3016:6:26"},{"id":3841,"name":"Finalized","nameLocation":"3037:9:26","nodeType":"EnumValue","src":"3037:9:26"},{"id":3842,"name":"Open","nameLocation":"3061:4:26","nodeType":"EnumValue","src":"3061:4:26"},{"id":3843,"name":"Waiting","nameLocation":"3080:7:26","nodeType":"EnumValue","src":"3080:7:26"}],"name":"TitleStatus","nameLocation":"2971:11:26","nodeType":"EnumDefinition","src":"2966:132:26"},{"constant":false,"id":3847,"mutability":"mutable","name":"status","nameLocation":"3118:6:26","nodeType":"VariableDeclaration","scope":6336,"src":"3106:18:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"typeName":{"id":3846,"nodeType":"UserDefinedTypeName","pathNode":{"id":3845,"name":"TitleStatus","nameLocations":["3106:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"3106:11:26"},"referencedDeclaration":3844,"src":"3106:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"visibility":"internal"},{"canonicalName":"Horizon.MyTitleWithdraw","id":3853,"members":[{"id":3848,"name":"Canceled","nameLocation":"3164:8:26","nodeType":"EnumValue","src":"3164:8:26"},{"id":3849,"name":"Late","nameLocation":"3187:4:26","nodeType":"EnumValue","src":"3187:4:26"},{"id":3850,"name":"OnSchedule","nameLocation":"3206:10:26","nodeType":"EnumValue","src":"3206:10:26"},{"id":3851,"name":"Withdraw","nameLocation":"3231:8:26","nodeType":"EnumValue","src":"3231:8:26"},{"id":3852,"name":"Finalized","nameLocation":"3250:9:26","nodeType":"EnumValue","src":"3250:9:26"}],"name":"MyTitleWithdraw","nameLocation":"3138:15:26","nodeType":"EnumDefinition","src":"3133:137:26"},{"constant":false,"id":3856,"mutability":"mutable","name":"myTitleStatus","nameLocation":"3294:13:26","nodeType":"VariableDeclaration","scope":6336,"src":"3278:29:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"typeName":{"id":3855,"nodeType":"UserDefinedTypeName","pathNode":{"id":3854,"name":"MyTitleWithdraw","nameLocations":["3278:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3853,"src":"3278:15:26"},"referencedDeclaration":3853,"src":"3278:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"visibility":"internal"},{"canonicalName":"Horizon.Titles","id":3884,"members":[{"constant":false,"id":3858,"mutability":"mutable","name":"openSellingDate","nameLocation":"3346:15:26","nodeType":"VariableDeclaration","scope":3884,"src":"3341:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint","nodeType":"ElementaryTypeName","src":"3341:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"closeSellingDate","nameLocation":"3377:16:26","nodeType":"VariableDeclaration","scope":3884,"src":"3372:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint","nodeType":"ElementaryTypeName","src":"3372:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3862,"mutability":"mutable","name":"paymentSchedule","nameLocation":"3409:15:26","nodeType":"VariableDeclaration","scope":3884,"src":"3404:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint","nodeType":"ElementaryTypeName","src":"3404:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"nextDrawNumber","nameLocation":"3440:14:26","nodeType":"VariableDeclaration","scope":3884,"src":"3435:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint","nodeType":"ElementaryTypeName","src":"3435:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"titleValue","nameLocation":"3470:10:26","nodeType":"VariableDeclaration","scope":3884,"src":"3465:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint","nodeType":"ElementaryTypeName","src":"3465:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"installments","nameLocation":"3496:12:26","nodeType":"VariableDeclaration","scope":3884,"src":"3491:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint","nodeType":"ElementaryTypeName","src":"3491:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"monthlyInvestiment","nameLocation":"3524:18:26","nodeType":"VariableDeclaration","scope":3884,"src":"3519:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint","nodeType":"ElementaryTypeName","src":"3519:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"protocolFee","nameLocation":"3558:11:26","nodeType":"VariableDeclaration","scope":3884,"src":"3553:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint","nodeType":"ElementaryTypeName","src":"3553:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"numberOfTitlesSold","nameLocation":"3585:18:26","nodeType":"VariableDeclaration","scope":3884,"src":"3580:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint","nodeType":"ElementaryTypeName","src":"3580:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"totalValueReceived","nameLocation":"3619:18:26","nodeType":"VariableDeclaration","scope":3884,"src":"3614:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint","nodeType":"ElementaryTypeName","src":"3614:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"totalValuePaid","nameLocation":"3653:14:26","nodeType":"VariableDeclaration","scope":3884,"src":"3648:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint","nodeType":"ElementaryTypeName","src":"3648:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"titleCanceled","nameLocation":"3683:13:26","nodeType":"VariableDeclaration","scope":3884,"src":"3678:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint","nodeType":"ElementaryTypeName","src":"3678:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"status","nameLocation":"3719:6:26","nodeType":"VariableDeclaration","scope":3884,"src":"3707:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"typeName":{"id":3882,"nodeType":"UserDefinedTypeName","pathNode":{"id":3881,"name":"TitleStatus","nameLocations":["3707:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"3707:11:26"},"referencedDeclaration":3844,"src":"3707:11:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"visibility":"internal"}],"name":"Titles","nameLocation":"3323:6:26","nodeType":"StructDefinition","scope":6336,"src":"3316:417:26","visibility":"public"},{"canonicalName":"Horizon.TitlesSold","id":3914,"members":[{"constant":false,"id":3886,"mutability":"mutable","name":"contractId","nameLocation":"3775:10:26","nodeType":"VariableDeclaration","scope":3914,"src":"3770:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3885,"name":"uint","nodeType":"ElementaryTypeName","src":"3770:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"titleValue","nameLocation":"3801:10:26","nodeType":"VariableDeclaration","scope":3914,"src":"3796:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint","nodeType":"ElementaryTypeName","src":"3796:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"installments","nameLocation":"3827:12:26","nodeType":"VariableDeclaration","scope":3914,"src":"3822:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint","nodeType":"ElementaryTypeName","src":"3822:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"monthlyValue","nameLocation":"3855:12:26","nodeType":"VariableDeclaration","scope":3914,"src":"3850:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3891,"name":"uint","nodeType":"ElementaryTypeName","src":"3850:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3894,"mutability":"mutable","name":"periodLocked","nameLocation":"3883:12:26","nodeType":"VariableDeclaration","scope":3914,"src":"3878:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint","nodeType":"ElementaryTypeName","src":"3878:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3896,"mutability":"mutable","name":"titleOwner","nameLocation":"3914:10:26","nodeType":"VariableDeclaration","scope":3914,"src":"3906:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3895,"name":"address","nodeType":"ElementaryTypeName","src":"3906:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"installmentsPaid","nameLocation":"3940:16:26","nodeType":"VariableDeclaration","scope":3914,"src":"3935:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint","nodeType":"ElementaryTypeName","src":"3935:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"drawSelected","nameLocation":"3972:12:26","nodeType":"VariableDeclaration","scope":3914,"src":"3967:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint","nodeType":"ElementaryTypeName","src":"3967:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"colateralId","nameLocation":"4000:11:26","nodeType":"VariableDeclaration","scope":3914,"src":"3995:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint","nodeType":"ElementaryTypeName","src":"3995:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"colateralTitleAddress","nameLocation":"4030:21:26","nodeType":"VariableDeclaration","scope":3914,"src":"4022:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3903,"name":"address","nodeType":"ElementaryTypeName","src":"4022:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"colateralRWAAddress","nameLocation":"4070:19:26","nodeType":"VariableDeclaration","scope":3914,"src":"4062:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3905,"name":"address","nodeType":"ElementaryTypeName","src":"4062:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"valueOfEnsuranceNeeded","nameLocation":"4105:22:26","nodeType":"VariableDeclaration","scope":3914,"src":"4100:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint","nodeType":"ElementaryTypeName","src":"4100:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"myTitleStatus","nameLocation":"4154:13:26","nodeType":"VariableDeclaration","scope":3914,"src":"4138:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"typeName":{"id":3910,"nodeType":"UserDefinedTypeName","pathNode":{"id":3909,"name":"MyTitleWithdraw","nameLocations":["4138:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3853,"src":"4138:15:26"},"referencedDeclaration":3853,"src":"4138:15:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"paid","nameLocation":"4183:4:26","nodeType":"VariableDeclaration","scope":3914,"src":"4178:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3912,"name":"bool","nodeType":"ElementaryTypeName","src":"4178:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TitlesSold","nameLocation":"3748:10:26","nodeType":"StructDefinition","scope":6336,"src":"3741:454:26","visibility":"public"},{"canonicalName":"Horizon.TitleRecord","id":3933,"members":[{"constant":false,"id":3916,"mutability":"mutable","name":"contractId","nameLocation":"4238:10:26","nodeType":"VariableDeclaration","scope":3933,"src":"4233:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint","nodeType":"ElementaryTypeName","src":"4233:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"installmentNumber","nameLocation":"4267:17:26","nodeType":"VariableDeclaration","scope":3933,"src":"4259:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"4259:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"paymentDate","nameLocation":"4300:11:26","nodeType":"VariableDeclaration","scope":3933,"src":"4295:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint","nodeType":"ElementaryTypeName","src":"4295:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3922,"mutability":"mutable","name":"payerAddress","nameLocation":"4330:12:26","nodeType":"VariableDeclaration","scope":3933,"src":"4322:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"4322:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3924,"mutability":"mutable","name":"user","nameLocation":"4361:4:26","nodeType":"VariableDeclaration","scope":3933,"src":"4353:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3923,"name":"address","nodeType":"ElementaryTypeName","src":"4353:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"amount","nameLocation":"4381:6:26","nodeType":"VariableDeclaration","scope":3933,"src":"4376:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint","nodeType":"ElementaryTypeName","src":"4376:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"paymentDelay","nameLocation":"4403:12:26","nodeType":"VariableDeclaration","scope":3933,"src":"4398:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint","nodeType":"ElementaryTypeName","src":"4398:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"paid","nameLocation":"4431:4:26","nodeType":"VariableDeclaration","scope":3933,"src":"4426:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3929,"name":"bool","nodeType":"ElementaryTypeName","src":"4426:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"installmentsPaid","nameLocation":"4451:16:26","nodeType":"VariableDeclaration","scope":3933,"src":"4446:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint","nodeType":"ElementaryTypeName","src":"4446:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TitleRecord","nameLocation":"4210:11:26","nodeType":"StructDefinition","scope":6336,"src":"4203:272:26","visibility":"public"},{"canonicalName":"Horizon.Draw","id":3950,"members":[{"constant":false,"id":3935,"mutability":"mutable","name":"idTitle","nameLocation":"4511:7:26","nodeType":"VariableDeclaration","scope":3950,"src":"4506:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint","nodeType":"ElementaryTypeName","src":"4506:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3937,"mutability":"mutable","name":"drawNumber","nameLocation":"4534:10:26","nodeType":"VariableDeclaration","scope":3950,"src":"4529:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint","nodeType":"ElementaryTypeName","src":"4529:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"drawDate","nameLocation":"4560:8:26","nodeType":"VariableDeclaration","scope":3950,"src":"4555:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint","nodeType":"ElementaryTypeName","src":"4555:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"totalParticipants","nameLocation":"4584:17:26","nodeType":"VariableDeclaration","scope":3950,"src":"4579:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint","nodeType":"ElementaryTypeName","src":"4579:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"requestId","nameLocation":"4617:9:26","nodeType":"VariableDeclaration","scope":3950,"src":"4612:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint","nodeType":"ElementaryTypeName","src":"4612:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"randomNumberVRF","nameLocation":"4642:15:26","nodeType":"VariableDeclaration","scope":3950,"src":"4637:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint","nodeType":"ElementaryTypeName","src":"4637:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"selectedContractID","nameLocation":"4673:18:26","nodeType":"VariableDeclaration","scope":3950,"src":"4668:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint","nodeType":"ElementaryTypeName","src":"4668:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"winner","nameLocation":"4710:6:26","nodeType":"VariableDeclaration","scope":3950,"src":"4702:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3948,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Draw","nameLocation":"4490:4:26","nodeType":"StructDefinition","scope":6336,"src":"4483:241:26","visibility":"public"},{"canonicalName":"Horizon.ColateralTitles","id":3957,"members":[{"constant":false,"id":3952,"mutability":"mutable","name":"colateralOwner","nameLocation":"4774:14:26","nodeType":"VariableDeclaration","scope":3957,"src":"4766:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"4766:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3954,"mutability":"mutable","name":"titleIdOfColateral","nameLocation":"4804:18:26","nodeType":"VariableDeclaration","scope":3957,"src":"4799:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint","nodeType":"ElementaryTypeName","src":"4799:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"contractIdOfColateral","nameLocation":"4838:21:26","nodeType":"VariableDeclaration","scope":3957,"src":"4833:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint","nodeType":"ElementaryTypeName","src":"4833:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ColateralTitles","nameLocation":"4739:15:26","nodeType":"StructDefinition","scope":6336,"src":"4732:135:26","visibility":"public"},{"canonicalName":"Horizon.FujiPermissions","id":3964,"members":[{"constant":false,"id":3959,"mutability":"mutable","name":"idTitle","nameLocation":"4913:7:26","nodeType":"VariableDeclaration","scope":3964,"src":"4908:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint","nodeType":"ElementaryTypeName","src":"4908:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3961,"mutability":"mutable","name":"contractId","nameLocation":"4936:10:26","nodeType":"VariableDeclaration","scope":3964,"src":"4931:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint","nodeType":"ElementaryTypeName","src":"4931:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3963,"mutability":"mutable","name":"drawNumber","nameLocation":"4962:10:26","nodeType":"VariableDeclaration","scope":3964,"src":"4957:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint","nodeType":"ElementaryTypeName","src":"4957:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FujiPermissions","nameLocation":"4882:15:26","nodeType":"StructDefinition","scope":6336,"src":"4875:105:26","visibility":"public"},{"constant":false,"id":3967,"mutability":"mutable","name":"stablecoin","nameLocation":"4999:10:26","nodeType":"VariableDeclaration","scope":6336,"src":"4992:17:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":3966,"nodeType":"UserDefinedTypeName","pathNode":{"id":3965,"name":"IERC20","nameLocations":["4992:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"4992:6:26"},"referencedDeclaration":827,"src":"4992:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3970,"mutability":"mutable","name":"nftToken","nameLocation":"5024:8:26","nodeType":"VariableDeclaration","scope":6336,"src":"5016:16:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1953","typeString":"contract IERC721"},"typeName":{"id":3969,"nodeType":"UserDefinedTypeName","pathNode":{"id":3968,"name":"IERC721","nameLocations":["5016:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":1953,"src":"5016:7:26"},"referencedDeclaration":1953,"src":"5016:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1953","typeString":"contract IERC721"}},"visibility":"internal"},{"constant":false,"id":3976,"mutability":"mutable","name":"staff","nameLocation":"5054:5:26","nodeType":"VariableDeclaration","scope":6336,"src":"5041:77:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"},"typeName":{"id":3972,"nodeType":"UserDefinedTypeName","pathNode":{"id":3971,"name":"HorizonStaff","nameLocations":["5041:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":7750,"src":"5041:12:26"},"referencedDeclaration":7750,"src":"5041:12:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"value":{"arguments":[{"hexValue":"307843643234633936393666326141346242313531373042323633453732363432623536303042343739","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5075:42:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xCd24c9696f2aA4bB15170B263E72642b5600B479"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3973,"name":"HorizonStaff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"5062:12:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HorizonStaff_$7750_$","typeString":"type(contract HorizonStaff)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5062:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"vrfv2consumer","nameLocation":"5154:13:26","nodeType":"VariableDeclaration","scope":6336,"src":"5143:81:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonVRF_$8040","typeString":"contract HorizonVRF"},"typeName":{"id":3978,"nodeType":"UserDefinedTypeName","pathNode":{"id":3977,"name":"HorizonVRF","nameLocations":["5143:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":8040,"src":"5143:10:26"},"referencedDeclaration":8040,"src":"5143:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonVRF_$8040","typeString":"contract HorizonVRF"}},"value":{"arguments":[{"hexValue":"307845376439386636334546434444343433353439623634323035423141316432324166386331303037","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5181:42:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xE7d98f63EFCDD443549b64205B1A1d22Af8c1007"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3979,"name":"HorizonVRF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"5170:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HorizonVRF_$8040_$","typeString":"type(contract HorizonVRF)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5170:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_HorizonVRF_$8040","typeString":"contract HorizonVRF"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"receipt","nameLocation":"5264:7:26","nodeType":"VariableDeclaration","scope":6336,"src":"5249:83:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonReceipt_$6417","typeString":"contract HorizonReceipt"},"typeName":{"id":3984,"nodeType":"UserDefinedTypeName","pathNode":{"id":3983,"name":"HorizonReceipt","nameLocations":["5249:14:26"],"nodeType":"IdentifierPath","referencedDeclaration":6417,"src":"5249:14:26"},"referencedDeclaration":6417,"src":"5249:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonReceipt_$6417","typeString":"contract HorizonReceipt"}},"value":{"arguments":[{"hexValue":"307830323033666336386445443838324337423636396234373131433432666237413237453131396139","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5289:42:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0203fc68dED882C7B669b4711C42fb7A27E119a9"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3985,"name":"HorizonReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"5274:14:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HorizonReceipt_$6417_$","typeString":"type(contract HorizonReceipt)"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5274:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_HorizonReceipt_$6417","typeString":"contract HorizonReceipt"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"sender","nameLocation":"5366:6:26","nodeType":"VariableDeclaration","scope":6336,"src":"5357:79:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"},"typeName":{"id":3990,"nodeType":"UserDefinedTypeName","pathNode":{"id":3989,"name":"HorizonS","nameLocations":["5357:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":6966,"src":"5357:8:26"},"referencedDeclaration":6966,"src":"5357:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}},"value":{"arguments":[{"arguments":[{"hexValue":"307843336537453737363232374433343837346636303832663246383437364444313530444543326465","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5392:42:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC3e7E776227D34874f6082f2F8476DD150DEC2de"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3992,"name":"address","nodeType":"ElementaryTypeName","src":"5384:8:26","stateMutability":"payable","typeDescriptions":{}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":3991,"name":"HorizonS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"5375:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_HorizonS_$6966_$","typeString":"type(contract HorizonS)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}},"visibility":"internal"},{"constant":false,"functionSelector":"8a12312c","id":4002,"mutability":"mutable","name":"allTitles","nameLocation":"5502:9:26","nodeType":"VariableDeclaration","scope":6336,"src":"5463:48:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles)"},"typeName":{"id":4001,"keyName":"titleId","keyNameLocation":"5476:7:26","keyType":{"id":3998,"name":"uint","nodeType":"ElementaryTypeName","src":"5471:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5463:31:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4000,"nodeType":"UserDefinedTypeName","pathNode":{"id":3999,"name":"Titles","nameLocations":["5487:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"5487:6:26"},"referencedDeclaration":3884,"src":"5487:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}}},"visibility":"public"},{"constant":false,"functionSelector":"31ae0df6","id":4009,"mutability":"mutable","name":"titleSoldInfos","nameLocation":"5594:14:26","nodeType":"VariableDeclaration","scope":6336,"src":"5523:85:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold))"},"typeName":{"id":4008,"keyName":"titleId","keyNameLocation":"5536:7:26","keyType":{"id":4003,"name":"uint","nodeType":"ElementaryTypeName","src":"5531:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5523:63:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4007,"keyName":"contractId","keyNameLocation":"5560:10:26","keyType":{"id":4004,"name":"uint","nodeType":"ElementaryTypeName","src":"5555:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5547:38:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4006,"nodeType":"UserDefinedTypeName","pathNode":{"id":4005,"name":"TitlesSold","nameLocations":["5574:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"5574:10:26"},"referencedDeclaration":3914,"src":"5574:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}}}},"visibility":"public"},{"constant":false,"functionSelector":"ab922631","id":4016,"mutability":"mutable","name":"drawInfos","nameLocation":"5685:9:26","nodeType":"VariableDeclaration","scope":6336,"src":"5620:74:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Draw_$3950_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.Draw))"},"typeName":{"id":4015,"keyName":"titleId","keyNameLocation":"5633:7:26","keyType":{"id":4010,"name":"uint","nodeType":"ElementaryTypeName","src":"5628:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5620:57:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Draw_$3950_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.Draw))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4014,"keyName":"drawNumber","keyNameLocation":"5657:10:26","keyType":{"id":4011,"name":"uint","nodeType":"ElementaryTypeName","src":"5652:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5644:32:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Draw_$3950_storage_$","typeString":"mapping(uint256 => struct Horizon.Draw)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4013,"nodeType":"UserDefinedTypeName","pathNode":{"id":4012,"name":"Draw","nameLocations":["5671:4:26"],"nodeType":"IdentifierPath","referencedDeclaration":3950,"src":"5671:4:26"},"referencedDeclaration":3950,"src":"5671:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4991126d","id":4025,"mutability":"mutable","name":"selectorVRF","nameLocation":"5803:11:26","nodeType":"VariableDeclaration","scope":6336,"src":"5701:113:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$_$_$","typeString":"mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord)))"},"typeName":{"id":4024,"keyName":"titleId","keyNameLocation":"5714:7:26","keyType":{"id":4017,"name":"uint","nodeType":"ElementaryTypeName","src":"5709:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5701:94:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$_$_$","typeString":"mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4023,"keyName":"drawNumber","keyNameLocation":"5738:10:26","keyType":{"id":4018,"name":"uint","nodeType":"ElementaryTypeName","src":"5733:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5725:69:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4022,"keyName":"paymentOrder","keyNameLocation":"5765:12:26","keyType":{"id":4019,"name":"uint","nodeType":"ElementaryTypeName","src":"5760:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5752:41:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$","typeString":"mapping(uint256 => struct Horizon.TitleRecord)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4021,"nodeType":"UserDefinedTypeName","pathNode":{"id":4020,"name":"TitleRecord","nameLocations":["5781:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3933,"src":"5781:11:26"},"referencedDeclaration":3933,"src":"5781:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord"}}}}},"visibility":"public"},{"constant":false,"id":4030,"mutability":"mutable","name":"permissionInfo","nameLocation":"5872:14:26","nodeType":"VariableDeclaration","scope":6336,"src":"5821:65:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_FujiPermissions_$3964_storage_$","typeString":"mapping(bytes32 => struct Horizon.FujiPermissions)"},"typeName":{"id":4029,"keyName":"permissionHash","keyNameLocation":"5837:14:26","keyType":{"id":4026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5829:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"5821:50:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_FujiPermissions_$3964_storage_$","typeString":"mapping(bytes32 => struct Horizon.FujiPermissions)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4028,"nodeType":"UserDefinedTypeName","pathNode":{"id":4027,"name":"FujiPermissions","nameLocations":["5855:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3964,"src":"5855:15:26"},"referencedDeclaration":3964,"src":"5855:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage_ptr","typeString":"struct Horizon.FujiPermissions"}}},"visibility":"internal"},{"constant":false,"functionSelector":"ad3b6da3","id":4037,"mutability":"mutable","name":"colateralInfos","nameLocation":"5969:14:26","nodeType":"VariableDeclaration","scope":6336,"src":"5893:90:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.ColateralTitles))"},"typeName":{"id":4036,"keyName":"titleId","keyNameLocation":"5906:7:26","keyType":{"id":4031,"name":"uint","nodeType":"ElementaryTypeName","src":"5901:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5893:68:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.ColateralTitles))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4035,"keyName":"contractId","keyNameLocation":"5930:10:26","keyType":{"id":4032,"name":"uint","nodeType":"ElementaryTypeName","src":"5925:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5917:43:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$","typeString":"mapping(uint256 => struct Horizon.ColateralTitles)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4034,"nodeType":"UserDefinedTypeName","pathNode":{"id":4033,"name":"ColateralTitles","nameLocations":["5944:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3957,"src":"5944:15:26"},"referencedDeclaration":3957,"src":"5944:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage_ptr","typeString":"struct Horizon.ColateralTitles"}}}},"visibility":"public"},{"body":{"id":4050,"nodeType":"Block","src":"6047:82:26","statements":[{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4045,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"6103:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6111:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6115:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6111:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6103:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4049,"nodeType":"ExpressionStatement","src":"6103:18:26"}]},"id":4051,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4042,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"6039:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4043,"kind":"baseConstructorSpecifier","modifierName":{"id":4041,"name":"CCIPReceiver","nameLocations":["6026:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":119,"src":"6026:12:26"},"nodeType":"ModifierInvocation","src":"6026:21:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"_router","nameLocation":"6017:7:26","nodeType":"VariableDeclaration","scope":4051,"src":"6009:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4038,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6008:17:26"},"returnParameters":{"id":4044,"nodeType":"ParameterList","parameters":[],"src":"6047:0:26"},"scope":6336,"src":"5997:132:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4170,"nodeType":"Block","src":"6311:1193:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"_opening","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"6330:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6342:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742053656c6563742061206461746520746f20737461727420746f2073656c6c20746865207469746c657321","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6345:49:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_5570690229aeefd8f64172cea7b291ed6ba0cb813c1d272fab5d111e47ed71a4","typeString":"literal_string \"Must Select a date to start to sell the titles!\""},"value":"Must Select a date to start to sell the titles!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5570690229aeefd8f64172cea7b291ed6ba0cb813c1d272fab5d111e47ed71a4","typeString":"literal_string \"Must Select a date to start to sell the titles!\""}],"id":4062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6322:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"ExpressionStatement","src":"6322:73:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"_closing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"6414:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4071,"name":"_opening","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"6425:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6414:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742053656c6563742061206461746520746f2073746f7020746f2073656c6c20746865207469746c657321","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6435:48:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c35939d11c69ace3c7331c5ec194d61d5e3bb79a258cd37cac4958b150cad637","typeString":"literal_string \"Must Select a date to stop to sell the titles!\""},"value":"Must Select a date to stop to sell the titles!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c35939d11c69ace3c7331c5ec194d61d5e3bb79a258cd37cac4958b150cad637","typeString":"literal_string \"Must Select a date to stop to sell the titles!\""}],"id":4069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6406:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6406:78:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4075,"nodeType":"ExpressionStatement","src":"6406:78:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"6503:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6520:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6503:18:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742073657420746865206e756d626572206f6620746f74616c207061727469636970616e747321","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6523:44:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_586b362fc3ccebe49c1f4ae0c71766d95b27d6aa7b2e378633748988aeb54cea","typeString":"literal_string \"Must set the number of total participants!\""},"value":"Must set the number of total participants!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_586b362fc3ccebe49c1f4ae0c71766d95b27d6aa7b2e378633748988aeb54cea","typeString":"literal_string \"Must set the number of total participants!\""}],"id":4076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6495:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6495:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4082,"nodeType":"ExpressionStatement","src":"6495:73:26"},{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6581:9:26","subExpression":{"id":4083,"name":"titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"6581:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4085,"nodeType":"ExpressionStatement","src":"6581:9:26"},{"assignments":[4087],"declarations":[{"constant":false,"id":4087,"mutability":"mutable","name":"scheduleId","nameLocation":"6608:10:26","nodeType":"VariableDeclaration","scope":4170,"src":"6603:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4086,"name":"uint","nodeType":"ElementaryTypeName","src":"6603:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4094,"initialValue":{"arguments":[{"id":4090,"name":"titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"6643:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4091,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"6652:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4092,"name":"_closing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"6667:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4088,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"6621:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6627:14:26","memberName":"createSchedule","nodeType":"MemberAccess","referencedDeclaration":7352,"src":"6621:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) external returns (uint256)"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6621:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6603:73:26"},{"assignments":[4097],"declarations":[{"constant":false,"id":4097,"mutability":"mutable","name":"newTitle","nameLocation":"6703:8:26","nodeType":"VariableDeclaration","scope":4170,"src":"6689:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_memory_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":4096,"nodeType":"UserDefinedTypeName","pathNode":{"id":4095,"name":"Titles","nameLocations":["6689:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"6689:6:26"},"referencedDeclaration":3884,"src":"6689:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":4139,"initialValue":{"arguments":[{"id":4099,"name":"_opening","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"6749:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4100,"name":"_closing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"6786:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4101,"name":"scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"6822:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6859:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"6883:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6892:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6898:2:26","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6892:8:26","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6883:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4108,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"6925:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"6970:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6979:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6985:2:26","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6979:8:26","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6970:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6969:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"id":4115,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"6992:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6991:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6969:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"7033:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7048:2:26","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"7042:8:26","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"7033:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7032:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4124,"name":"_participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"7054:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7032:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7031:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7071:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7031:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7030:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7076:3:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7030:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7110:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7170:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7197:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":4136,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"7217:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7229:7:26","memberName":"Waiting","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"7217:19:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}],"id":4098,"name":"Titles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"6714:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Titles_$3884_storage_ptr_$","typeString":"type(struct Horizon.Titles storage pointer)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6733:15:26","6768:16:26","6805:15:26","6843:14:26","6871:10:26","6911:12:26","6949:18:26","7017:11:26","7090:18:26","7122:18:26","7154:14:26","7182:13:26","7209:6:26"],"names":["openSellingDate","closeSellingDate","paymentSchedule","nextDrawNumber","titleValue","installments","monthlyInvestiment","protocolFee","numberOfTitlesSold","totalValueReceived","totalValuePaid","titleCanceled","status"],"nodeType":"FunctionCall","src":"6714:534:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_memory_ptr","typeString":"struct Horizon.Titles memory"}},"nodeType":"VariableDeclarationStatement","src":"6689:559:26"},{"expression":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4140,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"7261:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":4142,"indexExpression":{"id":4141,"name":"titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"7271:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7261:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4143,"name":"newTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"7282:8:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_memory_ptr","typeString":"struct Horizon.Titles memory"}},"src":"7261:29:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"id":4145,"nodeType":"ExpressionStatement","src":"7261:29:26"},{"assignments":[4147],"declarations":[{"constant":false,"id":4147,"mutability":"mutable","name":"monthlyValue","nameLocation":"7308:12:26","nodeType":"VariableDeclaration","scope":4170,"src":"7303:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint","nodeType":"ElementaryTypeName","src":"7303:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4159,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4148,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"7324:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":4150,"indexExpression":{"id":4149,"name":"titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"7334:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7324:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"id":4151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7343:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"7324:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"expression":{"baseExpression":{"id":4152,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"7365:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":4154,"indexExpression":{"id":4153,"name":"titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"7375:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7365:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"id":4155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7384:11:26","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":3872,"src":"7365:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7364:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7324:72:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7323:74:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7303:94:26"},{"eventCall":{"arguments":[{"id":4161,"name":"titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"7431:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4162,"name":"scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"7440:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4163,"name":"monthlyValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"7452:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4164,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"7466:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":4166,"indexExpression":{"id":4165,"name":"titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"7476:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7466:18:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"id":4167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7485:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3866,"src":"7466:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4160,"name":"NewTitleCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"7415:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7415:81:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4169,"nodeType":"EmitStatement","src":"7410:86:26"}]},"functionSelector":"643233e5","id":4171,"implemented":true,"kind":"function","modifiers":[],"name":"createTitle","nameLocation":"6146:11:26","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"_opening","nameLocation":"6163:8:26","nodeType":"VariableDeclaration","scope":4171,"src":"6158:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint","nodeType":"ElementaryTypeName","src":"6158:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4055,"mutability":"mutable","name":"_closing","nameLocation":"6209:8:26","nodeType":"VariableDeclaration","scope":4171,"src":"6204:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint","nodeType":"ElementaryTypeName","src":"6204:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"_participants","nameLocation":"6250:13:26","nodeType":"VariableDeclaration","scope":4171,"src":"6245:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint","nodeType":"ElementaryTypeName","src":"6245:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"_value","nameLocation":"6296:6:26","nodeType":"VariableDeclaration","scope":4171,"src":"6291:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint","nodeType":"ElementaryTypeName","src":"6291:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6157:146:26"},"returnParameters":{"id":4061,"nodeType":"ParameterList","parameters":[],"src":"6311:0:26"},"scope":6336,"src":"6137:1367:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4323,"nodeType":"Block","src":"7561:1385:26","statements":[{"assignments":[4178],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"title","nameLocation":"7592:5:26","nodeType":"VariableDeclaration","scope":4323,"src":"7577:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":4177,"nodeType":"UserDefinedTypeName","pathNode":{"id":4176,"name":"Titles","nameLocations":["7577:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"7577:6:26"},"referencedDeclaration":3884,"src":"7577:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":4182,"initialValue":{"baseExpression":{"id":4179,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"7600:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":4181,"indexExpression":{"id":4180,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"7610:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7600:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7577:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4184,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7640:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7646:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"7640:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4186,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"7656:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7668:7:26","memberName":"Waiting","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"7656:19:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"7640:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4189,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7679:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7685:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"7679:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4191,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"7695:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7707:4:26","memberName":"Open","nodeType":"MemberAccess","referencedDeclaration":3842,"src":"7695:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"7679:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7640:71:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4195,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7715:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"7715:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4197,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"7731:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7743:6:26","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":3840,"src":"7731:18:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"7715:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7640:109:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686973207469746c6520616c726561647920656e646564","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7751:26:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_1828351de31017e067d2cf8514e5e83b071017d56523b16cd198dcc752020c4e","typeString":"literal_string \"This title already ended\""},"value":"This title already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1828351de31017e067d2cf8514e5e83b071017d56523b16cd198dcc752020c4e","typeString":"literal_string \"This title already ended\""}],"id":4183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7632:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:146:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4203,"nodeType":"ExpressionStatement","src":"7632:146:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4204,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7794:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7800:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"7794:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4206,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7812:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7818:15:26","memberName":"openSellingDate","nodeType":"MemberAccess","referencedDeclaration":3858,"src":"7812:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7794:39:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4209,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7837:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7843:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"7837:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4211,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"7853:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7865:7:26","memberName":"Waiting","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"7853:19:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"7837:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7794:78:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4321,"nodeType":"Block","src":"7989:950:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4228,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8007:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8013:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"8007:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4230,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8025:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8031:16:26","memberName":"closeSellingDate","nodeType":"MemberAccess","referencedDeclaration":3860,"src":"8025:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8007:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4233,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8051:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8057:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"8051:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4235,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"8067:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8079:4:26","memberName":"Open","nodeType":"MemberAccess","referencedDeclaration":3842,"src":"8067:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"8051:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8007:76:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4319,"nodeType":"Block","src":"8158:770:26","statements":[{"assignments":[4248],"declarations":[{"constant":false,"id":4248,"mutability":"mutable","name":"nextDrawParticipants","nameLocation":"8182:20:26","nodeType":"VariableDeclaration","scope":4319,"src":"8177:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint","nodeType":"ElementaryTypeName","src":"8177:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4255,"initialValue":{"arguments":[{"id":4251,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"8234:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4252,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8244:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8250:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"8244:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4249,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"8205:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8211:22:26","memberName":"returnDrawParticipants","nodeType":"MemberAccess","referencedDeclaration":7737,"src":"8205:28:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view external returns (uint256)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8177:88:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4256,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8290:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8296:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"8290:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4258,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"8306:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8318:6:26","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":3840,"src":"8306:18:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"8290:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4261,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8328:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8334:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"8328:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4263,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8351:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8357:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"8351:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8328:41:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8290:79:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4267,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8394:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8400:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"8394:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4269,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"8410:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8422:6:26","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":3840,"src":"8410:18:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"8394:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4272,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8432:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8438:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"8432:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"expression":{"id":4274,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8456:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8462:13:26","memberName":"titleCanceled","nodeType":"MemberAccess","referencedDeclaration":3880,"src":"8456:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8455:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8432:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4278,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8479:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8485:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"8479:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8432:65:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8394:103:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4282,"name":"nextDrawParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8501:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8501:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8394:132:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8290:236:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4317,"nodeType":"Block","src":"8672:241:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4300,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8698:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8704:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"8698:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8726:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8698:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4316,"nodeType":"IfStatement","src":"8695:199:26","trueBody":{"id":4315,"nodeType":"Block","src":"8728:166:26","statements":[{"expression":{"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4304,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8755:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8761:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"8755:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4307,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"8770:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8782:8:26","memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"8770:20:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"8755:35:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"id":4310,"nodeType":"ExpressionStatement","src":"8755:35:26"},{"eventCall":{"arguments":[{"id":4312,"name":"nextDrawParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8849:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4311,"name":"ThisTitleHasBeenCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"8824:24:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8824:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4314,"nodeType":"EmitStatement","src":"8819:51:26"}]}}]},"id":4318,"nodeType":"IfStatement","src":"8286:627:26","trueBody":{"id":4299,"nodeType":"Block","src":"8527:141:26","statements":[{"expression":{"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4287,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8550:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8556:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"8550:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4290,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"8565:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8577:9:26","memberName":"Finalized","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"8565:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"8550:36:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"id":4293,"nodeType":"ExpressionStatement","src":"8550:36:26"},{"eventCall":{"arguments":[{"expression":{"id":4295,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8635:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8641:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"8635:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}],"id":4294,"name":"TitleStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"8616:18:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_TitleStatus_$3844_$returns$__$","typeString":"function (enum Horizon.TitleStatus)"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8616:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4298,"nodeType":"EmitStatement","src":"8611:37:26"}]}}]},"id":4320,"nodeType":"IfStatement","src":"8004:924:26","trueBody":{"id":4246,"nodeType":"Block","src":"8084:70:26","statements":[{"expression":{"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4239,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8103:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8109:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"8103:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4242,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"8118:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8130:6:26","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":3840,"src":"8118:18:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"8103:33:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"id":4245,"nodeType":"ExpressionStatement","src":"8103:33:26"}]}}]},"id":4322,"nodeType":"IfStatement","src":"7791:1148:26","trueBody":{"id":4227,"nodeType":"Block","src":"7873:112:26","statements":[{"expression":{"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4215,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7888:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7894:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"7888:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4218,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"7903:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7915:4:26","memberName":"Open","nodeType":"MemberAccess","referencedDeclaration":3842,"src":"7903:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"7888:31:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"id":4221,"nodeType":"ExpressionStatement","src":"7888:31:26"},{"eventCall":{"arguments":[{"expression":{"id":4223,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7960:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7966:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"7960:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}],"id":4222,"name":"TitleStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"7941:18:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_TitleStatus_$3844_$returns$__$","typeString":"function (enum Horizon.TitleStatus)"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7941:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4226,"nodeType":"EmitStatement","src":"7936:37:26"}]}}]},"functionSelector":"d762a160","id":4324,"implemented":true,"kind":"function","modifiers":[],"name":"updateTitleStatus","nameLocation":"7521:17:26","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"_titleId","nameLocation":"7544:8:26","nodeType":"VariableDeclaration","scope":4324,"src":"7539:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4172,"name":"uint","nodeType":"ElementaryTypeName","src":"7539:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7538:15:26"},"returnParameters":{"id":4175,"nodeType":"ParameterList","parameters":[],"src":"7561:0:26"},"scope":6336,"src":"7512:1434:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4498,"nodeType":"Block","src":"9039:1893:26","statements":[{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"title","nameLocation":"9070:5:26","nodeType":"VariableDeclaration","scope":4498,"src":"9055:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":4335,"nodeType":"UserDefinedTypeName","pathNode":{"id":4334,"name":"Titles","nameLocations":["9055:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"9055:6:26"},"referencedDeclaration":3884,"src":"9055:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":4340,"initialValue":{"baseExpression":{"id":4337,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"9078:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":4339,"indexExpression":{"id":4338,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"9088:8:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9078:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9055:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4342,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9118:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9124:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"9118:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4344,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"9134:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9146:4:26","memberName":"Open","nodeType":"MemberAccess","referencedDeclaration":3842,"src":"9134:16:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"9118:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686973205469746c65206973206e6f7420617661696c61626c652e20436865636b20746865205469746c652073746174757321","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9151:54:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c657784ec80b2fd94fe4f412fa8b011772c34458eee8909e177fc24fa65ff87","typeString":"literal_string \"This Title is not available. Check the Title status!\""},"value":"This Title is not available. Check the Title status!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c657784ec80b2fd94fe4f412fa8b011772c34458eee8909e177fc24fa65ff87","typeString":"literal_string \"This Title is not available. Check the Title status!\""}],"id":4341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9110:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:96:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4349,"nodeType":"ExpressionStatement","src":"9110:96:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4351,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9225:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9231:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"9225:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4353,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9253:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9259:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"9253:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9225:46:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469746c6520736f6c646f757421","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9273:16:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4869e680a5a869b4666fc8c78018661fc6d024997f5edb239d2ee64c4763449","typeString":"literal_string \"Title soldout!\""},"value":"Title soldout!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c4869e680a5a869b4666fc8c78018661fc6d024997f5edb239d2ee64c4763449","typeString":"literal_string \"Title soldout!\""}],"id":4350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9217:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9217:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4358,"nodeType":"ExpressionStatement","src":"9217:73:26"},{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9303:26:26","subExpression":{"expression":{"id":4359,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9303:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9309:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"9303:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"nodeType":"ExpressionStatement","src":"9303:26:26"},{"assignments":[4365],"declarations":[{"constant":false,"id":4365,"mutability":"mutable","name":"fee","nameLocation":"9448:3:26","nodeType":"VariableDeclaration","scope":4498,"src":"9443:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint","nodeType":"ElementaryTypeName","src":"9443:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4366,"nodeType":"VariableDeclarationStatement","src":"9443:8:26"},{"assignments":[4368],"declarations":[{"constant":false,"id":4368,"mutability":"mutable","name":"lockPeriod","nameLocation":"9467:10:26","nodeType":"VariableDeclaration","scope":4498,"src":"9462:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint","nodeType":"ElementaryTypeName","src":"9462:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4369,"nodeType":"VariableDeclarationStatement","src":"9462:15:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4370,"name":"withdrawPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"9491:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9509:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9491:22:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4391,"nodeType":"Block","src":"9599:63:26","statements":[{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4383,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"9614:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9620:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9614:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"9614:7:26"},{"expression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4387,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"9636:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9649:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9636:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4390,"nodeType":"ExpressionStatement","src":"9636:14:26"}]},"id":4392,"nodeType":"IfStatement","src":"9488:174:26","trueBody":{"id":4382,"nodeType":"Block","src":"9514:79:26","statements":[{"expression":{"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4373,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"9529:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4374,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9535:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9541:11:26","memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":3872,"src":"9535:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9529:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4377,"nodeType":"ExpressionStatement","src":"9529:23:26"},{"expression":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4378,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"9567:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9567:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4381,"nodeType":"ExpressionStatement","src":"9567:14:26"}]}},{"assignments":[4395],"declarations":[{"constant":false,"id":4395,"mutability":"mutable","name":"myTitle","nameLocation":"9692:7:26","nodeType":"VariableDeclaration","scope":4498,"src":"9674:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_memory_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":4394,"nodeType":"UserDefinedTypeName","pathNode":{"id":4393,"name":"TitlesSold","nameLocations":["9674:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"9674:10:26"},"referencedDeclaration":3914,"src":"9674:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":4429,"initialValue":{"arguments":[{"expression":{"id":4397,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9740:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9746:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"9740:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4399,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9791:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9797:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3866,"src":"9791:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4401,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9836:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9842:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"9836:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"expression":{"id":4403,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"9885:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9891:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"9885:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9884:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"id":4406,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"9914:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9913:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9884:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9883:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4410,"name":"lockPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"9948:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4411,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9985:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9989:6:26","memberName":"sender","nodeType":"MemberAccess","src":"9985:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10028:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10058:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10087:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":4418,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10134:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}],"id":4417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10126:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4416,"name":"address","nodeType":"ElementaryTypeName","src":"10126:7:26","typeDescriptions":{}}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10126:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10183:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10175:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4420,"name":"address","nodeType":"ElementaryTypeName","src":"10175:7:26","typeDescriptions":{}}},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10175:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10224:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":4425,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"10255:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10271:10:26","memberName":"OnSchedule","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"10255:26:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},{"hexValue":"66616c7365","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10302:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4396,"name":"TitlesSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"9702:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TitlesSold_$3914_storage_ptr_$","typeString":"type(struct Horizon.TitlesSold storage pointer)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9728:10:26","9779:10:26","9822:12:26","9869:12:26","9934:12:26","9973:10:26","10010:16:26","10044:12:26","10074:11:26","10103:21:26","10154:19:26","10200:22:26","10240:13:26","10296:4:26"],"names":["contractId","titleValue","installments","monthlyValue","periodLocked","titleOwner","installmentsPaid","drawSelected","colateralId","colateralTitleAddress","colateralRWAAddress","valueOfEnsuranceNeeded","myTitleStatus","paid"],"nodeType":"FunctionCall","src":"9702:617:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_memory_ptr","typeString":"struct Horizon.TitlesSold memory"}},"nodeType":"VariableDeclarationStatement","src":"9674:645:26"},{"expression":{"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4430,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"10332:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":4434,"indexExpression":{"id":4431,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"10347:8:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10332:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":4435,"indexExpression":{"expression":{"id":4432,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"10357:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10363:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"10357:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10332:50:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4436,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"10385:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_memory_ptr","typeString":"struct Horizon.TitlesSold memory"}},"src":"10332:60:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"id":4438,"nodeType":"ExpressionStatement","src":"10332:60:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4439,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"10408:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10414:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"10408:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4441,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"10435:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10441:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"10435:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10408:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4452,"nodeType":"IfStatement","src":"10405:109:26","trueBody":{"id":4451,"nodeType":"Block","src":"10454:60:26","statements":[{"expression":{"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4444,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"10469:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10475:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"10469:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4447,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"10484:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10496:6:26","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":3840,"src":"10484:18:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"10469:33:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"id":4450,"nodeType":"ExpressionStatement","src":"10469:33:26"}]}},{"assignments":[4454],"declarations":[{"constant":false,"id":4454,"mutability":"mutable","name":"myTitleReceipt","nameLocation":"10547:14:26","nodeType":"VariableDeclaration","scope":4498,"src":"10534:27:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4453,"name":"bytes","nodeType":"ElementaryTypeName","src":"10534:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4459,"initialValue":{"arguments":[{"id":4457,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"10575:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_memory_ptr","typeString":"struct Horizon.TitlesSold memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TitlesSold_$3914_memory_ptr","typeString":"struct Horizon.TitlesSold memory"}],"expression":{"id":4455,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10564:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10568:6:26","memberName":"encode","nodeType":"MemberAccess","src":"10564:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10564:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10534:49:26"},{"assignments":[4461],"declarations":[{"constant":false,"id":4461,"mutability":"mutable","name":"myTitleReceiptId","nameLocation":"10601:16:26","nodeType":"VariableDeclaration","scope":4498,"src":"10596:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint","nodeType":"ElementaryTypeName","src":"10596:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4471,"initialValue":{"arguments":[{"expression":{"id":4464,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10637:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10641:6:26","memberName":"sender","nodeType":"MemberAccess","src":"10637:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4468,"name":"myTitleReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"10656:14:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10649:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4466,"name":"string","nodeType":"ElementaryTypeName","src":"10649:6:26","typeDescriptions":{}}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10649:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4462,"name":"receipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"10620:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonReceipt_$6417","typeString":"contract HorizonReceipt"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10628:8:26","memberName":"safeMint","nodeType":"MemberAccess","referencedDeclaration":6384,"src":"10620:16:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,string memory) external returns (uint256)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10620:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10596:76:26"},{"expression":{"arguments":[{"id":4473,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"10700:8:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"baseExpression":{"baseExpression":{"id":4474,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"10710:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":4476,"indexExpression":{"id":4475,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"10725:8:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10710:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":4479,"indexExpression":{"expression":{"id":4477,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"10735:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10741:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"10735:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10710:50:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"id":4480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10761:10:26","memberName":"contractId","nodeType":"MemberAccess","referencedDeclaration":3886,"src":"10710:61:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"baseExpression":{"id":4481,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"10773:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":4483,"indexExpression":{"id":4482,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"10788:8:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10773:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":4486,"indexExpression":{"expression":{"id":4484,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"10798:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10804:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"10798:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10773:50:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"id":4487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10824:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"10773:67:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4488,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"10842:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"id":4472,"name":"payInstallment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"10685:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_contract$_IERC20_$827_$returns$__$","typeString":"function (uint256,uint256,uint256,contract IERC20)"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10685:171:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4490,"nodeType":"ExpressionStatement","src":"10685:171:26"},{"eventCall":{"arguments":[{"expression":{"id":4492,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"10887:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10893:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"10887:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4494,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10913:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10917:6:26","memberName":"sender","nodeType":"MemberAccess","src":"10913:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4491,"name":"NewTitleSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"10874:12:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4497,"nodeType":"EmitStatement","src":"10869:55:26"}]},"functionSelector":"ba658a44","id":4499,"implemented":true,"kind":"function","modifiers":[],"name":"buyTitle","nameLocation":"8963:8:26","nodeType":"FunctionDefinition","parameters":{"id":4332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"_titleId","nameLocation":"8979:8:26","nodeType":"VariableDeclaration","scope":4499,"src":"8972:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4325,"name":"uint64","nodeType":"ElementaryTypeName","src":"8972:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"withdrawPeriod","nameLocation":"8994:14:26","nodeType":"VariableDeclaration","scope":4499,"src":"8989:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4327,"name":"bool","nodeType":"ElementaryTypeName","src":"8989:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4331,"mutability":"mutable","name":"_tokenAddress","nameLocation":"9017:13:26","nodeType":"VariableDeclaration","scope":4499,"src":"9010:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":4330,"nodeType":"UserDefinedTypeName","pathNode":{"id":4329,"name":"IERC20","nameLocations":["9010:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"9010:6:26"},"referencedDeclaration":827,"src":"9010:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"8971:60:26"},"returnParameters":{"id":4333,"nodeType":"ParameterList","parameters":[],"src":"9039:0:26"},"scope":6336,"src":"8954:1978:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4790,"nodeType":"Block","src":"11143:3046:26","statements":[{"assignments":[4513],"declarations":[{"constant":false,"id":4513,"mutability":"mutable","name":"title","nameLocation":"11169:5:26","nodeType":"VariableDeclaration","scope":4790,"src":"11154:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":4512,"nodeType":"UserDefinedTypeName","pathNode":{"id":4511,"name":"Titles","nameLocations":["11154:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"11154:6:26"},"referencedDeclaration":3884,"src":"11154:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":4517,"initialValue":{"baseExpression":{"id":4514,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"11177:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":4516,"indexExpression":{"id":4515,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"11187:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11177:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11154:42:26"},{"assignments":[4520],"declarations":[{"constant":false,"id":4520,"mutability":"mutable","name":"myTitle","nameLocation":"11226:7:26","nodeType":"VariableDeclaration","scope":4790,"src":"11207:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":4519,"nodeType":"UserDefinedTypeName","pathNode":{"id":4518,"name":"TitlesSold","nameLocations":["11207:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"11207:10:26"},"referencedDeclaration":3914,"src":"11207:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":4526,"initialValue":{"baseExpression":{"baseExpression":{"id":4521,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"11236:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":4523,"indexExpression":{"id":4522,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"11251:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11236:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":4525,"indexExpression":{"id":4524,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"11261:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11236:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11207:66:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4528,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"11292:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11298:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"11292:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4530,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"11308:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11320:6:26","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":3840,"src":"11308:18:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"11292:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436865636b20746865207469746c652073746174757321","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11328:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff0b62141290db806c0aec6fa927cc98214fb86094bce7cf27374d6629e65454","typeString":"literal_string \"Check the title status!\""},"value":"Check the title status!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff0b62141290db806c0aec6fa927cc98214fb86094bce7cf27374d6629e65454","typeString":"literal_string \"Check the title status!\""}],"id":4527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11284:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11284:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4535,"nodeType":"ExpressionStatement","src":"11284:70:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4537,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"11373:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11381:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3890,"src":"11373:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4539,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"11397:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11373:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520646f6e2774206861766520616e7920696e7374616c6c6d656e74206c65667420746f2070617921","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11417:45:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ae21a61c7d1e7f88ad9240e7b7a38d65522942416f29d6cd40720a2258433a4","typeString":"literal_string \"You don't have any installment left to pay!\""},"value":"You don't have any installment left to pay!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ae21a61c7d1e7f88ad9240e7b7a38d65522942416f29d6cd40720a2258433a4","typeString":"literal_string \"You don't have any installment left to pay!\""}],"id":4536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11365:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11365:98:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4543,"nodeType":"ExpressionStatement","src":"11365:98:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4545,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"11482:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11490:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"11482:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4547,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"11507:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11523:10:26","memberName":"OnSchedule","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"11507:26:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"11482:51:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4550,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"11537:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11545:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"11537:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4552,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"11562:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11578:4:26","memberName":"Late","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"11562:20:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"11537:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11482:100:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4556,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"11586:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11594:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"11586:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4558,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"11611:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11627:8:26","memberName":"Withdraw","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"11611:24:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"11586:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11482:153:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11474:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11474:163:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4563,"nodeType":"ExpressionStatement","src":"11474:163:26"},{"assignments":[4565],"declarations":[{"constant":false,"id":4565,"mutability":"mutable","name":"_installment","nameLocation":"11655:12:26","nodeType":"VariableDeclaration","scope":4790,"src":"11650:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint","nodeType":"ElementaryTypeName","src":"11650:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4566,"nodeType":"VariableDeclarationStatement","src":"11650:17:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4567,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"11683:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11705:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11683:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4587,"nodeType":"Block","src":"11755:146:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4576,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"11778:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4577,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"11799:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11807:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"11799:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11778:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207061696421","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11825:15:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffe46ecafa53af28e04f87d5d46db42119e79f6eba1cd92905fd6925471ee3f6","typeString":"literal_string \"Already paid!\""},"value":"Already paid!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffe46ecafa53af28e04f87d5d46db42119e79f6eba1cd92905fd6925471ee3f6","typeString":"literal_string \"Already paid!\""}],"id":4575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11770:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11770:71:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4582,"nodeType":"ExpressionStatement","src":"11770:71:26"},{"expression":{"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4583,"name":"_installment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"11856:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4584,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"11871:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11856:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4586,"nodeType":"ExpressionStatement","src":"11856:33:26"}]},"id":4588,"nodeType":"IfStatement","src":"11680:221:26","trueBody":{"id":4574,"nodeType":"Block","src":"11707:43:26","statements":[{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4570,"name":"_installment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"11722:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11737:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11722:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4573,"nodeType":"ExpressionStatement","src":"11722:16:26"}]}},{"assignments":[4590],"declarations":[{"constant":false,"id":4590,"mutability":"mutable","name":"paymentDate","nameLocation":"11918:11:26","nodeType":"VariableDeclaration","scope":4790,"src":"11913:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4589,"name":"uint","nodeType":"ElementaryTypeName","src":"11913:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4597,"initialValue":{"arguments":[{"expression":{"id":4593,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"11960:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11966:15:26","memberName":"paymentSchedule","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"11960:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4595,"name":"_installment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"11983:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4591,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"11932:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11938:21:26","memberName":"returnPaymentDeadline","nodeType":"MemberAccess","referencedDeclaration":7694,"src":"11932:27:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view external returns (uint256)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11932:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11913:83:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4598,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12012:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12018:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"12012:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4600,"name":"paymentDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"12030:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12012:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4653,"nodeType":"Block","src":"12425:205:26","statements":[{"expression":{"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4637,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"12440:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4638,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"12454:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12462:12:26","memberName":"monthlyValue","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"12454:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12440:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4641,"nodeType":"ExpressionStatement","src":"12440:34:26"},{"eventCall":{"arguments":[{"id":4643,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"12520:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4642,"name":"AmountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"12508:11:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12508:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4645,"nodeType":"EmitStatement","src":"12503:29:26"},{"expression":{"arguments":[{"id":4647,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"12568:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4648,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"12578:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4649,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"12591:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4650,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"12604:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"id":4646,"name":"receiveInstallment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"12549:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_contract$_IERC20_$827_$returns$__$","typeString":"function (uint256,uint256,uint256,contract IERC20)"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12549:69:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4652,"nodeType":"ExpressionStatement","src":"12549:69:26"}]},"id":4654,"nodeType":"IfStatement","src":"12009:621:26","trueBody":{"id":4636,"nodeType":"Block","src":"12042:379:26","statements":[{"expression":{"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4602,"name":"paymentDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"12057:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4603,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12073:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12079:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"12073:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4605,"name":"paymentDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"12091:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12073:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12072:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12057:46:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4609,"nodeType":"ExpressionStatement","src":"12057:46:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4610,"name":"paymentDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"12123:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12138:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12123:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4635,"nodeType":"IfStatement","src":"12120:290:26","trueBody":{"id":4634,"nodeType":"Block","src":"12140:270:26","statements":[{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4613,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"12161:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4616,"name":"paymentDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"12205:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4617,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"12219:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12225:15:26","memberName":"paymentSchedule","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"12219:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4619,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"12242:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4614,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"12175:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12181:23:26","memberName":"calculateDelayedPayment","nodeType":"MemberAccess","referencedDeclaration":7566,"src":"12175:29:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) external returns (uint256)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12175:79:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12161:93:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4622,"nodeType":"ExpressionStatement","src":"12161:93:26"},{"eventCall":{"arguments":[{"id":4624,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"12292:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4623,"name":"AmountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"12280:11:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4626,"nodeType":"EmitStatement","src":"12275:29:26"},{"expression":{"arguments":[{"id":4628,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"12344:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4629,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"12354:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4630,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"12367:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4631,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"12380:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"id":4627,"name":"receiveInstallment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"12325:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_contract$_IERC20_$827_$returns$__$","typeString":"function (uint256,uint256,uint256,contract IERC20)"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:69:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4633,"nodeType":"ExpressionStatement","src":"12325:69:26"}]}}]}},{"assignments":[4657],"declarations":[{"constant":false,"id":4657,"mutability":"mutable","name":"record","nameLocation":"12661:6:26","nodeType":"VariableDeclaration","scope":4790,"src":"12642:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_memory_ptr","typeString":"struct Horizon.TitleRecord"},"typeName":{"id":4656,"nodeType":"UserDefinedTypeName","pathNode":{"id":4655,"name":"TitleRecord","nameLocations":["12642:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3933,"src":"12642:11:26"},"referencedDeclaration":3933,"src":"12642:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord"}},"visibility":"internal"}],"id":4673,"initialValue":{"arguments":[{"id":4659,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"12709:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4660,"name":"_installment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"12754:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4661,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12794:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12800:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"12794:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12838:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12842:6:26","memberName":"sender","nodeType":"MemberAccess","src":"12838:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4665,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"12869:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12877:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"12869:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4667,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"12910:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4668,"name":"paymentDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"12950:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12983:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":4670,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13020:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13028:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"13020:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4658,"name":"TitleRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"12670:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TitleRecord_$3933_storage_ptr_$","typeString":"type(struct Horizon.TitleRecord storage pointer)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12697:10:26","12735:17:26","12781:11:26","12824:12:26","12863:4:26","12902:6:26","12936:12:26","12977:4:26","13002:16:26"],"names":["contractId","installmentNumber","paymentDate","payerAddress","user","amount","paymentDelay","paid","installmentsPaid"],"nodeType":"FunctionCall","src":"12670:386:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_memory_ptr","typeString":"struct Horizon.TitleRecord memory"}},"nodeType":"VariableDeclarationStatement","src":"12642:414:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4674,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13072:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13080:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"13072:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4676,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"13100:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13106:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"13100:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13072:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4679,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13124:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13132:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"13124:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13148:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13124:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13072:77:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4714,"nodeType":"IfStatement","src":"13069:401:26","trueBody":{"id":4713,"nodeType":"Block","src":"13150:320:26","statements":[{"expression":{"arguments":[{"expression":{"id":4687,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"13207:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13213:15:26","memberName":"paymentSchedule","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"13207:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4689,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"13230:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13236:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"13230:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4684,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"13179:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13185:21:26","memberName":"addParticipantsToDraw","nodeType":"MemberAccess","referencedDeclaration":7453,"src":"13179:27:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13179:72:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4692,"nodeType":"ExpressionStatement","src":"13179:72:26"},{"assignments":[4694],"declarations":[{"constant":false,"id":4694,"mutability":"mutable","name":"nextDrawParticipants","nameLocation":"13273:20:26","nodeType":"VariableDeclaration","scope":4713,"src":"13268:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint","nodeType":"ElementaryTypeName","src":"13268:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4702,"initialValue":{"arguments":[{"expression":{"id":4697,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"13325:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13331:15:26","memberName":"paymentSchedule","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"13325:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4699,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"13348:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13354:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"13348:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4695,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"13296:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13302:22:26","memberName":"returnDrawParticipants","nodeType":"MemberAccess","referencedDeclaration":7737,"src":"13296:28:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view external returns (uint256)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13268:101:26"},{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":4703,"name":"selectorVRF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"13386:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$_$_$","typeString":"mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord storage ref)))"}},"id":4707,"indexExpression":{"id":4704,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"13398:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13386:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord storage ref))"}},"id":4708,"indexExpression":{"id":4705,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"13408:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13386:41:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$","typeString":"mapping(uint256 => struct Horizon.TitleRecord storage ref)"}},"id":4709,"indexExpression":{"id":4706,"name":"nextDrawParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"13428:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13386:63:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage","typeString":"struct Horizon.TitleRecord storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4710,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"13452:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_memory_ptr","typeString":"struct Horizon.TitleRecord memory"}},"src":"13386:72:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage","typeString":"struct Horizon.TitleRecord storage ref"}},"id":4712,"nodeType":"ExpressionStatement","src":"13386:72:26"}]}},{"assignments":[4716],"declarations":[{"constant":false,"id":4716,"mutability":"mutable","name":"paymentReceipt","nameLocation":"13495:14:26","nodeType":"VariableDeclaration","scope":4790,"src":"13482:27:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4715,"name":"bytes","nodeType":"ElementaryTypeName","src":"13482:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4721,"initialValue":{"arguments":[{"id":4719,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"13523:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_memory_ptr","typeString":"struct Horizon.TitleRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TitleRecord_$3933_memory_ptr","typeString":"struct Horizon.TitleRecord memory"}],"expression":{"id":4717,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13512:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13516:6:26","memberName":"encode","nodeType":"MemberAccess","src":"13512:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13512:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13482:48:26"},{"expression":{"arguments":[{"expression":{"id":4725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13560:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13564:6:26","memberName":"sender","nodeType":"MemberAccess","src":"13560:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4729,"name":"paymentReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"13579:14:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13572:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4727,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:26","typeDescriptions":{}}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13572:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4722,"name":"receipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"13543:7:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonReceipt_$6417","typeString":"contract HorizonReceipt"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13551:8:26","memberName":"safeMint","nodeType":"MemberAccess","referencedDeclaration":6384,"src":"13543:16:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,string memory) external returns (uint256)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:52:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4732,"nodeType":"ExpressionStatement","src":"13543:52:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4733,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13611:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13619:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"13611:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4735,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13639:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13647:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3890,"src":"13639:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13611:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4757,"nodeType":"IfStatement","src":"13608:245:26","trueBody":{"id":4756,"nodeType":"Block","src":"13660:193:26","statements":[{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4738,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13675:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13683:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"13675:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4741,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"13699:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13715:8:26","memberName":"Withdraw","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"13699:24:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"13675:48:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"id":4744,"nodeType":"ExpressionStatement","src":"13675:48:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4745,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13743:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13751:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"13743:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13766:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13743:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4755,"nodeType":"IfStatement","src":"13740:102:26","trueBody":{"id":4754,"nodeType":"Block","src":"13769:73:26","statements":[{"expression":{"arguments":[{"id":4750,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"13804:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4751,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"13814:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4749,"name":"refundColateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"13788:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13788:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4753,"nodeType":"ExpressionStatement","src":"13788:38:26"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4758,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13866:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13874:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"13866:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4760,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"13894:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13900:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"13894:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13866:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4763,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13919:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13927:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"13919:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4765,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"13944:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13960:4:26","memberName":"Late","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"13944:20:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"13919:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13866:98:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4777,"nodeType":"IfStatement","src":"13863:179:26","trueBody":{"id":4776,"nodeType":"Block","src":"13965:77:26","statements":[{"expression":{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4769,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"13980:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13988:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"13980:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4772,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"14004:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14020:10:26","memberName":"OnSchedule","nodeType":"MemberAccess","referencedDeclaration":3850,"src":"14004:26:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"13980:50:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"id":4775,"nodeType":"ExpressionStatement","src":"13980:50:26"}]}},{"expression":{"arguments":[{"id":4779,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"14077:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4780,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"14087:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4778,"name":"updateValueOfEnsurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"14054:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14054:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4782,"nodeType":"ExpressionStatement","src":"14054:45:26"},{"eventCall":{"arguments":[{"id":4784,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"14133:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4785,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"14143:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4786,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"14156:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14164:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"14156:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4783,"name":"InstallmentPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"14117:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14117:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4789,"nodeType":"EmitStatement","src":"14112:69:26"}]},"functionSelector":"c39622f8","id":4791,"implemented":true,"kind":"function","modifiers":[],"name":"payInstallment","nameLocation":"10949:14:26","nodeType":"FunctionDefinition","parameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"_idTitle","nameLocation":"10969:8:26","nodeType":"VariableDeclaration","scope":4791,"src":"10964:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint","nodeType":"ElementaryTypeName","src":"10964:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"_contractId","nameLocation":"11018:11:26","nodeType":"VariableDeclaration","scope":4791,"src":"11013:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint","nodeType":"ElementaryTypeName","src":"11013:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4505,"mutability":"mutable","name":"_installmentNumber","nameLocation":"11065:18:26","nodeType":"VariableDeclaration","scope":4791,"src":"11060:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint","nodeType":"ElementaryTypeName","src":"11060:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4508,"mutability":"mutable","name":"_tokenAddress","nameLocation":"11121:13:26","nodeType":"VariableDeclaration","scope":4791,"src":"11114:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":4507,"nodeType":"UserDefinedTypeName","pathNode":{"id":4506,"name":"IERC20","nameLocations":["11114:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"11114:6:26"},"referencedDeclaration":827,"src":"11114:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"10963:172:26"},"returnParameters":{"id":4510,"nodeType":"ParameterList","parameters":[],"src":"11143:0:26"},"scope":6336,"src":"10940:3249:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5019,"nodeType":"Block","src":"14307:2106:26","statements":[{"assignments":[4805],"declarations":[{"constant":false,"id":4805,"mutability":"mutable","name":"myTitle","nameLocation":"14342:7:26","nodeType":"VariableDeclaration","scope":5019,"src":"14323:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":4804,"nodeType":"UserDefinedTypeName","pathNode":{"id":4803,"name":"TitlesSold","nameLocations":["14323:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"14323:10:26"},"referencedDeclaration":3914,"src":"14323:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":4811,"initialValue":{"baseExpression":{"baseExpression":{"id":4806,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"14352:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":4808,"indexExpression":{"id":4807,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"14367:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14352:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":4810,"indexExpression":{"id":4809,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"14377:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14352:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14323:66:26"},{"assignments":[4814],"declarations":[{"constant":false,"id":4814,"mutability":"mutable","name":"title","nameLocation":"14415:5:26","nodeType":"VariableDeclaration","scope":5019,"src":"14400:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":4813,"nodeType":"UserDefinedTypeName","pathNode":{"id":4812,"name":"Titles","nameLocations":["14400:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"14400:6:26"},"referencedDeclaration":3884,"src":"14400:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":4818,"initialValue":{"baseExpression":{"id":4815,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"14423:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":4817,"indexExpression":{"id":4816,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"14433:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14423:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14400:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4820,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"14461:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14469:10:26","memberName":"contractId","nodeType":"MemberAccess","referencedDeclaration":3886,"src":"14461:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4822,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"14483:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14489:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"14483:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14461:46:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e74657220612076616c696420636f6e747261637420496420666f722074686973205469746c6521","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14509:43:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_039555f46df05bfe7e1b16f020859749f437e61f0779465c7f701e3f5f09fd32","typeString":"literal_string \"Enter a valid contract Id for this Title!\""},"value":"Enter a valid contract Id for this Title!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_039555f46df05bfe7e1b16f020859749f437e61f0779465c7f701e3f5f09fd32","typeString":"literal_string \"Enter a valid contract Id for this Title!\""}],"id":4819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14453:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14453:100:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4827,"nodeType":"ExpressionStatement","src":"14453:100:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4829,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"14572:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14580:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"14572:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4831,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"14597:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14613:8:26","memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"14597:24:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"14572:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4834,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"14625:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14633:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"14625:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4836,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"14650:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14666:9:26","memberName":"Finalized","nodeType":"MemberAccess","referencedDeclaration":3852,"src":"14650:25:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"14625:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14572:103:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"796f7572207469746c6520616c72656164792068617665206265656e2066696e616c697a6564206f722063616e63656c65642e20506c6561736520636865636b20746865207374617475732e","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14677:78:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_2af457649fd7d3d4c551cd1db87f0a96b0084a78f4c7278193f315c28e845d6e","typeString":"literal_string \"your title already have been finalized or canceled. Please check the status.\""},"value":"your title already have been finalized or canceled. Please check the status."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2af457649fd7d3d4c551cd1db87f0a96b0084a78f4c7278193f315c28e845d6e","typeString":"literal_string \"your title already have been finalized or canceled. Please check the status.\""}],"id":4828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14564:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14564:192:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4842,"nodeType":"ExpressionStatement","src":"14564:192:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4846,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"14783:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14775:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4844,"name":"address","nodeType":"ElementaryTypeName","src":"14775:7:26","typeDescriptions":{}}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14775:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14809:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14801:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4848,"name":"address","nodeType":"ElementaryTypeName","src":"14801:7:26","typeDescriptions":{}}},"id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14801:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14775:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e746572206120746f6b656e2061646472657373","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14813:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c188b29eeda41fad825be723b2f825bd580ffa1ddfce95320c77f2ef62e34daa","typeString":"literal_string \"Enter a token address\""},"value":"Enter a token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c188b29eeda41fad825be723b2f825bd580ffa1ddfce95320c77f2ef62e34daa","typeString":"literal_string \"Enter a token address\""}],"id":4843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14767:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14767:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4855,"nodeType":"ExpressionStatement","src":"14767:70:26"},{"assignments":[null,null,4857],"declarations":[null,null,{"constant":false,"id":4857,"mutability":"mutable","name":"isStable","nameLocation":"14860:8:26","nodeType":"VariableDeclaration","scope":5019,"src":"14855:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4856,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4862,"initialValue":{"arguments":[{"id":4860,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"14904:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"expression":{"id":4858,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"14872:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14878:25:26","memberName":"returnAvailableStablecoin","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"14872:31:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$827_$returns$_t_string_memory_ptr_$_t_contract$_IERC20_$827_$_t_bool_$","typeString":"function (contract IERC20) external returns (string memory,contract IERC20,bool)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14872:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_contract$_IERC20_$827_$_t_bool_$","typeString":"tuple(string memory,contract IERC20,bool)"}},"nodeType":"VariableDeclarationStatement","src":"14850:68:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4864,"name":"isStable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"14939:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14951:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14939:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616c6c6f77656421","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14958:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_1896fd8fe501815b27860b1bd1ae5a48eaad2356794645cd1b32edf596424225","typeString":"literal_string \"Token not allowed!\""},"value":"Token not allowed!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1896fd8fe501815b27860b1bd1ae5a48eaad2356794645cd1b32edf596424225","typeString":"literal_string \"Token not allowed!\""}],"id":4863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14931:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14931:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4869,"nodeType":"ExpressionStatement","src":"14931:48:26"},{"expression":{"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"14992:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4871,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"15005:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"src":"14992:26:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":4873,"nodeType":"ExpressionStatement","src":"14992:26:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"_amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"15039:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4876,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"15055:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15063:12:26","memberName":"monthlyValue","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"15055:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15039:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57726f6e672076616c75652121","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15077:15:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ae176f53a20241215d127de56d3645bd7784536ee80110ea14d80a6f88763a8","typeString":"literal_string \"Wrong value!!\""},"value":"Wrong value!!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ae176f53a20241215d127de56d3645bd7784536ee80110ea14d80a6f88763a8","typeString":"literal_string \"Wrong value!!\""}],"id":4874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15031:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15031:62:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4881,"nodeType":"ExpressionStatement","src":"15031:62:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15204:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15208:6:26","memberName":"sender","nodeType":"MemberAccess","src":"15204:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4883,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"15183:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15194:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":784,"src":"15183:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15183:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4888,"name":"_amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"15218:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15183:47:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15232:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15175:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:80:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4892,"nodeType":"ExpressionStatement","src":"15175:80:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4896,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15392:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15396:6:26","memberName":"sender","nodeType":"MemberAccess","src":"15392:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4900,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15412:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}],"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15404:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4898,"name":"address","nodeType":"ElementaryTypeName","src":"15404:7:26","typeDescriptions":{}}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15404:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4894,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"15371:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15382:9:26","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":804,"src":"15371:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15371:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4903,"name":"_amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"15422:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15371:63:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206d75737420617070726f76652074686520636f6e747261637420746f207472616e736665722074686520746f6b656e73","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15436:54:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_accea1150d28f55306facb579d88e27033e028b0e5f559661909c21c8aad28f3","typeString":"literal_string \"You must approve the contract to transfer the tokens\""},"value":"You must approve the contract to transfer the tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_accea1150d28f55306facb579d88e27033e028b0e5f559661909c21c8aad28f3","typeString":"literal_string \"You must approve the contract to transfer the tokens\""}],"id":4893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15363:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15363:128:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4907,"nodeType":"ExpressionStatement","src":"15363:128:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4908,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"15507:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":4909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15515:12:26","memberName":"periodLocked","nodeType":"MemberAccess","referencedDeclaration":3894,"src":"15507:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15531:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15507:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5012,"nodeType":"Block","src":"15857:510:26","statements":[{"expression":{"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4952,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15872:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15878:18:26","memberName":"totalValueReceived","nodeType":"MemberAccess","referencedDeclaration":3876,"src":"15872:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4955,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15899:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15905:18:26","memberName":"totalValueReceived","nodeType":"MemberAccess","referencedDeclaration":3876,"src":"15899:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4957,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15926:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15932:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"15926:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15899:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15872:78:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4961,"nodeType":"ExpressionStatement","src":"15872:78:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4962,"name":"_amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"15970:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4963,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15985:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15991:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"15985:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15970:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16012:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15970:43:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5010,"nodeType":"Block","src":"16257:99:26","statements":[{"expression":{"arguments":[{"expression":{"id":5001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16300:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16304:6:26","memberName":"sender","nodeType":"MemberAccess","src":"16300:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5005,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16320:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}],"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16312:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5003,"name":"address","nodeType":"ElementaryTypeName","src":"16312:7:26","typeDescriptions":{}}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16312:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5007,"name":"_amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"16327:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4998,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"16276:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16287:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":826,"src":"16276:23:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16276:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5009,"nodeType":"ExpressionStatement","src":"16276:64:26"}]},"id":5011,"nodeType":"IfStatement","src":"15967:389:26","trueBody":{"id":4997,"nodeType":"Block","src":"16014:238:26","statements":[{"expression":{"arguments":[{"expression":{"id":4971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16071:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16075:6:26","memberName":"sender","nodeType":"MemberAccess","src":"16071:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16091:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}],"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16083:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4973,"name":"address","nodeType":"ElementaryTypeName","src":"16083:7:26","typeDescriptions":{}}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16083:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4977,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"16098:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16104:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"16098:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4968,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"16047:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16058:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":826,"src":"16047:23:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16047:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4980,"nodeType":"ExpressionStatement","src":"16047:76:26"},{"expression":{"arguments":[{"expression":{"id":4984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16166:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16170:6:26","memberName":"sender","nodeType":"MemberAccess","src":"16166:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4988,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"16186:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}],"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16178:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4986,"name":"address","nodeType":"ElementaryTypeName","src":"16178:7:26","typeDescriptions":{}}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16178:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4990,"name":"_amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"16195:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4991,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"16210:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16216:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"16210:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16195:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16194:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4981,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"16142:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16153:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":826,"src":"16142:23:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16142:94:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4996,"nodeType":"ExpressionStatement","src":"16142:94:26"}]}}]},"id":5013,"nodeType":"IfStatement","src":"15504:863:26","trueBody":{"id":4951,"nodeType":"Block","src":"15533:319:26","statements":[{"expression":{"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4912,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15548:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15554:18:26","memberName":"totalValueReceived","nodeType":"MemberAccess","referencedDeclaration":3876,"src":"15548:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4915,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15575:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15581:18:26","memberName":"totalValueReceived","nodeType":"MemberAccess","referencedDeclaration":3876,"src":"15575:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4917,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15602:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15608:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"15602:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15575:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15548:78:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4921,"nodeType":"ExpressionStatement","src":"15548:78:26"},{"expression":{"arguments":[{"expression":{"id":4925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15679:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15683:6:26","memberName":"sender","nodeType":"MemberAccess","src":"15679:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4929,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15699:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}],"id":4928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15691:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4927,"name":"address","nodeType":"ElementaryTypeName","src":"15691:7:26","typeDescriptions":{}}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15691:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4931,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15706:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15712:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"15706:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4922,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"15655:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15666:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":826,"src":"15655:23:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15655:76:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4934,"nodeType":"ExpressionStatement","src":"15655:76:26"},{"expression":{"arguments":[{"expression":{"id":4938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15770:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15774:6:26","memberName":"sender","nodeType":"MemberAccess","src":"15770:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4942,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"15790:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}],"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15782:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4940,"name":"address","nodeType":"ElementaryTypeName","src":"15782:7:26","typeDescriptions":{}}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15782:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"_amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"15799:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4945,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"15814:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":4946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15820:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"15814:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15799:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15798:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4935,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"15746:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15757:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":826,"src":"15746:23:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15746:94:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4950,"nodeType":"ExpressionStatement","src":"15746:94:26"}]}},{"expression":{"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16379:26:26","subExpression":{"expression":{"id":5014,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"16379:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16387:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"16379:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5018,"nodeType":"ExpressionStatement","src":"16379:26:26"}]},"id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"receiveInstallment","nameLocation":"14206:18:26","nodeType":"FunctionDefinition","parameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4793,"mutability":"mutable","name":"_idTitle","nameLocation":"14230:8:26","nodeType":"VariableDeclaration","scope":5020,"src":"14225:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint","nodeType":"ElementaryTypeName","src":"14225:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4795,"mutability":"mutable","name":"_contractId","nameLocation":"14245:11:26","nodeType":"VariableDeclaration","scope":5020,"src":"14240:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint","nodeType":"ElementaryTypeName","src":"14240:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"_amountToPay","nameLocation":"14263:12:26","nodeType":"VariableDeclaration","scope":5020,"src":"14258:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint","nodeType":"ElementaryTypeName","src":"14258:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"_tokenAddress","nameLocation":"14284:13:26","nodeType":"VariableDeclaration","scope":5020,"src":"14277:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":4799,"nodeType":"UserDefinedTypeName","pathNode":{"id":4798,"name":"IERC20","nameLocations":["14277:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"14277:6:26"},"referencedDeclaration":827,"src":"14277:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"14224:74:26"},"returnParameters":{"id":4802,"nodeType":"ParameterList","parameters":[],"src":"14307:0:26"},"scope":6336,"src":"14197:2216:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5081,"nodeType":"Block","src":"16495:550:26","statements":[{"assignments":[5029],"declarations":[{"constant":false,"id":5029,"mutability":"mutable","name":"titles","nameLocation":"16526:6:26","nodeType":"VariableDeclaration","scope":5081,"src":"16511:21:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":5028,"nodeType":"UserDefinedTypeName","pathNode":{"id":5027,"name":"Titles","nameLocations":["16511:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"16511:6:26"},"referencedDeclaration":3884,"src":"16511:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":5033,"initialValue":{"baseExpression":{"id":5030,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"16535:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":5032,"indexExpression":{"id":5031,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"16545:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16535:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16511:43:26"},{"assignments":[5036],"declarations":[{"constant":false,"id":5036,"mutability":"mutable","name":"myTitle","nameLocation":"16584:7:26","nodeType":"VariableDeclaration","scope":5081,"src":"16565:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5035,"nodeType":"UserDefinedTypeName","pathNode":{"id":5034,"name":"TitlesSold","nameLocations":["16565:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"16565:10:26"},"referencedDeclaration":3914,"src":"16565:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5042,"initialValue":{"baseExpression":{"baseExpression":{"id":5037,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"16594:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5039,"indexExpression":{"id":5038,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"16609:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16594:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5041,"indexExpression":{"id":5040,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"16619:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16594:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16565:66:26"},{"assignments":[5044],"declarations":[{"constant":false,"id":5044,"mutability":"mutable","name":"valueAlreadyPaid","nameLocation":"16649:16:26","nodeType":"VariableDeclaration","scope":5081,"src":"16644:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5043,"name":"uint","nodeType":"ElementaryTypeName","src":"16644:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5051,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5045,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"16669:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16677:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"16669:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5047,"name":"titles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"16696:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5048,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16703:18:26","memberName":"monthlyInvestiment","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"16696:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16669:52:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16668:54:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16644:78:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5052,"name":"valueAlreadyPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"16738:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":5053,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"16758:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16766:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"16758:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16738:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5072,"nodeType":"Block","src":"16842:97:26","statements":[{"expression":{"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5063,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"16857:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16865:22:26","memberName":"valueOfEnsuranceNeeded","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"16857:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5066,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"16890:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16898:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"16890:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5068,"name":"valueAlreadyPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"16911:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16890:37:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16857:70:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5071,"nodeType":"ExpressionStatement","src":"16857:70:26"}]},"id":5073,"nodeType":"IfStatement","src":"16735:204:26","trueBody":{"id":5062,"nodeType":"Block","src":"16777:61:26","statements":[{"expression":{"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5056,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"16792:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16800:22:26","memberName":"valueOfEnsuranceNeeded","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"16792:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16825:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16792:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5061,"nodeType":"ExpressionStatement","src":"16792:34:26"}]}},{"eventCall":{"arguments":[{"id":5075,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"16983:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5076,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"16993:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5077,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"17006:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17014:22:26","memberName":"valueOfEnsuranceNeeded","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"17006:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5074,"name":"EnsuranceValueNeededUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"16956:26:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16956:81:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5080,"nodeType":"EmitStatement","src":"16951:86:26"}]},"id":5082,"implemented":true,"kind":"function","modifiers":[],"name":"updateValueOfEnsurance","nameLocation":"16430:22:26","nodeType":"FunctionDefinition","parameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"_idTitle","nameLocation":"16458:8:26","nodeType":"VariableDeclaration","scope":5082,"src":"16453:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5021,"name":"uint","nodeType":"ElementaryTypeName","src":"16453:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5024,"mutability":"mutable","name":"_contractId","nameLocation":"16473:11:26","nodeType":"VariableDeclaration","scope":5082,"src":"16468:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint","nodeType":"ElementaryTypeName","src":"16468:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16452:33:26"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[],"src":"16495:0:26"},"scope":6336,"src":"16421:624:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5181,"nodeType":"Block","src":"17101:1059:26","statements":[{"assignments":[5089],"declarations":[{"constant":false,"id":5089,"mutability":"mutable","name":"title","nameLocation":"17132:5:26","nodeType":"VariableDeclaration","scope":5181,"src":"17117:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":5088,"nodeType":"UserDefinedTypeName","pathNode":{"id":5087,"name":"Titles","nameLocations":["17117:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"17117:6:26"},"referencedDeclaration":3884,"src":"17117:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":5093,"initialValue":{"baseExpression":{"id":5090,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"17140:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":5092,"indexExpression":{"id":5091,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"17150:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17140:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17117:42:26"},{"assignments":[5095],"declarations":[{"constant":false,"id":5095,"mutability":"mutable","name":"thisDrawDate","nameLocation":"17177:12:26","nodeType":"VariableDeclaration","scope":5181,"src":"17172:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint","nodeType":"ElementaryTypeName","src":"17172:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5103,"initialValue":{"arguments":[{"expression":{"id":5098,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"17213:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17219:15:26","memberName":"paymentSchedule","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"17213:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5100,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"17236:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17242:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"17236:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5096,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"17192:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17198:14:26","memberName":"returnDrawDate","nodeType":"MemberAccess","referencedDeclaration":7715,"src":"17192:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view external returns (uint256)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17192:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17172:85:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5105,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17278:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17284:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"17278:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5107,"name":"thisDrawDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"17296:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17278:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49736e2774207468652074696d652079657421","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17310:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_5295e374fa48625d2364519bbb4653999f75831f64b687f6fe496d5cd788fd94","typeString":"literal_string \"Isn't the time yet!\""},"value":"Isn't the time yet!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5295e374fa48625d2364519bbb4653999f75831f64b687f6fe496d5cd788fd94","typeString":"literal_string \"Isn't the time yet!\""}],"id":5104,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17270:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17270:62:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5111,"nodeType":"ExpressionStatement","src":"17270:62:26"},{"assignments":[5113],"declarations":[{"constant":false,"id":5113,"mutability":"mutable","name":"nextDrawParticipants","nameLocation":"17350:20:26","nodeType":"VariableDeclaration","scope":5181,"src":"17345:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint","nodeType":"ElementaryTypeName","src":"17345:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5121,"initialValue":{"arguments":[{"expression":{"id":5116,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"17402:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17408:15:26","memberName":"paymentSchedule","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"17402:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5118,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"17425:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17431:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"17425:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5114,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"17373:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17379:22:26","memberName":"returnDrawParticipants","nodeType":"MemberAccess","referencedDeclaration":7737,"src":"17373:28:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view external returns (uint256)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17373:73:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17345:101:26"},{"assignments":[5123],"declarations":[{"constant":false,"id":5123,"mutability":"mutable","name":"requestId","nameLocation":"17467:9:26","nodeType":"VariableDeclaration","scope":5181,"src":"17459:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"17459:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5131,"initialValue":{"arguments":[{"id":5126,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"17512:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5127,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"17522:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17528:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"17522:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5129,"name":"nextDrawParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"17544:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5124,"name":"vrfv2consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"17479:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonVRF_$8040","typeString":"contract HorizonVRF"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17493:18:26","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":7945,"src":"17479:32:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) external returns (uint256)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17479:86:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17459:106:26"},{"expression":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5132,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"17578:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17584:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"17578:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5135,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"17593:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17605:7:26","memberName":"Waiting","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"17593:19:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"17578:34:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"id":5138,"nodeType":"ExpressionStatement","src":"17578:34:26"},{"assignments":[5141],"declarations":[{"constant":false,"id":5141,"mutability":"mutable","name":"draw","nameLocation":"17637:4:26","nodeType":"VariableDeclaration","scope":5181,"src":"17625:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_memory_ptr","typeString":"struct Horizon.Draw"},"typeName":{"id":5140,"nodeType":"UserDefinedTypeName","pathNode":{"id":5139,"name":"Draw","nameLocations":["17625:4:26"],"nodeType":"IdentifierPath","referencedDeclaration":3950,"src":"17625:4:26"},"referencedDeclaration":3950,"src":"17625:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw"}},"visibility":"internal"}],"id":5157,"initialValue":{"arguments":[{"id":5143,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"17673:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5144,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"17708:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17714:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"17708:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5146,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"17753:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17759:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"17753:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5148,"name":"nextDrawParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"17802:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5149,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"17848:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17889:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17925:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17957:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17949:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5152,"name":"address","nodeType":"ElementaryTypeName","src":"17949:7:26","typeDescriptions":{}}},"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17949:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5142,"name":"Draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"17644:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Draw_$3950_storage_ptr_$","typeString":"type(struct Horizon.Draw storage pointer)"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["17664:7:26","17696:10:26","17743:8:26","17783:17:26","17837:9:26","17872:15:26","17905:18:26","17941:6:26"],"names":["idTitle","drawNumber","drawDate","totalParticipants","requestId","randomNumberVRF","selectedContractID","winner"],"nodeType":"FunctionCall","src":"17644:327:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_memory_ptr","typeString":"struct Horizon.Draw memory"}},"nodeType":"VariableDeclarationStatement","src":"17625:346:26"},{"expression":{"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5158,"name":"drawInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"17984:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Draw_$3950_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.Draw storage ref))"}},"id":5162,"indexExpression":{"id":5159,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"17994:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17984:19:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Draw_$3950_storage_$","typeString":"mapping(uint256 => struct Horizon.Draw storage ref)"}},"id":5163,"indexExpression":{"expression":{"id":5160,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"18004:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18010:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"18004:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17984:41:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage","typeString":"struct Horizon.Draw storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5164,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"18028:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_memory_ptr","typeString":"struct Horizon.Draw memory"}},"src":"17984:48:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage","typeString":"struct Horizon.Draw storage ref"}},"id":5166,"nodeType":"ExpressionStatement","src":"17984:48:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5167,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"18048:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18054:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"18048:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":5169,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"18071:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18077:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"18071:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18048:41:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5180,"nodeType":"IfStatement","src":"18045:108:26","trueBody":{"id":5179,"nodeType":"Block","src":"18090:63:26","statements":[{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5172,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"18105:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18111:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"18105:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5175,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"18120:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18132:9:26","memberName":"Finalized","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"18120:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"18105:36:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"id":5178,"nodeType":"ExpressionStatement","src":"18105:36:26"}]}}]},"functionSelector":"9beaf731","id":5182,"implemented":true,"kind":"function","modifiers":[],"name":"monthlyVRFWinner","nameLocation":"17062:16:26","nodeType":"FunctionDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"_idTitle","nameLocation":"17084:8:26","nodeType":"VariableDeclaration","scope":5182,"src":"17079:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint","nodeType":"ElementaryTypeName","src":"17079:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17078:15:26"},"returnParameters":{"id":5086,"nodeType":"ParameterList","parameters":[],"src":"17101:0:26"},"scope":6336,"src":"17053:1107:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5306,"nodeType":"Block","src":"18224:1070:26","statements":[{"assignments":[5189],"declarations":[{"constant":false,"id":5189,"mutability":"mutable","name":"title","nameLocation":"18255:5:26","nodeType":"VariableDeclaration","scope":5306,"src":"18240:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":5188,"nodeType":"UserDefinedTypeName","pathNode":{"id":5187,"name":"Titles","nameLocations":["18240:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"18240:6:26"},"referencedDeclaration":3884,"src":"18240:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":5193,"initialValue":{"baseExpression":{"id":5190,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"18263:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":5192,"indexExpression":{"id":5191,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"18273:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18263:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18240:42:26"},{"assignments":[5196],"declarations":[{"constant":false,"id":5196,"mutability":"mutable","name":"draw","nameLocation":"18306:4:26","nodeType":"VariableDeclaration","scope":5306,"src":"18293:17:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw"},"typeName":{"id":5195,"nodeType":"UserDefinedTypeName","pathNode":{"id":5194,"name":"Draw","nameLocations":["18293:4:26"],"nodeType":"IdentifierPath","referencedDeclaration":3950,"src":"18293:4:26"},"referencedDeclaration":3950,"src":"18293:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw"}},"visibility":"internal"}],"id":5203,"initialValue":{"baseExpression":{"baseExpression":{"id":5197,"name":"drawInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"18313:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Draw_$3950_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.Draw storage ref))"}},"id":5199,"indexExpression":{"id":5198,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"18323:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18313:19:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Draw_$3950_storage_$","typeString":"mapping(uint256 => struct Horizon.Draw storage ref)"}},"id":5202,"indexExpression":{"expression":{"id":5200,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"18333:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18339:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"18333:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18313:41:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage","typeString":"struct Horizon.Draw storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18293:61:26"},{"assignments":[5205,5208,5210],"declarations":[{"constant":false,"id":5205,"mutability":"mutable","name":"fulfilled","nameLocation":"18373:9:26","nodeType":"VariableDeclaration","scope":5306,"src":"18368:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5204,"name":"bool","nodeType":"ElementaryTypeName","src":"18368:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5208,"mutability":"mutable","name":"randomWords","nameLocation":"18401:11:26","nodeType":"VariableDeclaration","scope":5306,"src":"18384:28:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"18384:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5207,"nodeType":"ArrayTypeName","src":"18384:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5210,"mutability":"mutable","name":"randomValue","nameLocation":"18422:11:26","nodeType":"VariableDeclaration","scope":5306,"src":"18414:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5209,"name":"uint256","nodeType":"ElementaryTypeName","src":"18414:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5216,"initialValue":{"arguments":[{"expression":{"id":5213,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"18468:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw storage pointer"}},"id":5214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18473:9:26","memberName":"requestId","nodeType":"MemberAccess","referencedDeclaration":3943,"src":"18468:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5211,"name":"vrfv2consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"18437:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonVRF_$8040","typeString":"contract HorizonVRF"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18451:16:26","memberName":"getRequestStatus","nodeType":"MemberAccess","referencedDeclaration":8039,"src":"18437:30:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (uint256) view external returns (bool,uint256[] memory,uint256)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18437:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(bool,uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"18367:116:26"},{"expression":{"arguments":[{"id":5218,"name":"fulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"18504:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5652462072657175657374206e6f742066756c66696c6c6564","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18515:27:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_1de70efb3de6b1b4cf4cfaeb97c9dfff7bc96b63ae33d66b5956ea79f15bef50","typeString":"literal_string \"VRF request not fulfilled\""},"value":"VRF request not fulfilled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1de70efb3de6b1b4cf4cfaeb97c9dfff7bc96b63ae33d66b5956ea79f15bef50","typeString":"literal_string \"VRF request not fulfilled\""}],"id":5217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18496:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18496:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5221,"nodeType":"ExpressionStatement","src":"18496:47:26"},{"eventCall":{"arguments":[{"id":5223,"name":"fulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"18579:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5224,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"18590:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5225,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"18603:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5222,"name":"VRFAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"18569:9:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bool,uint256[] memory,uint256)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18569:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5227,"nodeType":"EmitStatement","src":"18564:51:26"},{"assignments":[5230],"declarations":[{"constant":false,"id":5230,"mutability":"mutable","name":"winningTicket","nameLocation":"18648:13:26","nodeType":"VariableDeclaration","scope":5306,"src":"18628:33:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord"},"typeName":{"id":5229,"nodeType":"UserDefinedTypeName","pathNode":{"id":5228,"name":"TitleRecord","nameLocations":["18628:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":3933,"src":"18628:11:26"},"referencedDeclaration":3933,"src":"18628:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord"}},"visibility":"internal"}],"id":5239,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":5231,"name":"selectorVRF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"18664:11:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$_$_$","typeString":"mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord storage ref)))"}},"id":5233,"indexExpression":{"id":5232,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"18676:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18664:21:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord storage ref))"}},"id":5236,"indexExpression":{"expression":{"id":5234,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"18686:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw storage pointer"}},"id":5235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18691:10:26","memberName":"drawNumber","nodeType":"MemberAccess","referencedDeclaration":3937,"src":"18686:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18664:38:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitleRecord_$3933_storage_$","typeString":"mapping(uint256 => struct Horizon.TitleRecord storage ref)"}},"id":5238,"indexExpression":{"id":5237,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"18703:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18664:51:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage","typeString":"struct Horizon.TitleRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18628:87:26"},{"expression":{"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5240,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"18728:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw storage pointer"}},"id":5242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18733:15:26","memberName":"randomNumberVRF","nodeType":"MemberAccess","referencedDeclaration":3945,"src":"18728:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5243,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"18751:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18728:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5245,"nodeType":"ExpressionStatement","src":"18728:34:26"},{"expression":{"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5246,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"18773:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw storage pointer"}},"id":5248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18778:18:26","memberName":"selectedContractID","nodeType":"MemberAccess","referencedDeclaration":3947,"src":"18773:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5249,"name":"winningTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"18799:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord storage pointer"}},"id":5250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18813:10:26","memberName":"contractId","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"18799:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18773:50:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5252,"nodeType":"ExpressionStatement","src":"18773:50:26"},{"expression":{"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5253,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"18834:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw storage pointer"}},"id":5255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18839:6:26","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":3949,"src":"18834:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5256,"name":"winningTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"18848:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord storage pointer"}},"id":5257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18862:4:26","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"18848:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18834:32:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5259,"nodeType":"ExpressionStatement","src":"18834:32:26"},{"assignments":[5262],"declarations":[{"constant":false,"id":5262,"mutability":"mutable","name":"myTitle","nameLocation":"18898:7:26","nodeType":"VariableDeclaration","scope":5306,"src":"18879:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5261,"nodeType":"UserDefinedTypeName","pathNode":{"id":5260,"name":"TitlesSold","nameLocations":["18879:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"18879:10:26"},"referencedDeclaration":3914,"src":"18879:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5269,"initialValue":{"baseExpression":{"baseExpression":{"id":5263,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"18908:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5265,"indexExpression":{"id":5264,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"18923:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18908:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5268,"indexExpression":{"expression":{"id":5266,"name":"winningTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"18933:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord storage pointer"}},"id":5267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18947:10:26","memberName":"contractId","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"18933:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18908:50:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18879:79:26"},{"expression":{"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5270,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"18971:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18979:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"18971:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5273,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"18994:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw storage pointer"}},"id":5274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18999:10:26","memberName":"drawNumber","nodeType":"MemberAccess","referencedDeclaration":3937,"src":"18994:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18971:38:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5276,"nodeType":"ExpressionStatement","src":"18971:38:26"},{"expression":{"arguments":[{"id":5278,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"19045:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5279,"name":"winningTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"19055:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord storage pointer"}},"id":5280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19069:10:26","memberName":"contractId","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"19055:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5277,"name":"updateValueOfEnsurance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"19022:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19022:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5282,"nodeType":"ExpressionStatement","src":"19022:58:26"},{"expression":{"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5283,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"19093:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19099:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"19093:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5286,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"19108:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19120:6:26","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":3840,"src":"19108:18:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"19093:33:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"id":5289,"nodeType":"ExpressionStatement","src":"19093:33:26"},{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19139:22:26","subExpression":{"expression":{"id":5290,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"19139:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19145:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"19139:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5294,"nodeType":"ExpressionStatement","src":"19139:22:26"},{"eventCall":{"arguments":[{"id":5296,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"19201:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5297,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"19211:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Draw_$3950_storage_ptr","typeString":"struct Horizon.Draw storage pointer"}},"id":5298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19216:10:26","memberName":"drawNumber","nodeType":"MemberAccess","referencedDeclaration":3937,"src":"19211:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5299,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"19228:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5300,"name":"winningTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"19241:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord storage pointer"}},"id":5301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19255:10:26","memberName":"contractId","nodeType":"MemberAccess","referencedDeclaration":3916,"src":"19241:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5302,"name":"winningTicket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"19267:13:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitleRecord_$3933_storage_ptr","typeString":"struct Horizon.TitleRecord storage pointer"}},"id":5303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19281:4:26","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":3924,"src":"19267:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5295,"name":"MonthlyWinnerSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"19179:21:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,address)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19179:107:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5305,"nodeType":"EmitStatement","src":"19174:112:26"}]},"functionSelector":"d0ade9d5","id":5307,"implemented":true,"kind":"function","modifiers":[],"name":"receiveVRFRandomNumber","nameLocation":"18177:22:26","nodeType":"FunctionDefinition","parameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"_idTitle","nameLocation":"18208:8:26","nodeType":"VariableDeclaration","scope":5307,"src":"18200:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5183,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:18:26"},"returnParameters":{"id":5186,"nodeType":"ParameterList","parameters":[],"src":"18224:0:26"},"scope":6336,"src":"18168:1126:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5441,"nodeType":"Block","src":"19425:1600:26","statements":[{"assignments":[5320],"declarations":[{"constant":false,"id":5320,"mutability":"mutable","name":"myColateralTitle","nameLocation":"19460:16:26","nodeType":"VariableDeclaration","scope":5441,"src":"19441:35:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5319,"nodeType":"UserDefinedTypeName","pathNode":{"id":5318,"name":"TitlesSold","nameLocations":["19441:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"19441:10:26"},"referencedDeclaration":3914,"src":"19441:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5326,"initialValue":{"baseExpression":{"baseExpression":{"id":5321,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"19479:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5323,"indexExpression":{"id":5322,"name":"_idOfColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"19494:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19479:35:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5325,"indexExpression":{"id":5324,"name":"_idOfColateralContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"19515:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19479:59:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19441:97:26"},{"assignments":[5329],"declarations":[{"constant":false,"id":5329,"mutability":"mutable","name":"myTitle","nameLocation":"19568:7:26","nodeType":"VariableDeclaration","scope":5441,"src":"19549:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5328,"nodeType":"UserDefinedTypeName","pathNode":{"id":5327,"name":"TitlesSold","nameLocations":["19549:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"19549:10:26"},"referencedDeclaration":3914,"src":"19549:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5335,"initialValue":{"baseExpression":{"baseExpression":{"id":5330,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"19578:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5332,"indexExpression":{"id":5331,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"19593:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19578:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5334,"indexExpression":{"id":5333,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"19603:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19578:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19549:66:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5337,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"19637:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19645:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"19637:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19661:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19637:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520686176656e2774206265656e2073656c65637465642079657421","id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19664:32:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b6d0d1ef61f2baf613e8b06733fe61bf5e9d4ffca08b51a7da7841447c7afe2","typeString":"literal_string \"You haven't been selected yet!\""},"value":"You haven't been selected yet!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b6d0d1ef61f2baf613e8b06733fe61bf5e9d4ffca08b51a7da7841447c7afe2","typeString":"literal_string \"You haven't been selected yet!\""}],"id":5336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19629:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19629:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5343,"nodeType":"ExpressionStatement","src":"19629:68:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5345,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"19716:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19724:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"19716:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5347,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19738:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19742:6:26","memberName":"sender","nodeType":"MemberAccess","src":"19738:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19716:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865206f776e65722063616e20616464206120636f6c61746572616c21","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19750:37:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6db8567f9a728e41d817d33ce9250870ac06f3691a19274ccc4f00708b08239c","typeString":"literal_string \"Only the owner can add a colateral!\""},"value":"Only the owner can add a colateral!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6db8567f9a728e41d817d33ce9250870ac06f3691a19274ccc4f00708b08239c","typeString":"literal_string \"Only the owner can add a colateral!\""}],"id":5344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19708:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19708:80:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5352,"nodeType":"ExpressionStatement","src":"19708:80:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5354,"name":"myColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"19807:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19824:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"19807:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19838:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19842:6:26","memberName":"sender","nodeType":"MemberAccess","src":"19838:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19807:41:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865206f776e65722063616e20616464206120636f6c61746572616c21","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19850:37:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6db8567f9a728e41d817d33ce9250870ac06f3691a19274ccc4f00708b08239c","typeString":"literal_string \"Only the owner can add a colateral!\""},"value":"Only the owner can add a colateral!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6db8567f9a728e41d817d33ce9250870ac06f3691a19274ccc4f00708b08239c","typeString":"literal_string \"Only the owner can add a colateral!\""}],"id":5353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19799:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19799:89:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5361,"nodeType":"ExpressionStatement","src":"19799:89:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5363,"name":"myColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"19907:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19924:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"19907:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":5365,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"19938:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19946:22:26","memberName":"valueOfEnsuranceNeeded","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"19938:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19907:61:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520636f6c61746572616c20746f74616c2076616c7565206d7573742062652067726561746572207468616e2074756520656e737572616e636556616c75654e6565646564","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19970:73:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_5708503ec952acb7254001b23f34d30b88c0d420da71e7e3e058992cc83bf5d0","typeString":"literal_string \"The colateral total value must be greater than tue ensuranceValueNeeded\""},"value":"The colateral total value must be greater than tue ensuranceValueNeeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5708503ec952acb7254001b23f34d30b88c0d420da71e7e3e058992cc83bf5d0","typeString":"literal_string \"The colateral total value must be greater than tue ensuranceValueNeeded\""}],"id":5362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19899:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19899:145:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5370,"nodeType":"ExpressionStatement","src":"19899:145:26"},{"assignments":[5372],"declarations":[{"constant":false,"id":5372,"mutability":"mutable","name":"colateralValuePaid","nameLocation":"20070:18:26","nodeType":"VariableDeclaration","scope":5441,"src":"20065:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5371,"name":"uint","nodeType":"ElementaryTypeName","src":"20065:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5378,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5373,"name":"myColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"20091:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20108:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"20091:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5375,"name":"myColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"20127:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20144:12:26","memberName":"monthlyValue","nodeType":"MemberAccess","referencedDeclaration":3892,"src":"20127:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20091:65:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20065:91:26"},{"assignments":[5380],"declarations":[{"constant":false,"id":5380,"mutability":"mutable","name":"ensuranceNeeded","nameLocation":"20172:15:26","nodeType":"VariableDeclaration","scope":5441,"src":"20167:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint","nodeType":"ElementaryTypeName","src":"20167:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5385,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5381,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"20190:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20198:22:26","memberName":"valueOfEnsuranceNeeded","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"20190:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20223:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"20190:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20167:57:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5387,"name":"myColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"20245:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20262:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"20245:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5389,"name":"colateralValuePaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"20276:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20245:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"colateralValuePaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"20298:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5392,"name":"ensuranceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"20320:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20298:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20245:90:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c2074686520696e7374616c6c6d656e74732066726f6d2074686520636f6c61746572616c206d7573742068617665206265656e2070616964206f72206174206c65617374207468652076616c75652070616964206d7573742062652067726561746572207468656e2074776f2074696d65732074686520656e7375726556616c75654e6565646564","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20337:141:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccc8e8b69a1cb8d4a602b9f4d27f11acb369fbf8ccbefc597c44dac93afb6900","typeString":"literal_string \"All the installments from the colateral must have been paid or at least the value paid must be greater then two times the ensureValueNeeded\""},"value":"All the installments from the colateral must have been paid or at least the value paid must be greater then two times the ensureValueNeeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccc8e8b69a1cb8d4a602b9f4d27f11acb369fbf8ccbefc597c44dac93afb6900","typeString":"literal_string \"All the installments from the colateral must have been paid or at least the value paid must be greater then two times the ensureValueNeeded\""}],"id":5386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20237:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20237:242:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5397,"nodeType":"ExpressionStatement","src":"20237:242:26"},{"expression":{"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5398,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"20492:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20500:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"20492:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5401,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"20516:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20532:8:26","memberName":"Withdraw","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"20516:24:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"20492:48:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"id":5404,"nodeType":"ExpressionStatement","src":"20492:48:26"},{"assignments":[5407],"declarations":[{"constant":false,"id":5407,"mutability":"mutable","name":"colateral","nameLocation":"20576:9:26","nodeType":"VariableDeclaration","scope":5441,"src":"20553:32:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_memory_ptr","typeString":"struct Horizon.ColateralTitles"},"typeName":{"id":5406,"nodeType":"UserDefinedTypeName","pathNode":{"id":5405,"name":"ColateralTitles","nameLocations":["20553:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3957,"src":"20553:15:26"},"referencedDeclaration":3957,"src":"20553:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage_ptr","typeString":"struct Horizon.ColateralTitles"}},"visibility":"internal"}],"id":5414,"initialValue":{"arguments":[{"expression":{"id":5409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20636:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20640:6:26","memberName":"sender","nodeType":"MemberAccess","src":"20636:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5411,"name":"_idOfColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"20681:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5412,"name":"_idOfColateralContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"20738:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5408,"name":"ColateralTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"20588:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ColateralTitles_$3957_storage_ptr_$","typeString":"type(struct Horizon.ColateralTitles storage pointer)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["20620:14:26","20661:18:26","20715:21:26"],"names":["colateralOwner","titleIdOfColateral","contractIdOfColateral"],"nodeType":"FunctionCall","src":"20588:184:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_memory_ptr","typeString":"struct Horizon.ColateralTitles memory"}},"nodeType":"VariableDeclarationStatement","src":"20553:219:26"},{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5415,"name":"colateralInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"20785:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.ColateralTitles storage ref))"}},"id":5418,"indexExpression":{"id":5416,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"20800:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20785:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$","typeString":"mapping(uint256 => struct Horizon.ColateralTitles storage ref)"}},"id":5419,"indexExpression":{"id":5417,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"20810:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20785:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage","typeString":"struct Horizon.ColateralTitles storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5420,"name":"colateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"20825:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_memory_ptr","typeString":"struct Horizon.ColateralTitles memory"}},"src":"20785:49:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage","typeString":"struct Horizon.ColateralTitles storage ref"}},"id":5422,"nodeType":"ExpressionStatement","src":"20785:49:26"},{"expression":{"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5423,"name":"myColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"20847:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20864:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"20847:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5428,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20885:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}],"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20877:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5426,"name":"address","nodeType":"ElementaryTypeName","src":"20877:7:26","typeDescriptions":{}}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20877:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20847:43:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5431,"nodeType":"ExpressionStatement","src":"20847:43:26"},{"eventCall":{"arguments":[{"id":5433,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"20928:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5434,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"20938:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5435,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"20951:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20959:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"20951:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5437,"name":"_idOfColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"20973:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5438,"name":"_idOfColateralContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"20994:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5432,"name":"ColateralTitleAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"20908:19:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,uint256)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20908:109:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5440,"nodeType":"EmitStatement","src":"20903:114:26"}]},"functionSelector":"2d7c0b7f","id":5442,"implemented":true,"kind":"function","modifiers":[],"name":"addTitleAsColateral","nameLocation":"19311:19:26","nodeType":"FunctionDefinition","parameters":{"id":5316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"_titleId","nameLocation":"19336:8:26","nodeType":"VariableDeclaration","scope":5442,"src":"19331:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5308,"name":"uint","nodeType":"ElementaryTypeName","src":"19331:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5311,"mutability":"mutable","name":"_contractId","nameLocation":"19351:11:26","nodeType":"VariableDeclaration","scope":5442,"src":"19346:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5310,"name":"uint","nodeType":"ElementaryTypeName","src":"19346:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5313,"mutability":"mutable","name":"_idOfColateralTitle","nameLocation":"19369:19:26","nodeType":"VariableDeclaration","scope":5442,"src":"19364:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5312,"name":"uint","nodeType":"ElementaryTypeName","src":"19364:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5315,"mutability":"mutable","name":"_idOfColateralContract","nameLocation":"19395:22:26","nodeType":"VariableDeclaration","scope":5442,"src":"19390:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5314,"name":"uint","nodeType":"ElementaryTypeName","src":"19390:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19330:88:26"},"returnParameters":{"id":5317,"nodeType":"ParameterList","parameters":[],"src":"19425:0:26"},"scope":6336,"src":"19302:1723:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5533,"nodeType":"Block","src":"21098:991:26","statements":[{"assignments":[5451],"declarations":[{"constant":false,"id":5451,"mutability":"mutable","name":"myTitle","nameLocation":"21133:7:26","nodeType":"VariableDeclaration","scope":5533,"src":"21114:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5450,"nodeType":"UserDefinedTypeName","pathNode":{"id":5449,"name":"TitlesSold","nameLocations":["21114:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"21114:10:26"},"referencedDeclaration":3914,"src":"21114:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5457,"initialValue":{"baseExpression":{"baseExpression":{"id":5452,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"21143:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5454,"indexExpression":{"id":5453,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"21158:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21143:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5456,"indexExpression":{"id":5455,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"21168:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21143:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21114:66:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5459,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"21201:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21209:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"21201:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21225:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21201:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520686176656e2774206265656e2073656c65637465642079657421","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21228:32:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b6d0d1ef61f2baf613e8b06733fe61bf5e9d4ffca08b51a7da7841447c7afe2","typeString":"literal_string \"You haven't been selected yet!\""},"value":"You haven't been selected yet!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b6d0d1ef61f2baf613e8b06733fe61bf5e9d4ffca08b51a7da7841447c7afe2","typeString":"literal_string \"You haven't been selected yet!\""}],"id":5458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21193:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21193:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5465,"nodeType":"ExpressionStatement","src":"21193:68:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5467,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21282:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21286:6:26","memberName":"sender","nodeType":"MemberAccess","src":"21282:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5469,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"21296:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21304:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"21296:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21282:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792074686520647261772077696e6e65722063616e206372656174652061207065726d697373696f6e21","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21316:47:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_94c653969c20b0d8c0e5abcfb0d8c4aed7207d22d86128854b0c92658dc52c7d","typeString":"literal_string \"Only the draw winner can create a permission!\""},"value":"Only the draw winner can create a permission!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94c653969c20b0d8c0e5abcfb0d8c4aed7207d22d86128854b0c92658dc52c7d","typeString":"literal_string \"Only the draw winner can create a permission!\""}],"id":5466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21274:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21274:90:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5474,"nodeType":"ExpressionStatement","src":"21274:90:26"},{"assignments":[5476],"declarations":[{"constant":false,"id":5476,"mutability":"mutable","name":"permissionHash","nameLocation":"21385:14:26","nodeType":"VariableDeclaration","scope":5533,"src":"21377:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21377:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5486,"initialValue":{"arguments":[{"arguments":[{"id":5480,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"21429:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5481,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"21439:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5482,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"21452:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21460:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"21452:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5478,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21412:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21416:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"21412:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21412:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5477,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"21402:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21402:72:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"21377:97:26"},{"assignments":[5489],"declarations":[{"constant":false,"id":5489,"mutability":"mutable","name":"fuji","nameLocation":"21510:4:26","nodeType":"VariableDeclaration","scope":5533,"src":"21487:27:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_memory_ptr","typeString":"struct Horizon.FujiPermissions"},"typeName":{"id":5488,"nodeType":"UserDefinedTypeName","pathNode":{"id":5487,"name":"FujiPermissions","nameLocations":["21487:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3964,"src":"21487:15:26"},"referencedDeclaration":3964,"src":"21487:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage_ptr","typeString":"struct Horizon.FujiPermissions"}},"visibility":"internal"}],"id":5496,"initialValue":{"arguments":[{"id":5491,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"21557:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5492,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"21592:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5493,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"21630:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21638:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"21630:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5490,"name":"FujiPermissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3964,"src":"21517:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FujiPermissions_$3964_storage_ptr_$","typeString":"type(struct Horizon.FujiPermissions storage pointer)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["21548:7:26","21580:10:26","21618:10:26"],"names":["idTitle","contractId","drawNumber"],"nodeType":"FunctionCall","src":"21517:145:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_memory_ptr","typeString":"struct Horizon.FujiPermissions memory"}},"nodeType":"VariableDeclarationStatement","src":"21487:175:26"},{"expression":{"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5497,"name":"permissionInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"21675:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_FujiPermissions_$3964_storage_$","typeString":"mapping(bytes32 => struct Horizon.FujiPermissions storage ref)"}},"id":5499,"indexExpression":{"id":5498,"name":"permissionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"21690:14:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21675:30:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage","typeString":"struct Horizon.FujiPermissions storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5500,"name":"fuji","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"21708:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_memory_ptr","typeString":"struct Horizon.FujiPermissions memory"}},"src":"21675:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage","typeString":"struct Horizon.FujiPermissions storage ref"}},"id":5502,"nodeType":"ExpressionStatement","src":"21675:37:26"},{"assignments":[5504],"declarations":[{"constant":false,"id":5504,"mutability":"mutable","name":"rwaValueNeeded","nameLocation":"21730:14:26","nodeType":"VariableDeclaration","scope":5533,"src":"21725:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint","nodeType":"ElementaryTypeName","src":"21725:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5507,"initialValue":{"expression":{"id":5505,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"21747:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21755:22:26","memberName":"valueOfEnsuranceNeeded","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"21747:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21725:52:26"},{"assignments":[5509],"declarations":[{"constant":false,"id":5509,"mutability":"mutable","name":"permission","nameLocation":"21803:10:26","nodeType":"VariableDeclaration","scope":5533,"src":"21790:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5508,"name":"bytes","nodeType":"ElementaryTypeName","src":"21790:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5516,"initialValue":{"arguments":[{"id":5512,"name":"permissionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"21827:14:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5513,"name":"rwaValueNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"21843:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21859:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5510,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21816:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21820:6:26","memberName":"encode","nodeType":"MemberAccess","src":"21816:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21816:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"21790:74:26"},{"expression":{"arguments":[{"hexValue":"3134373637343832353130373834383036303433","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21907:20:26","typeDescriptions":{"typeIdentifier":"t_rational_14767482510784806043_by_1","typeString":"int_const 14767482510784806043"},"value":"14767482510784806043"},{"id":5521,"name":"fujiReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"21929:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5522,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"21944:10:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14767482510784806043_by_1","typeString":"int_const 14767482510784806043"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5517,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"21881:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21888:18:26","memberName":"sendMessagePayLINK","nodeType":"MemberAccess","referencedDeclaration":6770,"src":"21881:25:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint64,address,bytes memory) external returns (bytes32)"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21881:74:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5524,"nodeType":"ExpressionStatement","src":"21881:74:26"},{"eventCall":{"arguments":[{"id":5526,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"22023:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5527,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"22033:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5528,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"22046:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22054:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"22046:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5530,"name":"fujiReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"22068:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5525,"name":"CreatingPermission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"22004:18:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,address)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22004:77:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5532,"nodeType":"EmitStatement","src":"21999:82:26"}]},"functionSelector":"8f9fce70","id":5534,"implemented":true,"kind":"function","modifiers":[],"name":"addRWAColateral","nameLocation":"21042:15:26","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"_idTitle","nameLocation":"21063:8:26","nodeType":"VariableDeclaration","scope":5534,"src":"21058:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint","nodeType":"ElementaryTypeName","src":"21058:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5446,"mutability":"mutable","name":"_contractId","nameLocation":"21078:11:26","nodeType":"VariableDeclaration","scope":5534,"src":"21073:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint","nodeType":"ElementaryTypeName","src":"21073:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21057:33:26"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[],"src":"21098:0:26"},"scope":6336,"src":"21033:1056:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5659,"nodeType":"Block","src":"22162:1319:26","statements":[{"assignments":[5543],"declarations":[{"constant":false,"id":5543,"mutability":"mutable","name":"myTitle","nameLocation":"22197:7:26","nodeType":"VariableDeclaration","scope":5659,"src":"22178:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5542,"nodeType":"UserDefinedTypeName","pathNode":{"id":5541,"name":"TitlesSold","nameLocations":["22178:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"22178:10:26"},"referencedDeclaration":3914,"src":"22178:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5549,"initialValue":{"baseExpression":{"baseExpression":{"id":5544,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"22207:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5546,"indexExpression":{"id":5545,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"22222:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22207:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5548,"indexExpression":{"id":5547,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"22232:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22207:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22178:66:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5551,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22273:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22281:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"22273:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5553,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22301:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22309:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3890,"src":"22301:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c2074686520696e7374616c6c6d656e7473206d7573742068617665206265656e207061696421","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22323:43:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fcea1612c9abfb4f712af6089945602e2afb9de374ae3ac96da3302c147d51c","typeString":"literal_string \"All the installments must have been paid!\""},"value":"All the installments must have been paid!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fcea1612c9abfb4f712af6089945602e2afb9de374ae3ac96da3302c147d51c","typeString":"literal_string \"All the installments must have been paid!\""}],"id":5550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22265:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22265:102:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5558,"nodeType":"ExpressionStatement","src":"22265:102:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5560,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22386:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22394:4:26","memberName":"paid","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"22386:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":5562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22402:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"22386:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e27742072657472696576652074686520636f6c61746572616c206265666f72652074686520776974686472617721","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22408:55:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b341cdaa969807b4a819ab19bfbbab04491cba62bb5b9b70e059d5f414aa94f","typeString":"literal_string \"You can't retrieve the colateral before the withdraw!\""},"value":"You can't retrieve the colateral before the withdraw!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b341cdaa969807b4a819ab19bfbbab04491cba62bb5b9b70e059d5f414aa94f","typeString":"literal_string \"You can't retrieve the colateral before the withdraw!\""}],"id":5559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22378:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22378:86:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5566,"nodeType":"ExpressionStatement","src":"22378:86:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5567,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22480:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22488:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"22480:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5569,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22508:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22516:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3890,"src":"22508:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22480:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5572,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22532:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22540:19:26","memberName":"colateralRWAAddress","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"22532:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22571:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22563:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5574,"name":"address","nodeType":"ElementaryTypeName","src":"22563:7:26","typeDescriptions":{}}},"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22563:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22532:41:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22480:93:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5657,"nodeType":"Block","src":"22946:528:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5611,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22964:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22972:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"22964:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5613,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22992:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23000:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3890,"src":"22992:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22964:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5616,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"23016:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23024:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"23016:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23039:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23016:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22964:76:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5656,"nodeType":"IfStatement","src":"22961:502:26","trueBody":{"id":5655,"nodeType":"Block","src":"23041:422:26","statements":[{"assignments":[5623],"declarations":[{"constant":false,"id":5623,"mutability":"mutable","name":"colateral","nameLocation":"23101:9:26","nodeType":"VariableDeclaration","scope":5655,"src":"23078:32:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_memory_ptr","typeString":"struct Horizon.ColateralTitles"},"typeName":{"id":5622,"nodeType":"UserDefinedTypeName","pathNode":{"id":5621,"name":"ColateralTitles","nameLocations":["23078:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3957,"src":"23078:15:26"},"referencedDeclaration":3957,"src":"23078:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage_ptr","typeString":"struct Horizon.ColateralTitles"}},"visibility":"internal"}],"id":5629,"initialValue":{"baseExpression":{"baseExpression":{"id":5624,"name":"colateralInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"23113:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.ColateralTitles storage ref))"}},"id":5626,"indexExpression":{"id":5625,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"23128:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23113:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$","typeString":"mapping(uint256 => struct Horizon.ColateralTitles storage ref)"}},"id":5628,"indexExpression":{"id":5627,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"23138:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23113:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage","typeString":"struct Horizon.ColateralTitles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23078:72:26"},{"assignments":[5632],"declarations":[{"constant":false,"id":5632,"mutability":"mutable","name":"myColateralTitle","nameLocation":"23206:16:26","nodeType":"VariableDeclaration","scope":5655,"src":"23187:35:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5631,"nodeType":"UserDefinedTypeName","pathNode":{"id":5630,"name":"TitlesSold","nameLocations":["23187:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"23187:10:26"},"referencedDeclaration":3914,"src":"23187:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5640,"initialValue":{"baseExpression":{"baseExpression":{"id":5633,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"23225:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5636,"indexExpression":{"expression":{"id":5634,"name":"colateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"23240:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_memory_ptr","typeString":"struct Horizon.ColateralTitles memory"}},"id":5635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23250:18:26","memberName":"titleIdOfColateral","nodeType":"MemberAccess","referencedDeclaration":3954,"src":"23240:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23225:44:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5639,"indexExpression":{"expression":{"id":5637,"name":"colateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"23270:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_memory_ptr","typeString":"struct Horizon.ColateralTitles memory"}},"id":5638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23280:21:26","memberName":"contractIdOfColateral","nodeType":"MemberAccess","referencedDeclaration":3956,"src":"23270:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23225:77:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23187:115:26"},{"expression":{"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5641,"name":"myColateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"23323:16:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"23340:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"23323:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5644,"name":"colateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"23353:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_memory_ptr","typeString":"struct Horizon.ColateralTitles memory"}},"id":5645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23363:14:26","memberName":"colateralOwner","nodeType":"MemberAccess","referencedDeclaration":3952,"src":"23353:24:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23323:54:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5647,"nodeType":"ExpressionStatement","src":"23323:54:26"},{"expression":{"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5648,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"23398:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"23406:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"23398:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5651,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"23422:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23438:9:26","memberName":"Finalized","nodeType":"MemberAccess","referencedDeclaration":3852,"src":"23422:25:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"23398:49:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"id":5654,"nodeType":"ExpressionStatement","src":"23398:49:26"}]}}]},"id":5658,"nodeType":"IfStatement","src":"22477:997:26","trueBody":{"id":5610,"nodeType":"Block","src":"22574:368:26","statements":[{"assignments":[5581],"declarations":[{"constant":false,"id":5581,"mutability":"mutable","name":"permissionHash","nameLocation":"22599:14:26","nodeType":"VariableDeclaration","scope":5610,"src":"22591:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22591:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5591,"initialValue":{"arguments":[{"arguments":[{"id":5585,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"22643:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5586,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"22653:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5587,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22666:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22674:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"22666:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5583,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22626:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22630:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"22626:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22626:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5582,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"22616:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22616:72:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"22591:97:26"},{"assignments":[5593],"declarations":[{"constant":false,"id":5593,"mutability":"mutable","name":"updatePermission","nameLocation":"22718:16:26","nodeType":"VariableDeclaration","scope":5610,"src":"22705:29:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5592,"name":"bytes","nodeType":"ElementaryTypeName","src":"22705:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5601,"initialValue":{"arguments":[{"id":5596,"name":"permissionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"22748:14:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5597,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"22764:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22772:22:26","memberName":"valueOfEnsuranceNeeded","nodeType":"MemberAccess","referencedDeclaration":3908,"src":"22764:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22796:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5594,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22737:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22741:6:26","memberName":"encode","nodeType":"MemberAccess","src":"22737:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22737:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"22705:97:26"},{"expression":{"arguments":[{"hexValue":"3134373637343832353130373834383036303433","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22845:20:26","typeDescriptions":{"typeIdentifier":"t_rational_14767482510784806043_by_1","typeString":"int_const 14767482510784806043"},"value":"14767482510784806043"},{"id":5606,"name":"fujiReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"22867:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5607,"name":"updatePermission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"22881:16:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_14767482510784806043_by_1","typeString":"int_const 14767482510784806043"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5602,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"22819:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22826:18:26","memberName":"sendMessagePayLINK","nodeType":"MemberAccess","referencedDeclaration":6770,"src":"22819:25:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint64,address,bytes memory) external returns (bytes32)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22819:79:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5609,"nodeType":"ExpressionStatement","src":"22819:79:26"}]}}]},"functionSelector":"58a15a2e","id":5660,"implemented":true,"kind":"function","modifiers":[],"name":"refundColateral","nameLocation":"22106:15:26","nodeType":"FunctionDefinition","parameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"_idTitle","nameLocation":"22127:8:26","nodeType":"VariableDeclaration","scope":5660,"src":"22122:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint","nodeType":"ElementaryTypeName","src":"22122:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5538,"mutability":"mutable","name":"_contractId","nameLocation":"22142:11:26","nodeType":"VariableDeclaration","scope":5660,"src":"22137:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5537,"name":"uint","nodeType":"ElementaryTypeName","src":"22137:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22121:33:26"},"returnParameters":{"id":5540,"nodeType":"ParameterList","parameters":[],"src":"22162:0:26"},"scope":6336,"src":"22097:1384:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5827,"nodeType":"Block","src":"23573:1740:26","statements":[{"assignments":[5672],"declarations":[{"constant":false,"id":5672,"mutability":"mutable","name":"title","nameLocation":"23604:5:26","nodeType":"VariableDeclaration","scope":5827,"src":"23589:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":5671,"nodeType":"UserDefinedTypeName","pathNode":{"id":5670,"name":"Titles","nameLocations":["23589:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"23589:6:26"},"referencedDeclaration":3884,"src":"23589:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":5676,"initialValue":{"baseExpression":{"id":5673,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"23612:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":5675,"indexExpression":{"id":5674,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"23622:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23612:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23589:42:26"},{"assignments":[5679],"declarations":[{"constant":false,"id":5679,"mutability":"mutable","name":"myTitle","nameLocation":"23661:7:26","nodeType":"VariableDeclaration","scope":5827,"src":"23642:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5678,"nodeType":"UserDefinedTypeName","pathNode":{"id":5677,"name":"TitlesSold","nameLocations":["23642:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"23642:10:26"},"referencedDeclaration":3914,"src":"23642:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5685,"initialValue":{"baseExpression":{"baseExpression":{"id":5680,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"23671:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5682,"indexExpression":{"id":5681,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"23686:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23671:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5684,"indexExpression":{"id":5683,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"23696:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23671:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"23642:66:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5687,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23737:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23741:6:26","memberName":"sender","nodeType":"MemberAccess","src":"23737:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5689,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"23751:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23759:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"23751:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23737:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5692,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23773:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23777:6:26","memberName":"sender","nodeType":"MemberAccess","src":"23773:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5694,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"23787:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23773:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23737:55:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d73672e73656e646572206d7573742062652074686520636f6e7472616374204f776e6572206f72207468652070726f746f636f6c206f776e657221","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23794:62:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9b32682dae0f91b53b9f3516c065badf35c47f6217f6e7f19c1658aaeafd443","typeString":"literal_string \"Msg.sender must be the contract Owner or the protocol owner!\""},"value":"Msg.sender must be the contract Owner or the protocol owner!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a9b32682dae0f91b53b9f3516c065badf35c47f6217f6e7f19c1658aaeafd443","typeString":"literal_string \"Msg.sender must be the contract Owner or the protocol owner!\""}],"id":5686,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23729:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23729:128:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5699,"nodeType":"ExpressionStatement","src":"23729:128:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5703,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"23884:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23876:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5701,"name":"address","nodeType":"ElementaryTypeName","src":"23876:7:26","typeDescriptions":{}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23876:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23908:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23900:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5705,"name":"address","nodeType":"ElementaryTypeName","src":"23900:7:26","typeDescriptions":{}}},"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23900:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23876:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616c6c6f776564","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23912:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b","typeString":"literal_string \"Token not allowed\""},"value":"Token not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b","typeString":"literal_string \"Token not allowed\""}],"id":5700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23868:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23868:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5712,"nodeType":"ExpressionStatement","src":"23868:64:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5714,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"23951:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23959:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"23951:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5716,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"23976:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23992:8:26","memberName":"Withdraw","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"23976:24:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"23951:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686973207469746c6520646f6e2774206861766520746865207065726d697373696f6e20746f207769746864726177","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24002:50:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8aa00a4121c227d0def0c2221a6bb7d6b6cba7f72196f7b709e8c397399e34c6","typeString":"literal_string \"This title don't have the permission to withdraw\""},"value":"This title don't have the permission to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8aa00a4121c227d0def0c2221a6bb7d6b6cba7f72196f7b709e8c397399e34c6","typeString":"literal_string \"This title don't have the permission to withdraw\""}],"id":5713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23943:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23943:110:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5721,"nodeType":"ExpressionStatement","src":"23943:110:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5722,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24070:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24078:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"24070:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5724,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24098:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24106:12:26","memberName":"installments","nodeType":"MemberAccess","referencedDeclaration":3890,"src":"24098:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24070:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5727,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24134:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24142:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"24134:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24157:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24134:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24070:88:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5732,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24162:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24170:19:26","memberName":"colateralRWAAddress","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"24162:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24201:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24193:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5734,"name":"address","nodeType":"ElementaryTypeName","src":"24193:7:26","typeDescriptions":{}}},"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24193:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24162:41:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5739,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24207:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24215:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"24207:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24230:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24207:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24162:69:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24070:161:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5809,"nodeType":"Block","src":"24853:348:26","statements":[{"eventCall":{"arguments":[{"expression":{"id":5797,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24896:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24904:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"24896:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5799,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24963:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24971:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"24963:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5801,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"25025:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25033:21:26","memberName":"colateralTitleAddress","nodeType":"MemberAccess","referencedDeclaration":3904,"src":"25025:29:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5803,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"25097:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25105:19:26","memberName":"colateralRWAAddress","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"25097:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5805,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"25167:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25175:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"25167:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}],"id":5796,"name":"ThereAreSomePendencies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"24873:22:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_enum$_MyTitleWithdraw_$3853_$returns$__$","typeString":"function (uint256,uint256,address,address,enum Horizon.MyTitleWithdraw)"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24873:316:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5808,"nodeType":"EmitStatement","src":"24868:321:26"}]},"id":5810,"nodeType":"IfStatement","src":"24067:1134:26","trueBody":{"id":5795,"nodeType":"Block","src":"24233:616:26","statements":[{"assignments":[null,null,5746],"declarations":[null,null,{"constant":false,"id":5746,"mutability":"mutable","name":"isStable","nameLocation":"24260:8:26","nodeType":"VariableDeclaration","scope":5795,"src":"24255:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5745,"name":"bool","nodeType":"ElementaryTypeName","src":"24255:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5751,"initialValue":{"arguments":[{"id":5749,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"24304:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"expression":{"id":5747,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"24272:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24278:25:26","memberName":"returnAvailableStablecoin","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"24272:31:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$827_$returns$_t_string_memory_ptr_$_t_contract$_IERC20_$827_$_t_bool_$","typeString":"function (contract IERC20) external returns (string memory,contract IERC20,bool)"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24272:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_contract$_IERC20_$827_$_t_bool_$","typeString":"tuple(string memory,contract IERC20,bool)"}},"nodeType":"VariableDeclarationStatement","src":"24250:66:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5753,"name":"isStable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"24341:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24353:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"24341:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616c6c6f77656421","id":5756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24360:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_1896fd8fe501815b27860b1bd1ae5a48eaad2356794645cd1b32edf596424225","typeString":"literal_string \"Token not allowed!\""},"value":"Token not allowed!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1896fd8fe501815b27860b1bd1ae5a48eaad2356794645cd1b32edf596424225","typeString":"literal_string \"Token not allowed!\""}],"id":5752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24333:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24333:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5758,"nodeType":"ExpressionStatement","src":"24333:48:26"},{"expression":{"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5759,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24398:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5760,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"24411:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"src":"24398:24:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":5762,"nodeType":"ExpressionStatement","src":"24398:24:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5768,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24549:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}],"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24541:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5766,"name":"address","nodeType":"ElementaryTypeName","src":"24541:7:26","typeDescriptions":{}}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24541:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5764,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24520:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24531:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":784,"src":"24520:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24520:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":5771,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24558:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24566:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"24558:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24520:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24512:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24512:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5775,"nodeType":"ExpressionStatement","src":"24512:65:26"},{"expression":{"arguments":[{"expression":{"id":5779,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24687:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24695:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"24687:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5781,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24707:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24715:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"24707:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5776,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24667:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24678:8:26","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":794,"src":"24667:19:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24667:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5784,"nodeType":"ExpressionStatement","src":"24667:59:26"},{"eventCall":{"arguments":[{"id":5786,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"24766:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5787,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24776:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24784:12:26","memberName":"drawSelected","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"24776:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5789,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24798:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24806:10:26","memberName":"titleOwner","nodeType":"MemberAccess","referencedDeclaration":3896,"src":"24798:18:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5791,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"24818:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24826:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"24818:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5785,"name":"MonthlyWinnerPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"24748:17:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,uint256)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24748:89:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5794,"nodeType":"EmitStatement","src":"24743:94:26"}]}},{"expression":{"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5811,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"25211:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25219:4:26","memberName":"paid","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"25211:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25226:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"25211:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5816,"nodeType":"ExpressionStatement","src":"25211:19:26"},{"expression":{"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5817,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"25241:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25247:14:26","memberName":"totalValuePaid","nodeType":"MemberAccess","referencedDeclaration":3878,"src":"25241:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5820,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"25264:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25270:14:26","memberName":"totalValuePaid","nodeType":"MemberAccess","referencedDeclaration":3878,"src":"25264:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":5822,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"25287:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25295:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3888,"src":"25287:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25264:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25241:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5826,"nodeType":"ExpressionStatement","src":"25241:64:26"}]},"functionSelector":"4facbacb","id":5828,"implemented":true,"kind":"function","modifiers":[],"name":"winnerWithdraw","nameLocation":"23498:14:26","nodeType":"FunctionDefinition","parameters":{"id":5668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"_idTitle","nameLocation":"23518:8:26","nodeType":"VariableDeclaration","scope":5828,"src":"23513:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint","nodeType":"ElementaryTypeName","src":"23513:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5664,"mutability":"mutable","name":"_contractId","nameLocation":"23533:11:26","nodeType":"VariableDeclaration","scope":5828,"src":"23528:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5663,"name":"uint","nodeType":"ElementaryTypeName","src":"23528:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5667,"mutability":"mutable","name":"_stablecoin","nameLocation":"23553:11:26","nodeType":"VariableDeclaration","scope":5828,"src":"23546:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":5666,"nodeType":"UserDefinedTypeName","pathNode":{"id":5665,"name":"IERC20","nameLocations":["23546:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"23546:6:26"},"referencedDeclaration":827,"src":"23546:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"23512:53:26"},"returnParameters":{"id":5669,"nodeType":"ParameterList","parameters":[],"src":"23573:0:26"},"scope":6336,"src":"23489:1824:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5973,"nodeType":"Block","src":"25460:1424:26","statements":[{"assignments":[5837],"declarations":[{"constant":false,"id":5837,"mutability":"mutable","name":"title","nameLocation":"25491:5:26","nodeType":"VariableDeclaration","scope":5973,"src":"25476:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":5836,"nodeType":"UserDefinedTypeName","pathNode":{"id":5835,"name":"Titles","nameLocations":["25476:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"25476:6:26"},"referencedDeclaration":3884,"src":"25476:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":5841,"initialValue":{"baseExpression":{"id":5838,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"25499:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":5840,"indexExpression":{"id":5839,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"25509:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25499:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25476:42:26"},{"body":{"id":5971,"nodeType":"Block","src":"25581:1296:26","statements":[{"assignments":[5855],"declarations":[{"constant":false,"id":5855,"mutability":"mutable","name":"clientTitle","nameLocation":"25617:11:26","nodeType":"VariableDeclaration","scope":5971,"src":"25598:30:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5854,"nodeType":"UserDefinedTypeName","pathNode":{"id":5853,"name":"TitlesSold","nameLocations":["25598:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"25598:10:26"},"referencedDeclaration":3914,"src":"25598:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5861,"initialValue":{"baseExpression":{"baseExpression":{"id":5856,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"25631:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5858,"indexExpression":{"id":5857,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"25646:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25631:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5860,"indexExpression":{"id":5859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"25656:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25631:27:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25598:60:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5862,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"25678:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25684:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"25678:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5864,"name":"clientTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"25701:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25713:16:26","memberName":"installmentsPaid","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"25701:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25678:51:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25733:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"25678:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5969,"nodeType":"Block","src":"26514:348:26","statements":[{"assignments":[5942],"declarations":[{"constant":false,"id":5942,"mutability":"mutable","name":"paymentDate","nameLocation":"26538:11:26","nodeType":"VariableDeclaration","scope":5969,"src":"26533:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint","nodeType":"ElementaryTypeName","src":"26533:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5950,"initialValue":{"arguments":[{"expression":{"id":5945,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"26580:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26586:15:26","memberName":"paymentSchedule","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"26580:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5947,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"26603:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26609:14:26","memberName":"nextDrawNumber","nodeType":"MemberAccess","referencedDeclaration":3864,"src":"26603:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5943,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"26552:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26558:21:26","memberName":"returnPaymentDeadline","nodeType":"MemberAccess","referencedDeclaration":7694,"src":"26552:27:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view external returns (uint256)"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26552:72:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26533:91:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5951,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"26646:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26652:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"26646:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5953,"name":"paymentDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"26664:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26646:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5968,"nodeType":"IfStatement","src":"26643:204:26","trueBody":{"id":5967,"nodeType":"Block","src":"26677:170:26","statements":[{"expression":{"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5955,"name":"clientTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"26700:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26712:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"26700:25:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5958,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"26728:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26744:4:26","memberName":"Late","nodeType":"MemberAccess","referencedDeclaration":3849,"src":"26728:20:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"26700:48:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"id":5961,"nodeType":"ExpressionStatement","src":"26700:48:26"},{"eventCall":{"arguments":[{"expression":{"id":5963,"name":"clientTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"26799:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26811:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"26799:25:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}],"id":5962,"name":"MyTitleStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"26778:20:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_MyTitleWithdraw_$3853_$returns$__$","typeString":"function (enum Horizon.MyTitleWithdraw)"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26778:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5966,"nodeType":"EmitStatement","src":"26773:52:26"}]}}]},"id":5970,"nodeType":"IfStatement","src":"25675:1187:26","trueBody":{"id":5940,"nodeType":"Block","src":"25735:775:26","statements":[{"expression":{"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5869,"name":"clientTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"25754:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25766:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"25754:25:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5872,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"25782:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25798:8:26","memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"25782:24:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"25754:52:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"id":5875,"nodeType":"ExpressionStatement","src":"25754:52:26"},{"expression":{"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25825:21:26","subExpression":{"expression":{"id":5876,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"25825:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25831:13:26","memberName":"titleCanceled","nodeType":"MemberAccess","referencedDeclaration":3880,"src":"25825:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5880,"nodeType":"ExpressionStatement","src":"25825:21:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5881,"name":"clientTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"25870:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25882:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"25870:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25897:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25870:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5885,"name":"clientTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"25902:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25914:19:26","memberName":"colateralRWAAddress","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"25902:31:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25937:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5887,"name":"address","nodeType":"ElementaryTypeName","src":"25937:7:26","typeDescriptions":{}}},"id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25937:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25902:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5892,"name":"clientTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"25951:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25963:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"25951:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25978:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25951:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25902:77:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25870:109:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5939,"nodeType":"IfStatement","src":"25867:628:26","trueBody":{"id":5938,"nodeType":"Block","src":"25980:515:26","statements":[{"assignments":[5900],"declarations":[{"constant":false,"id":5900,"mutability":"mutable","name":"colateral","nameLocation":"26057:9:26","nodeType":"VariableDeclaration","scope":5938,"src":"26033:33:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage_ptr","typeString":"struct Horizon.ColateralTitles"},"typeName":{"id":5899,"nodeType":"UserDefinedTypeName","pathNode":{"id":5898,"name":"ColateralTitles","nameLocations":["26033:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3957,"src":"26033:15:26"},"referencedDeclaration":3957,"src":"26033:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage_ptr","typeString":"struct Horizon.ColateralTitles"}},"visibility":"internal"}],"id":5906,"initialValue":{"baseExpression":{"baseExpression":{"id":5901,"name":"colateralInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"26069:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.ColateralTitles storage ref))"}},"id":5903,"indexExpression":{"id":5902,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"26084:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26069:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ColateralTitles_$3957_storage_$","typeString":"mapping(uint256 => struct Horizon.ColateralTitles storage ref)"}},"id":5905,"indexExpression":{"id":5904,"name":"_contractId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"26094:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26069:37:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage","typeString":"struct Horizon.ColateralTitles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26033:73:26"},{"assignments":[5909],"declarations":[{"constant":false,"id":5909,"mutability":"mutable","name":"colateralTitle","nameLocation":"26144:14:26","nodeType":"VariableDeclaration","scope":5938,"src":"26129:29:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":5908,"nodeType":"UserDefinedTypeName","pathNode":{"id":5907,"name":"Titles","nameLocations":["26129:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"26129:6:26"},"referencedDeclaration":3884,"src":"26129:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":5914,"initialValue":{"baseExpression":{"id":5910,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"26161:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":5913,"indexExpression":{"expression":{"id":5911,"name":"colateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"26171:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage_ptr","typeString":"struct Horizon.ColateralTitles storage pointer"}},"id":5912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26181:18:26","memberName":"titleIdOfColateral","nodeType":"MemberAccess","referencedDeclaration":3954,"src":"26171:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26161:39:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26129:71:26"},{"assignments":[5917],"declarations":[{"constant":false,"id":5917,"mutability":"mutable","name":"colateralContract","nameLocation":"26242:17:26","nodeType":"VariableDeclaration","scope":5938,"src":"26223:36:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":5916,"nodeType":"UserDefinedTypeName","pathNode":{"id":5915,"name":"TitlesSold","nameLocations":["26223:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"26223:10:26"},"referencedDeclaration":3914,"src":"26223:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":5925,"initialValue":{"baseExpression":{"baseExpression":{"id":5918,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"26262:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":5921,"indexExpression":{"expression":{"id":5919,"name":"colateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"26277:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage_ptr","typeString":"struct Horizon.ColateralTitles storage pointer"}},"id":5920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26287:18:26","memberName":"titleIdOfColateral","nodeType":"MemberAccess","referencedDeclaration":3954,"src":"26277:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26262:44:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":5924,"indexExpression":{"expression":{"id":5922,"name":"colateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"26307:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_ColateralTitles_$3957_storage_ptr","typeString":"struct Horizon.ColateralTitles storage pointer"}},"id":5923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26317:21:26","memberName":"contractIdOfColateral","nodeType":"MemberAccess","referencedDeclaration":3956,"src":"26307:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26262:77:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26223:116:26"},{"expression":{"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5926,"name":"colateralContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"26364:17:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":5928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26382:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"26364:31:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5929,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"26398:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26414:8:26","memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"26398:24:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"26364:58:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"id":5932,"nodeType":"ExpressionStatement","src":"26364:58:26"},{"expression":{"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26445:30:26","subExpression":{"expression":{"id":5933,"name":"colateralTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"26445:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"26460:13:26","memberName":"titleCanceled","nodeType":"MemberAccess","referencedDeclaration":3880,"src":"26445:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5937,"nodeType":"ExpressionStatement","src":"26445:30:26"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5846,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"25547:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5847,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"25551:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25557:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"25551:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25547:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5972,"initializationExpression":{"assignments":[5843],"declarations":[{"constant":false,"id":5843,"mutability":"mutable","name":"i","nameLocation":"25540:1:26","nodeType":"VariableDeclaration","scope":5972,"src":"25535:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5842,"name":"uint","nodeType":"ElementaryTypeName","src":"25535:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5845,"initialValue":{"hexValue":"31","id":5844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25544:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"25535:10:26"},"loopExpression":{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25577:3:26","subExpression":{"id":5850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"25577:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5852,"nodeType":"ExpressionStatement","src":"25577:3:26"},"nodeType":"ForStatement","src":"25531:1346:26"}]},"functionSelector":"23478654","id":5974,"implemented":true,"kind":"function","modifiers":[],"name":"verifyLatePayments","nameLocation":"25401:18:26","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5830,"mutability":"mutable","name":"_titleId","nameLocation":"25425:8:26","nodeType":"VariableDeclaration","scope":5974,"src":"25420:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5829,"name":"uint","nodeType":"ElementaryTypeName","src":"25420:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5832,"mutability":"mutable","name":"_contractId","nameLocation":"25440:11:26","nodeType":"VariableDeclaration","scope":5974,"src":"25435:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5831,"name":"uint","nodeType":"ElementaryTypeName","src":"25435:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25419:33:26"},"returnParameters":{"id":5834,"nodeType":"ParameterList","parameters":[],"src":"25460:0:26"},"scope":6336,"src":"25392:1492:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6090,"nodeType":"Block","src":"26971:863:26","statements":[{"assignments":[5986],"declarations":[{"constant":false,"id":5986,"mutability":"mutable","name":"title","nameLocation":"27002:5:26","nodeType":"VariableDeclaration","scope":6090,"src":"26987:20:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"},"typeName":{"id":5985,"nodeType":"UserDefinedTypeName","pathNode":{"id":5984,"name":"Titles","nameLocations":["26987:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":3884,"src":"26987:6:26"},"referencedDeclaration":3884,"src":"26987:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles"}},"visibility":"internal"}],"id":5990,"initialValue":{"baseExpression":{"id":5987,"name":"allTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"27010:9:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Titles_$3884_storage_$","typeString":"mapping(uint256 => struct Horizon.Titles storage ref)"}},"id":5989,"indexExpression":{"id":5988,"name":"_idTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"27020:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27010:19:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage","typeString":"struct Horizon.Titles storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26987:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5992,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"27050:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27056:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"27050:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5994,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"27066:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27078:9:26","memberName":"Finalized","nodeType":"MemberAccess","referencedDeclaration":3841,"src":"27066:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"27050:37:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5997,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"27091:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":5998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27097:6:26","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3883,"src":"27091:12:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5999,"name":"TitleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"27107:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TitleStatus_$3844_$","typeString":"type(enum Horizon.TitleStatus)"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"27119:8:26","memberName":"Canceled","nodeType":"MemberAccess","referencedDeclaration":3839,"src":"27107:20:26","typeDescriptions":{"typeIdentifier":"t_enum$_TitleStatus_$3844","typeString":"enum Horizon.TitleStatus"}},"src":"27091:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27050:77:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27042:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27042:86:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6004,"nodeType":"ExpressionStatement","src":"27042:86:26"},{"assignments":[6006],"declarations":[{"constant":false,"id":6006,"mutability":"mutable","name":"validTitles","nameLocation":"27146:11:26","nodeType":"VariableDeclaration","scope":6090,"src":"27141:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint","nodeType":"ElementaryTypeName","src":"27141:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6012,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6007,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"27160:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":6008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27166:18:26","memberName":"numberOfTitlesSold","nodeType":"MemberAccess","referencedDeclaration":3874,"src":"27160:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6009,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"27187:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":6010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27193:13:26","memberName":"titleCanceled","nodeType":"MemberAccess","referencedDeclaration":3880,"src":"27187:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27160:46:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27141:65:26"},{"assignments":[6014],"declarations":[{"constant":false,"id":6014,"mutability":"mutable","name":"lockedAmount","nameLocation":"27224:12:26","nodeType":"VariableDeclaration","scope":6090,"src":"27219:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6013,"name":"uint","nodeType":"ElementaryTypeName","src":"27219:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6019,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"validTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"27239:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6016,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"27253:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":6017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27259:10:26","memberName":"titleValue","nodeType":"MemberAccess","referencedDeclaration":3866,"src":"27253:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27239:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27219:50:26"},{"assignments":[6021],"declarations":[{"constant":false,"id":6021,"mutability":"mutable","name":"amount","nameLocation":"27287:6:26","nodeType":"VariableDeclaration","scope":6090,"src":"27282:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6020,"name":"uint","nodeType":"ElementaryTypeName","src":"27282:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6026,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6022,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"27296:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":6023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27302:18:26","memberName":"totalValueReceived","nodeType":"MemberAccess","referencedDeclaration":3876,"src":"27296:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6024,"name":"lockedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"27323:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27296:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27282:53:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6028,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"27356:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6029,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"27366:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Titles_$3884_storage_ptr","typeString":"struct Horizon.Titles storage pointer"}},"id":6030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27372:18:26","memberName":"totalValueReceived","nodeType":"MemberAccess","referencedDeclaration":3876,"src":"27366:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6031,"name":"lockedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"27393:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27366:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27356:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5f616d6f756e742063616e27742065786365656420746865207469746c652076616c756521","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27406:39:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f6e63eae4a2e03afdc5bf8e788c7801ffada57edf6b2aad135a69c9d026a51e","typeString":"literal_string \"_amount can't exceed the title value!\""},"value":"_amount can't exceed the title value!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f6e63eae4a2e03afdc5bf8e788c7801ffada57edf6b2aad135a69c9d026a51e","typeString":"literal_string \"_amount can't exceed the title value!\""}],"id":6027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27348:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27348:98:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6036,"nodeType":"ExpressionStatement","src":"27348:98:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6040,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"27475:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"id":6039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27467:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6038,"name":"address","nodeType":"ElementaryTypeName","src":"27467:7:26","typeDescriptions":{}}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27467:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27501:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27493:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6042,"name":"address","nodeType":"ElementaryTypeName","src":"27493:7:26","typeDescriptions":{}}},"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27493:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27467:36:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616c6c6f776564","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27505:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b","typeString":"literal_string \"Token not allowed\""},"value":"Token not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b","typeString":"literal_string \"Token not allowed\""}],"id":6037,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27459:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27459:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6049,"nodeType":"ExpressionStatement","src":"27459:66:26"},{"assignments":[null,null,6051],"declarations":[null,null,{"constant":false,"id":6051,"mutability":"mutable","name":"isStable","nameLocation":"27548:8:26","nodeType":"VariableDeclaration","scope":6090,"src":"27543:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6050,"name":"bool","nodeType":"ElementaryTypeName","src":"27543:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6056,"initialValue":{"arguments":[{"id":6054,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"27592:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"expression":{"id":6052,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"27560:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27566:25:26","memberName":"returnAvailableStablecoin","nodeType":"MemberAccess","referencedDeclaration":7673,"src":"27560:31:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$827_$returns$_t_string_memory_ptr_$_t_contract$_IERC20_$827_$_t_bool_$","typeString":"function (contract IERC20) external returns (string memory,contract IERC20,bool)"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27560:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_contract$_IERC20_$827_$_t_bool_$","typeString":"tuple(string memory,contract IERC20,bool)"}},"nodeType":"VariableDeclarationStatement","src":"27538:68:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6058,"name":"isStable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"27627:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"27639:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"27627:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616c6c6f77656421","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27646:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_1896fd8fe501815b27860b1bd1ae5a48eaad2356794645cd1b32edf596424225","typeString":"literal_string \"Token not allowed!\""},"value":"Token not allowed!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1896fd8fe501815b27860b1bd1ae5a48eaad2356794645cd1b32edf596424225","typeString":"literal_string \"Token not allowed!\""}],"id":6057,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27619:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27619:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6063,"nodeType":"ExpressionStatement","src":"27619:48:26"},{"expression":{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6064,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"27680:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6065,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"27693:13:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"src":"27680:26:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":6067,"nodeType":"ExpressionStatement","src":"27680:26:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6073,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"27756:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Horizon_$6336","typeString":"contract Horizon"}],"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27748:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6071,"name":"address","nodeType":"ElementaryTypeName","src":"27748:7:26","typeDescriptions":{}}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27748:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6069,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"27727:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27738:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":784,"src":"27727:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27727:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6076,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"27765:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27727:44:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27719:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27719:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6079,"nodeType":"ExpressionStatement","src":"27719:53:26"},{"expression":{"arguments":[{"arguments":[{"id":6085,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"27811:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}],"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27803:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6083,"name":"address","nodeType":"ElementaryTypeName","src":"27803:7:26","typeDescriptions":{}}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27803:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6087,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"27819:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6080,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"27783:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27794:8:26","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":794,"src":"27783:19:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27783:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6089,"nodeType":"ExpressionStatement","src":"27783:43:26"}]},"functionSelector":"4c67469c","id":6091,"implemented":true,"kind":"function","modifiers":[{"id":5982,"kind":"modifierInvocation","modifierName":{"id":5981,"name":"onlyOwner","nameLocations":["26962:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":6335,"src":"26962:9:26"},"nodeType":"ModifierInvocation","src":"26962:9:26"}],"name":"protocolWithdraw","nameLocation":"26901:16:26","nodeType":"FunctionDefinition","parameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"_idTitle","nameLocation":"26923:8:26","nodeType":"VariableDeclaration","scope":6091,"src":"26918:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5975,"name":"uint","nodeType":"ElementaryTypeName","src":"26918:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5979,"mutability":"mutable","name":"_tokenAddress","nameLocation":"26940:13:26","nodeType":"VariableDeclaration","scope":6091,"src":"26933:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":5978,"nodeType":"UserDefinedTypeName","pathNode":{"id":5977,"name":"IERC20","nameLocations":["26933:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"26933:6:26"},"referencedDeclaration":827,"src":"26933:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"26917:37:26"},"returnParameters":{"id":5983,"nodeType":"ParameterList","parameters":[],"src":"26971:0:26"},"scope":6336,"src":"26892:942:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6104,"nodeType":"Block","src":"27966:75:26","statements":[{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6098,"name":"whitelistedSourceChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"27981:23:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"}},"id":6100,"indexExpression":{"id":6099,"name":"_sourceChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"28005:20:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27981:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28029:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"27981:52:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6103,"nodeType":"ExpressionStatement","src":"27981:52:26"}]},"functionSelector":"c5ec1c7a","id":6105,"implemented":true,"kind":"function","modifiers":[{"id":6096,"kind":"modifierInvocation","modifierName":{"id":6095,"name":"onlyOwner","nameLocations":["27956:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":6335,"src":"27956:9:26"},"nodeType":"ModifierInvocation","src":"27956:9:26"}],"name":"addSourceChain","nameLocation":"27902:14:26","nodeType":"FunctionDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"_sourceChainSelector","nameLocation":"27925:20:26","nodeType":"VariableDeclaration","scope":6105,"src":"27918:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6092,"name":"uint64","nodeType":"ElementaryTypeName","src":"27918:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"27916:30:26"},"returnParameters":{"id":6097,"nodeType":"ParameterList","parameters":[],"src":"27966:0:26"},"scope":6336,"src":"27893:148:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6118,"nodeType":"Block","src":"28154:76:26","statements":[{"expression":{"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6112,"name":"whitelistedSourceChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"28169:23:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"}},"id":6114,"indexExpression":{"id":6113,"name":"_sourceChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"28193:20:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28169:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28217:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"28169:53:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6117,"nodeType":"ExpressionStatement","src":"28169:53:26"}]},"functionSelector":"ff46ed53","id":6119,"implemented":true,"kind":"function","modifiers":[{"id":6110,"kind":"modifierInvocation","modifierName":{"id":6109,"name":"onlyOwner","nameLocations":["28144:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":6335,"src":"28144:9:26"},"nodeType":"ModifierInvocation","src":"28144:9:26"}],"name":"removelistSourceChain","nameLocation":"28083:21:26","nodeType":"FunctionDefinition","parameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"_sourceChainSelector","nameLocation":"28113:20:26","nodeType":"VariableDeclaration","scope":6119,"src":"28106:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6106,"name":"uint64","nodeType":"ElementaryTypeName","src":"28106:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28104:30:26"},"returnParameters":{"id":6111,"nodeType":"ParameterList","parameters":[],"src":"28154:0:26"},"scope":6336,"src":"28074:156:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6132,"nodeType":"Block","src":"28310:58:26","statements":[{"expression":{"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6126,"name":"whitelistedSenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"28326:18:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6128,"indexExpression":{"id":6127,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"28345:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28326:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28356:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"28326:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6131,"nodeType":"ExpressionStatement","src":"28326:34:26"}]},"functionSelector":"b697f531","id":6133,"implemented":true,"kind":"function","modifiers":[{"id":6124,"kind":"modifierInvocation","modifierName":{"id":6123,"name":"onlyOwner","nameLocations":["28300:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":6335,"src":"28300:9:26"},"nodeType":"ModifierInvocation","src":"28300:9:26"}],"name":"addSender","nameLocation":"28264:9:26","nodeType":"FunctionDefinition","parameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"_sender","nameLocation":"28282:7:26","nodeType":"VariableDeclaration","scope":6133,"src":"28274:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6120,"name":"address","nodeType":"ElementaryTypeName","src":"28274:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28273:17:26"},"returnParameters":{"id":6125,"nodeType":"ParameterList","parameters":[],"src":"28310:0:26"},"scope":6336,"src":"28255:113:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6146,"nodeType":"Block","src":"28454:58:26","statements":[{"expression":{"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6140,"name":"whitelistedSenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"28469:18:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6142,"indexExpression":{"id":6141,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"28488:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28469:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28499:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"28469:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6145,"nodeType":"ExpressionStatement","src":"28469:35:26"}]},"functionSelector":"b2f87643","id":6147,"implemented":true,"kind":"function","modifiers":[{"id":6138,"kind":"modifierInvocation","modifierName":{"id":6137,"name":"onlyOwner","nameLocations":["28444:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":6335,"src":"28444:9:26"},"nodeType":"ModifierInvocation","src":"28444:9:26"}],"name":"removeSender","nameLocation":"28405:12:26","nodeType":"FunctionDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"_sender","nameLocation":"28426:7:26","nodeType":"VariableDeclaration","scope":6147,"src":"28418:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6134,"name":"address","nodeType":"ElementaryTypeName","src":"28418:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28417:17:26"},"returnParameters":{"id":6139,"nodeType":"ParameterList","parameters":[],"src":"28454:0:26"},"scope":6336,"src":"28396:116:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6156,"nodeType":"Block","src":"28574:55:26","statements":[{"expression":{"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6152,"name":"fujiReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"28590:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6153,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"28605:16:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28590:31:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6155,"nodeType":"ExpressionStatement","src":"28590:31:26"}]},"functionSelector":"69d83ed1","id":6157,"implemented":true,"kind":"function","modifiers":[],"name":"addReceiver","nameLocation":"28529:11:26","nodeType":"FunctionDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"_receiverAddress","nameLocation":"28549:16:26","nodeType":"VariableDeclaration","scope":6157,"src":"28541:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6148,"name":"address","nodeType":"ElementaryTypeName","src":"28541:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28540:26:26"},"returnParameters":{"id":6151,"nodeType":"ParameterList","parameters":[],"src":"28574:0:26"},"scope":6336,"src":"28520:109:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[84],"body":{"id":6280,"nodeType":"Block","src":"28895:968:26","statements":[{"expression":{"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6164,"name":"lastReceivedMessageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"28906:21:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6165,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"28930:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28945:9:26","memberName":"messageId","nodeType":"MemberAccess","referencedDeclaration":193,"src":"28930:24:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"28906:48:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6168,"nodeType":"ExpressionStatement","src":"28906:48:26"},{"expression":{"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6169,"name":"lastReceivedText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"28965:16:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6172,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"28995:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29010:4:26","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":199,"src":"28995:19:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29017:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6174,"name":"bytes","nodeType":"ElementaryTypeName","src":"29017:5:26","typeDescriptions":{}}}],"id":6176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"29016:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"}],"expression":{"id":6170,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"28984:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28988:6:26","memberName":"decode","nodeType":"MemberAccess","src":"28984:10:26","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28984:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"28965:59:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":6179,"nodeType":"ExpressionStatement","src":"28965:59:26"},{"assignments":[6181],"declarations":[{"constant":false,"id":6181,"mutability":"mutable","name":"_permissionHash","nameLocation":"29045:15:26","nodeType":"VariableDeclaration","scope":6280,"src":"29037:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29037:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6182,"nodeType":"VariableDeclarationStatement","src":"29037:23:26"},{"assignments":[6184],"declarations":[{"constant":false,"id":6184,"mutability":"mutable","name":"_colectionAddress","nameLocation":"29079:17:26","nodeType":"VariableDeclaration","scope":6280,"src":"29071:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6183,"name":"address","nodeType":"ElementaryTypeName","src":"29071:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6185,"nodeType":"VariableDeclarationStatement","src":"29071:25:26"},{"assignments":[6187],"declarations":[{"constant":false,"id":6187,"mutability":"mutable","name":"_nftId","nameLocation":"29112:6:26","nodeType":"VariableDeclaration","scope":6280,"src":"29107:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint","nodeType":"ElementaryTypeName","src":"29107:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6188,"nodeType":"VariableDeclarationStatement","src":"29107:11:26"},{"expression":{"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6189,"name":"_permissionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"29132:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6190,"name":"_colectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"29149:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6191,"name":"_nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"29168:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6192,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"29131:44:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_address_$_t_uint256_$","typeString":"tuple(bytes32,address,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6195,"name":"lastReceivedText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"29189:16:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},{"components":[{"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29208:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29208:7:26","typeDescriptions":{}}},{"id":6199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29217:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6198,"name":"address","nodeType":"ElementaryTypeName","src":"29217:7:26","typeDescriptions":{}}},{"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29226:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6200,"name":"uint","nodeType":"ElementaryTypeName","src":"29226:4:26","typeDescriptions":{}}}],"id":6202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"29207:24:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(bytes32),type(address),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"},{"typeIdentifier":"t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(bytes32),type(address),type(uint256))"}],"expression":{"id":6193,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29178:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29182:6:26","memberName":"decode","nodeType":"MemberAccess","src":"29178:10:26","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29178:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_address_payable_$_t_uint256_$","typeString":"tuple(bytes32,address payable,uint256)"}},"src":"29131:101:26","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6205,"nodeType":"ExpressionStatement","src":"29131:101:26"},{"assignments":[6208],"declarations":[{"constant":false,"id":6208,"mutability":"mutable","name":"permission","nameLocation":"29269:10:26","nodeType":"VariableDeclaration","scope":6280,"src":"29245:34:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage_ptr","typeString":"struct Horizon.FujiPermissions"},"typeName":{"id":6207,"nodeType":"UserDefinedTypeName","pathNode":{"id":6206,"name":"FujiPermissions","nameLocations":["29245:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3964,"src":"29245:15:26"},"referencedDeclaration":3964,"src":"29245:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage_ptr","typeString":"struct Horizon.FujiPermissions"}},"visibility":"internal"}],"id":6212,"initialValue":{"baseExpression":{"id":6209,"name":"permissionInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"29282:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_FujiPermissions_$3964_storage_$","typeString":"mapping(bytes32 => struct Horizon.FujiPermissions storage ref)"}},"id":6211,"indexExpression":{"id":6210,"name":"_permissionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"29297:15:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29282:31:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage","typeString":"struct Horizon.FujiPermissions storage ref"}},"nodeType":"VariableDeclarationStatement","src":"29245:68:26"},{"assignments":[6215],"declarations":[{"constant":false,"id":6215,"mutability":"mutable","name":"myTitle","nameLocation":"29343:7:26","nodeType":"VariableDeclaration","scope":6280,"src":"29324:26:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"},"typeName":{"id":6214,"nodeType":"UserDefinedTypeName","pathNode":{"id":6213,"name":"TitlesSold","nameLocations":["29324:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"29324:10:26"},"referencedDeclaration":3914,"src":"29324:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold"}},"visibility":"internal"}],"id":6223,"initialValue":{"baseExpression":{"baseExpression":{"id":6216,"name":"titleSoldInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"29353:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold storage ref))"}},"id":6219,"indexExpression":{"expression":{"id":6217,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"29368:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage_ptr","typeString":"struct Horizon.FujiPermissions storage pointer"}},"id":6218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29379:7:26","memberName":"idTitle","nodeType":"MemberAccess","referencedDeclaration":3959,"src":"29368:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29353:34:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TitlesSold_$3914_storage_$","typeString":"mapping(uint256 => struct Horizon.TitlesSold storage ref)"}},"id":6222,"indexExpression":{"expression":{"id":6220,"name":"permission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"29388:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_FujiPermissions_$3964_storage_ptr","typeString":"struct Horizon.FujiPermissions storage pointer"}},"id":6221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29399:10:26","memberName":"contractId","nodeType":"MemberAccess","referencedDeclaration":3961,"src":"29388:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29353:57:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage","typeString":"struct Horizon.TitlesSold storage ref"}},"nodeType":"VariableDeclarationStatement","src":"29324:86:26"},{"expression":{"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6224,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"29423:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":6226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29431:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"29423:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6227,"name":"_nftId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"29445:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29423:28:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6229,"nodeType":"ExpressionStatement","src":"29423:28:26"},{"expression":{"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6230,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"29462:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":6232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29470:19:26","memberName":"colateralRWAAddress","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"29462:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6233,"name":"_colectionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"29492:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29462:47:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6235,"nodeType":"ExpressionStatement","src":"29462:47:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6236,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"29525:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":6237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29533:11:26","memberName":"colateralId","nodeType":"MemberAccess","referencedDeclaration":3902,"src":"29525:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29548:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29525:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6240,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"29553:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":6241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29561:19:26","memberName":"colateralRWAAddress","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"29553:27:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29592:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29584:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6242,"name":"address","nodeType":"ElementaryTypeName","src":"29584:7:26","typeDescriptions":{}}},"id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29584:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29553:41:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29525:69:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6256,"nodeType":"IfStatement","src":"29522:149:26","trueBody":{"id":6255,"nodeType":"Block","src":"29596:75:26","statements":[{"expression":{"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6248,"name":"myTitle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"29611:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_TitlesSold_$3914_storage_ptr","typeString":"struct Horizon.TitlesSold storage pointer"}},"id":6250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"29619:13:26","memberName":"myTitleStatus","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"29611:21:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6251,"name":"MyTitleWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"29635:15:26","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_MyTitleWithdraw_$3853_$","typeString":"type(enum Horizon.MyTitleWithdraw)"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29651:8:26","memberName":"Withdraw","nodeType":"MemberAccess","referencedDeclaration":3851,"src":"29635:24:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"src":"29611:48:26","typeDescriptions":{"typeIdentifier":"t_enum$_MyTitleWithdraw_$3853","typeString":"enum Horizon.MyTitleWithdraw"}},"id":6254,"nodeType":"ExpressionStatement","src":"29611:48:26"}]}},{"eventCall":{"arguments":[{"expression":{"id":6258,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"29705:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29720:9:26","memberName":"messageId","nodeType":"MemberAccess","referencedDeclaration":193,"src":"29705:24:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6260,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"29731:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29746:19:26","memberName":"sourceChainSelector","nodeType":"MemberAccess","referencedDeclaration":195,"src":"29731:34:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"arguments":[{"expression":{"id":6264,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"29778:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29793:6:26","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":197,"src":"29778:21:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29802:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6266,"name":"address","nodeType":"ElementaryTypeName","src":"29802:7:26","typeDescriptions":{}}}],"id":6268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"29801:9:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":6262,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29767:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29771:6:26","memberName":"decode","nodeType":"MemberAccess","src":"29767:10:26","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29767:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"expression":{"id":6272,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"29824:14:26","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29839:4:26","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":199,"src":"29824:19:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29846:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6274,"name":"string","nodeType":"ElementaryTypeName","src":"29846:6:26","typeDescriptions":{}}}],"id":6276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"29845:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":6270,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"29813:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"29817:6:26","memberName":"decode","nodeType":"MemberAccess","src":"29813:10:26","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29813:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6257,"name":"MessageReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"29688:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint64_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,uint64,address,string memory)"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29688:167:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6279,"nodeType":"EmitStatement","src":"29683:172:26"}]},"id":6281,"implemented":true,"kind":"function","modifiers":[],"name":"_ccipReceive","nameLocation":"28682:12:26","nodeType":"FunctionDefinition","overrides":{"id":6162,"nodeType":"OverrideSpecifier","overrides":[],"src":"28750:8:26"},"parameters":{"id":6161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6160,"mutability":"mutable","name":"any2EvmMessage","nameLocation":"28725:14:26","nodeType":"VariableDeclaration","scope":6281,"src":"28696:43:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":6159,"nodeType":"UserDefinedTypeName","pathNode":{"id":6158,"name":"Client.Any2EVMMessage","nameLocations":["28696:6:26","28703:14:26"],"nodeType":"IdentifierPath","referencedDeclaration":204,"src":"28696:21:26"},"referencedDeclaration":204,"src":"28696:21:26","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"28694:46:26"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[],"src":"28895:0:26"},"scope":6336,"src":"28673:1190:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6292,"nodeType":"Block","src":"29973:67:26","statements":[{"expression":{"components":[{"id":6288,"name":"lastReceivedMessageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"29992:21:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6289,"name":"lastReceivedText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"30015:16:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"id":6290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29991:41:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes_storage_$","typeString":"tuple(bytes32,bytes storage ref)"}},"functionReturnParameters":6287,"id":6291,"nodeType":"Return","src":"29984:48:26"}]},"functionSelector":"263596a5","id":6293,"implemented":true,"kind":"function","modifiers":[],"name":"getLastReceivedMessageDetails","nameLocation":"29880:29:26","nodeType":"FunctionDefinition","parameters":{"id":6282,"nodeType":"ParameterList","parameters":[],"src":"29909:2:26"},"returnParameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6284,"mutability":"mutable","name":"messageId","nameLocation":"29943:9:26","nodeType":"VariableDeclaration","scope":6293,"src":"29935:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29935:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6286,"mutability":"mutable","name":"text","nameLocation":"29967:4:26","nodeType":"VariableDeclaration","scope":6293,"src":"29954:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6285,"name":"bytes","nodeType":"ElementaryTypeName","src":"29954:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29934:38:26"},"scope":6336,"src":"29871:169:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6307,"nodeType":"Block","src":"30113:150:26","statements":[{"condition":{"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"30128:46:26","subExpression":{"baseExpression":{"id":6297,"name":"whitelistedSourceChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"30129:23:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"}},"id":6299,"indexExpression":{"id":6298,"name":"_sourceChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"30153:20:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30129:45:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6305,"nodeType":"IfStatement","src":"30124:119:26","trueBody":{"errorCall":{"arguments":[{"id":6302,"name":"_sourceChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"30222:20:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":6301,"name":"SourceChainNotWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"30196:25:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint64_$returns$__$","typeString":"function (uint64) pure"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30196:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6304,"nodeType":"RevertStatement","src":"30189:54:26"}},{"id":6306,"nodeType":"PlaceholderStatement","src":"30254:1:26"}]},"id":6308,"name":"onlyWhitelistedSourceChain","nameLocation":"30057:26:26","nodeType":"ModifierDefinition","parameters":{"id":6296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6295,"mutability":"mutable","name":"_sourceChainSelector","nameLocation":"30091:20:26","nodeType":"VariableDeclaration","scope":6308,"src":"30084:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6294,"name":"uint64","nodeType":"ElementaryTypeName","src":"30084:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30083:29:26"},"src":"30048:215:26","virtual":false,"visibility":"internal"},{"body":{"id":6322,"nodeType":"Block","src":"30320:101:26","statements":[{"condition":{"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"30335:28:26","subExpression":{"baseExpression":{"id":6312,"name":"whitelistedSenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"30336:18:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6314,"indexExpression":{"id":6313,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"30355:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30336:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6320,"nodeType":"IfStatement","src":"30331:70:26","trueBody":{"errorCall":{"arguments":[{"id":6317,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"30393:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6316,"name":"SenderNotWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"30372:20:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30372:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6319,"nodeType":"RevertStatement","src":"30365:36:26"}},{"id":6321,"nodeType":"PlaceholderStatement","src":"30412:1:26"}]},"id":6323,"name":"onlyWhitelistedSenders","nameLocation":"30280:22:26","nodeType":"ModifierDefinition","parameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6310,"mutability":"mutable","name":"_sender","nameLocation":"30311:7:26","nodeType":"VariableDeclaration","scope":6323,"src":"30303:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6309,"name":"address","nodeType":"ElementaryTypeName","src":"30303:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30302:17:26"},"src":"30271:150:26","virtual":false,"visibility":"internal"},{"body":{"id":6334,"nodeType":"Block","src":"30454:92:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6326,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"30473:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30477:6:26","memberName":"sender","nodeType":"MemberAccess","src":"30473:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"30487:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30473:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652063616c6c6572206d75737420626520746865206f776e657221","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30494:31:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfa072e527951346d1016c607bdc92c0913b3832d2cb24b17d8cadca827bfd5","typeString":"literal_string \"The caller must be the owner!\""},"value":"The caller must be the owner!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfa072e527951346d1016c607bdc92c0913b3832d2cb24b17d8cadca827bfd5","typeString":"literal_string \"The caller must be the owner!\""}],"id":6325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30465:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30465:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6332,"nodeType":"ExpressionStatement","src":"30465:61:26"},{"id":6333,"nodeType":"PlaceholderStatement","src":"30537:1:26"}]},"id":6335,"name":"onlyOwner","nameLocation":"30442:9:26","nodeType":"ModifierDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[],"src":"30451:2:26"},"src":"30433:113:26","virtual":false,"visibility":"internal"}],"scope":6337,"src":"793:29756:26","usedErrors":[100],"usedEvents":[3692,3697,3703,3707,3715,3723,3727,3731,3740,3752,3764,3774,3784,3789,3793,3797,3801,3814,3818,3824,3828,3838]}],"src":"33:30516:26"},"id":26},"contracts/HorizonReceipt.sol":{"ast":{"absolutePath":"contracts/HorizonReceipt.sol","exportedSymbols":{"Context":[2176],"ERC165":[2455],"ERC721":[1836],"ERC721Burnable":[2000],"ERC721URIStorage":[2126],"HorizonReceipt":[6417],"IERC165":[2467],"IERC4906":[608],"IERC721":[1953],"IERC721Errors":[702],"IERC721Metadata":[2154],"IERC721Receiver":[1971],"Strings":[2431]},"id":6418,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6338,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6418,"sourceUnit":1837,"src":"61:57:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":6340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6418,"sourceUnit":2127,"src":"120:78:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","id":6341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6418,"sourceUnit":2001,"src":"200:76:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6342,"name":"ERC721","nameLocations":["307:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"307:6:27"},"id":6343,"nodeType":"InheritanceSpecifier","src":"307:6:27"},{"baseName":{"id":6344,"name":"ERC721URIStorage","nameLocations":["315:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"315:16:27"},"id":6345,"nodeType":"InheritanceSpecifier","src":"315:16:27"},{"baseName":{"id":6346,"name":"ERC721Burnable","nameLocations":["333:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"333:14:27"},"id":6347,"nodeType":"InheritanceSpecifier","src":"333:14:27"}],"canonicalName":"HorizonReceipt","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6417,"linearizedBaseContracts":[6417,2000,2126,1836,702,2154,608,1953,2455,2467,2176],"name":"HorizonReceipt","nameLocation":"289:14:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6349,"mutability":"mutable","name":"_nextTokenId","nameLocation":"371:12:27","nodeType":"VariableDeclaration","scope":6417,"src":"355:28:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6348,"name":"uint256","nodeType":"ElementaryTypeName","src":"355:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":6356,"nodeType":"Block","src":"452:2:27","statements":[]},"id":6357,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"486f72697a6f6e52656365697074","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"422:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a8986ed63d4cb22632555718c22e786a1debf15dad4398788efe0f19ef5f51","typeString":"literal_string \"HorizonReceipt\""},"value":"HorizonReceipt"},{"hexValue":"485a52","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"440:5:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_79e7a3a9eccbf826d2c5417faf7157b4b6faf9b9fe2d7ab41e203017e3606e98","typeString":"literal_string \"HZR\""},"value":"HZR"}],"id":6354,"kind":"baseConstructorSpecifier","modifierName":{"id":6351,"name":"ERC721","nameLocations":["415:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"415:6:27"},"nodeType":"ModifierInvocation","src":"415:31:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[],"src":"403:2:27"},"returnParameters":{"id":6355,"nodeType":"ParameterList","parameters":[],"src":"452:0:27"},"scope":6417,"src":"392:62:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6383,"nodeType":"Block","src":"531:148:27","statements":[{"assignments":[6367],"declarations":[{"constant":false,"id":6367,"mutability":"mutable","name":"tokenId","nameLocation":"550:7:27","nodeType":"VariableDeclaration","scope":6383,"src":"542:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6366,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6370,"initialValue":{"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"560:14:27","subExpression":{"id":6368,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"560:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"542:32:27"},{"expression":{"arguments":[{"id":6372,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"595:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6373,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"599:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6371,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1458,1484],"referencedDeclaration":1458,"src":"585:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"585:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6375,"nodeType":"ExpressionStatement","src":"585:22:27"},{"expression":{"arguments":[{"id":6377,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"631:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6378,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"640:3:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6376,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"618:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"618:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6380,"nodeType":"ExpressionStatement","src":"618:26:27"},{"expression":{"id":6381,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"664:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6365,"id":6382,"nodeType":"Return","src":"657:14:27"}]},"functionSelector":"d204c45e","id":6384,"implemented":true,"kind":"function","modifiers":[],"name":"safeMint","nameLocation":"471:8:27","nodeType":"FunctionDefinition","parameters":{"id":6362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"to","nameLocation":"488:2:27","nodeType":"VariableDeclaration","scope":6384,"src":"480:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6358,"name":"address","nodeType":"ElementaryTypeName","src":"480:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6361,"mutability":"mutable","name":"uri","nameLocation":"506:3:27","nodeType":"VariableDeclaration","scope":6384,"src":"492:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6360,"name":"string","nodeType":"ElementaryTypeName","src":"492:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"479:31:27"},"returnParameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6384,"src":"526:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6363,"name":"uint","nodeType":"ElementaryTypeName","src":"526:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"525:6:27"},"scope":6417,"src":"462:217:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1023,2106],"body":{"id":6399,"nodeType":"Block","src":"904:49:27","statements":[{"expression":{"arguments":[{"id":6396,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"937:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6394,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"922:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_HorizonReceipt_$6417_$","typeString":"type(contract super HorizonReceipt)"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"928:8:27","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"922:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6393,"id":6398,"nodeType":"Return","src":"915:30:27"}]},"functionSelector":"c87b56dd","id":6400,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"766:8:27","nodeType":"FunctionDefinition","overrides":{"id":6390,"nodeType":"OverrideSpecifier","overrides":[{"id":6388,"name":"ERC721","nameLocations":["840:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"840:6:27"},{"id":6389,"name":"ERC721URIStorage","nameLocations":["848:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"848:16:27"}],"src":"831:34:27"},"parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"tokenId","nameLocation":"783:7:27","nodeType":"VariableDeclaration","scope":6400,"src":"775:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6385,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"774:17:27"},"returnParameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6400,"src":"884:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6391,"name":"string","nodeType":"ElementaryTypeName","src":"884:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"883:15:27"},"scope":6417,"src":"757:196:27","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[928,2049],"body":{"id":6415,"nodeType":"Block","src":"1111:62:27","statements":[{"expression":{"arguments":[{"id":6412,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"1153:11:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":6410,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1129:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_HorizonReceipt_$6417_$","typeString":"type(contract super HorizonReceipt)"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1135:17:27","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2049,"src":"1129:23:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1129:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6409,"id":6414,"nodeType":"Return","src":"1122:43:27"}]},"functionSelector":"01ffc9a7","id":6416,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"970:17:27","nodeType":"FunctionDefinition","overrides":{"id":6406,"nodeType":"OverrideSpecifier","overrides":[{"id":6404,"name":"ERC721","nameLocations":["1056:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"1056:6:27"},{"id":6405,"name":"ERC721URIStorage","nameLocations":["1064:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"1064:16:27"}],"src":"1047:34:27"},"parameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"interfaceId","nameLocation":"995:11:27","nodeType":"VariableDeclaration","scope":6416,"src":"988:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6401,"name":"bytes4","nodeType":"ElementaryTypeName","src":"988:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"987:20:27"},"returnParameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6416,"src":"1100:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6407,"name":"bool","nodeType":"ElementaryTypeName","src":"1100:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1099:6:27"},"scope":6417,"src":"961:212:27","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":6418,"src":"280:896:27","usedErrors":[660,665,674,679,684,691,696,701],"usedEvents":[600,607,1852,1861,1870]}],"src":"33:1145:27"},"id":27},"contracts/HorizonS.sol":{"ast":{"absolutePath":"contracts/HorizonS.sol","exportedSymbols":{"CCIPReceiver":[119],"Client":[241],"HorizonS":[6966],"IERC20":[319],"IRouterClient":[184],"LinkTokenInterface":[522]},"id":6967,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6419,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"33:23:28"},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol","file":"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol","id":6421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6967,"sourceUnit":185,"src":"60:99:28","symbolAliases":[{"foreign":{"id":6420,"name":"IRouterClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"68:13:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","id":6423,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6967,"sourceUnit":242,"src":"161:84:28","symbolAliases":[{"foreign":{"id":6422,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"169:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol","file":"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol","id":6425,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6967,"sourceUnit":120,"src":"247:99:28","symbolAliases":[{"foreign":{"id":6424,"name":"CCIPReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"255:12:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol","file":"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol","id":6427,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6967,"sourceUnit":320,"src":"348:117:28","symbolAliases":[{"foreign":{"id":6426,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"356:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","file":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","id":6429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6967,"sourceUnit":523,"src":"467:106:28","symbolAliases":[{"foreign":{"id":6428,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"475:18:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6430,"name":"CCIPReceiver","nameLocations":["598:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":119,"src":"598:12:28"},"id":6431,"nodeType":"InheritanceSpecifier","src":"598:12:28"}],"canonicalName":"HorizonS","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6966,"linearizedBaseContracts":[6966,119,331,132],"name":"HorizonS","nameLocation":"586:8:28","nodeType":"ContractDefinition","nodes":[{"errorSelector":"8f0f4206","id":6437,"name":"NotEnoughBalance","nameLocation":"693:16:28","nodeType":"ErrorDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"currentBalance","nameLocation":"718:14:28","nodeType":"VariableDeclaration","scope":6437,"src":"710:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6432,"name":"uint256","nodeType":"ElementaryTypeName","src":"710:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6435,"mutability":"mutable","name":"calculatedFees","nameLocation":"742:14:28","nodeType":"VariableDeclaration","scope":6437,"src":"734:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6434,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"709:48:28"},"src":"687:71:28"},{"errorSelector":"d0d04f60","id":6439,"name":"NothingToWithdraw","nameLocation":"770:17:28","nodeType":"ErrorDefinition","parameters":{"id":6438,"nodeType":"ParameterList","parameters":[],"src":"787:2:28"},"src":"764:26:28"},{"errorSelector":"9d11f563","id":6447,"name":"FailedToWithdrawEth","nameLocation":"802:19:28","nodeType":"ErrorDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"owner","nameLocation":"830:5:28","nodeType":"VariableDeclaration","scope":6447,"src":"822:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6440,"name":"address","nodeType":"ElementaryTypeName","src":"822:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6443,"mutability":"mutable","name":"target","nameLocation":"845:6:28","nodeType":"VariableDeclaration","scope":6447,"src":"837:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6442,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6445,"mutability":"mutable","name":"value","nameLocation":"861:5:28","nodeType":"VariableDeclaration","scope":6447,"src":"853:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:46:28"},"src":"796:72:28"},{"errorSelector":"4651d51a","id":6451,"name":"DestinationChainNotWhitelisted","nameLocation":"880:30:28","nodeType":"ErrorDefinition","parameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6449,"mutability":"mutable","name":"destinationChainSelector","nameLocation":"918:24:28","nodeType":"VariableDeclaration","scope":6451,"src":"911:31:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6448,"name":"uint64","nodeType":"ElementaryTypeName","src":"911:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"910:33:28"},"src":"874:70:28"},{"anonymous":false,"eventSelector":"3d8a9f055772202d2c3c1fddbad930d3dbe588d8692b75b84cee071946282911","id":6465,"name":"MessageSent","nameLocation":"1021:11:28","nodeType":"EventDefinition","parameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"indexed":true,"mutability":"mutable","name":"messageId","nameLocation":"1049:9:28","nodeType":"VariableDeclaration","scope":6465,"src":"1033:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1033:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6455,"indexed":true,"mutability":"mutable","name":"destinationChainSelector","nameLocation":"1075:24:28","nodeType":"VariableDeclaration","scope":6465,"src":"1060:39:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6454,"name":"uint64","nodeType":"ElementaryTypeName","src":"1060:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6457,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"1109:8:28","nodeType":"VariableDeclaration","scope":6465,"src":"1101:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6456,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6459,"indexed":false,"mutability":"mutable","name":"text","nameLocation":"1125:4:28","nodeType":"VariableDeclaration","scope":6465,"src":"1119:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6458,"name":"bytes","nodeType":"ElementaryTypeName","src":"1119:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6461,"indexed":false,"mutability":"mutable","name":"feeToken","nameLocation":"1139:8:28","nodeType":"VariableDeclaration","scope":6465,"src":"1131:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6460,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6463,"indexed":false,"mutability":"mutable","name":"fees","nameLocation":"1157:4:28","nodeType":"VariableDeclaration","scope":6465,"src":"1149:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1032:130:28"},"src":"1015:148:28"},{"anonymous":false,"eventSelector":"90ec910a8f80bb04e184a806e2ae6f8786ef2ae898859a3180f953397edc1201","id":6479,"name":"MessageReceived","nameLocation":"1175:15:28","nodeType":"EventDefinition","parameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"indexed":true,"mutability":"mutable","name":"messageId","nameLocation":"1207:9:28","nodeType":"VariableDeclaration","scope":6479,"src":"1191:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1191:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6469,"indexed":true,"mutability":"mutable","name":"sourceChainSelector","nameLocation":"1233:19:28","nodeType":"VariableDeclaration","scope":6479,"src":"1218:34:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6468,"name":"uint64","nodeType":"ElementaryTypeName","src":"1218:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6471,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1262:6:28","nodeType":"VariableDeclaration","scope":6479,"src":"1254:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6470,"name":"address","nodeType":"ElementaryTypeName","src":"1254:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6473,"indexed":false,"mutability":"mutable","name":"text","nameLocation":"1277:4:28","nodeType":"VariableDeclaration","scope":6479,"src":"1270:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6472,"name":"string","nodeType":"ElementaryTypeName","src":"1270:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6475,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1291:5:28","nodeType":"VariableDeclaration","scope":6479,"src":"1283:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6474,"name":"address","nodeType":"ElementaryTypeName","src":"1283:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6477,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"1306:11:28","nodeType":"VariableDeclaration","scope":6479,"src":"1298:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1190:128:28"},"src":"1169:150:28"},{"anonymous":false,"eventSelector":"619facc3344a864638bdf6b94faebe32fea796eccc10ab263d90da8b44c42be4","id":6485,"name":"CCIPReceiverAdded","nameLocation":"1331:17:28","nodeType":"EventDefinition","parameters":{"id":6484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"indexed":false,"mutability":"mutable","name":"blockchainName","nameLocation":"1356:14:28","nodeType":"VariableDeclaration","scope":6485,"src":"1349:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6480,"name":"string","nodeType":"ElementaryTypeName","src":"1349:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6483,"indexed":false,"mutability":"mutable","name":"receiverAddress","nameLocation":"1380:15:28","nodeType":"VariableDeclaration","scope":6485,"src":"1372:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6482,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1348:48:28"},"src":"1325:72:28"},{"anonymous":false,"eventSelector":"c98322fddcb9467a648bda840e8c0844a6a420e0a62af038077f0de932e72966","id":6489,"name":"CCIPReceiverRemoved","nameLocation":"1409:19:28","nodeType":"EventDefinition","parameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"indexed":false,"mutability":"mutable","name":"_receiverAddress","nameLocation":"1437:16:28","nodeType":"VariableDeclaration","scope":6489,"src":"1429:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6486,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1428:26:28"},"src":"1403:52:28"},{"constant":false,"id":6491,"mutability":"mutable","name":"lastReceivedMessageId","nameLocation":"1479:21:28","nodeType":"VariableDeclaration","scope":6966,"src":"1463:37:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1463:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":6493,"mutability":"mutable","name":"lastReceivedText","nameLocation":"1522:16:28","nodeType":"VariableDeclaration","scope":6966,"src":"1507:31:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6492,"name":"string","nodeType":"ElementaryTypeName","src":"1507:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":6495,"mutability":"mutable","name":"destinationChainSelector","nameLocation":"1558:24:28","nodeType":"VariableDeclaration","scope":6966,"src":"1545:37:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint","nodeType":"ElementaryTypeName","src":"1545:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":6497,"mutability":"mutable","name":"owner","nameLocation":"1599:5:28","nodeType":"VariableDeclaration","scope":6966,"src":"1591:13:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6496,"name":"address","nodeType":"ElementaryTypeName","src":"1591:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"canonicalName":"HorizonS.ReceiverInfo","id":6504,"members":[{"constant":false,"id":6499,"mutability":"mutable","name":"blockchainName","nameLocation":"1670:14:28","nodeType":"VariableDeclaration","scope":6504,"src":"1663:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6498,"name":"string","nodeType":"ElementaryTypeName","src":"1663:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6501,"mutability":"mutable","name":"receiverAddress","nameLocation":"1703:15:28","nodeType":"VariableDeclaration","scope":6504,"src":"1695:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6500,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6503,"mutability":"mutable","name":"isReceiver","nameLocation":"1734:10:28","nodeType":"VariableDeclaration","scope":6504,"src":"1729:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6502,"name":"bool","nodeType":"ElementaryTypeName","src":"1729:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ReceiverInfo","nameLocation":"1639:12:28","nodeType":"StructDefinition","scope":6966,"src":"1632:120:28","visibility":"public"},{"constant":false,"functionSelector":"835b347c","id":6508,"mutability":"mutable","name":"whitelistedDestinationChains","nameLocation":"1856:28:28","nodeType":"VariableDeclaration","scope":6966,"src":"1825:59:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"},"typeName":{"id":6507,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6505,"name":"uint64","nodeType":"ElementaryTypeName","src":"1833:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1825:23:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6506,"name":"bool","nodeType":"ElementaryTypeName","src":"1843:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"1f27166d","id":6513,"mutability":"mutable","name":"ccipReceicers","nameLocation":"1991:13:28","nodeType":"VariableDeclaration","scope":6966,"src":"1935:69:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo)"},"typeName":{"id":6512,"keyName":"receiverAddress","keyNameLocation":"1951:15:28","keyType":{"id":6509,"name":"address","nodeType":"ElementaryTypeName","src":"1943:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1935:48:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6511,"nodeType":"UserDefinedTypeName","pathNode":{"id":6510,"name":"ReceiverInfo","nameLocations":["1970:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":6504,"src":"1970:12:28"},"referencedDeclaration":6504,"src":"1970:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage_ptr","typeString":"struct HorizonS.ReceiverInfo"}}},"visibility":"public"},{"constant":false,"id":6519,"mutability":"mutable","name":"linkToken","nameLocation":"2032:9:28","nodeType":"VariableDeclaration","scope":6966,"src":"2013:93:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"},"typeName":{"id":6515,"nodeType":"UserDefinedTypeName","pathNode":{"id":6514,"name":"LinkTokenInterface","nameLocations":["2013:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":522,"src":"2013:18:28"},"referencedDeclaration":522,"src":"2013:18:28","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}},"value":{"arguments":[{"hexValue":"307835464137363939323261363432383735386662343434353338313565326334333663353743336337","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2063:42:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x5FA769922a6428758fb44453815e2c436c57C3c7"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6516,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"2044:18:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$522_$","typeString":"type(contract LinkTokenInterface)"}},"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2044:62:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}},"visibility":"internal"},{"body":{"id":6540,"nodeType":"Block","src":"2313:91:28","statements":[{"expression":{"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6529,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"2325:9:28","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6531,"name":"_linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"2356:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6530,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"2337:18:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$522_$","typeString":"type(contract LinkTokenInterface)"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2337:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}},"src":"2325:42:28","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}},"id":6534,"nodeType":"ExpressionStatement","src":"2325:42:28"},{"expression":{"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"2378:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6536,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2386:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2390:6:28","memberName":"sender","nodeType":"MemberAccess","src":"2386:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6539,"nodeType":"ExpressionStatement","src":"2378:18:28"}]},"id":6541,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6526,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"2305:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6527,"kind":"baseConstructorSpecifier","modifierName":{"id":6525,"name":"CCIPReceiver","nameLocations":["2292:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":119,"src":"2292:12:28"},"nodeType":"ModifierInvocation","src":"2292:21:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6521,"mutability":"mutable","name":"_router","nameLocation":"2139:7:28","nodeType":"VariableDeclaration","scope":6541,"src":"2131:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6520,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6523,"mutability":"mutable","name":"_linkToken","nameLocation":"2218:10:28","nodeType":"VariableDeclaration","scope":6541,"src":"2210:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6522,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2130:161:28"},"returnParameters":{"id":6528,"nodeType":"ParameterList","parameters":[],"src":"2313:0:28"},"scope":6966,"src":"2119:285:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6555,"nodeType":"Block","src":"2714:81:28","statements":[{"expression":{"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6549,"name":"whitelistedDestinationChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"2725:28:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"}},"id":6551,"indexExpression":{"id":6550,"name":"_destinationChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2754:25:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2725:55:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2783:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2725:62:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6554,"nodeType":"ExpressionStatement","src":"2725:62:28"}]},"documentation":{"id":6542,"nodeType":"StructuredDocumentation","src":"2412:208:28","text":"@dev Whitelists a chain for transactions.\n @notice This function can only be called by the owner.\n @param _destinationChainSelector The selector of the destination chain to be whitelisted."},"functionSelector":"7898d184","id":6556,"implemented":true,"kind":"function","modifiers":[{"id":6547,"kind":"modifierInvocation","modifierName":{"id":6546,"name":"onlyOwner","nameLocations":["2704:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":6965,"src":"2704:9:28"},"nodeType":"ModifierInvocation","src":"2704:9:28"}],"name":"whitelistDestinationChain","nameLocation":"2635:25:28","nodeType":"FunctionDefinition","parameters":{"id":6545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"mutability":"mutable","name":"_destinationChainSelector","nameLocation":"2668:25:28","nodeType":"VariableDeclaration","scope":6556,"src":"2661:32:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6543,"name":"uint64","nodeType":"ElementaryTypeName","src":"2661:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2660:34:28"},"returnParameters":{"id":6548,"nodeType":"ParameterList","parameters":[],"src":"2714:0:28"},"scope":6966,"src":"2626:169:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6570,"nodeType":"Block","src":"3102:82:28","statements":[{"expression":{"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6564,"name":"whitelistedDestinationChains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"3113:28:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bool_$","typeString":"mapping(uint64 => bool)"}},"id":6566,"indexExpression":{"id":6565,"name":"_destinationChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"3142:25:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3113:55:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3171:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3113:63:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6569,"nodeType":"ExpressionStatement","src":"3113:63:28"}]},"documentation":{"id":6557,"nodeType":"StructuredDocumentation","src":"2803:206:28","text":"@dev Denylists a chain for transactions.\n @notice This function can only be called by the owner.\n @param _destinationChainSelector The selector of the destination chain to be denylisted."},"functionSelector":"73645cff","id":6571,"implemented":true,"kind":"function","modifiers":[{"id":6562,"kind":"modifierInvocation","modifierName":{"id":6561,"name":"onlyOwner","nameLocations":["3092:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":6965,"src":"3092:9:28"},"nodeType":"ModifierInvocation","src":"3092:9:28"}],"name":"denylistDestinationChain","nameLocation":"3024:24:28","nodeType":"FunctionDefinition","parameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"_destinationChainSelector","nameLocation":"3056:25:28","nodeType":"VariableDeclaration","scope":6571,"src":"3049:32:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6558,"name":"uint64","nodeType":"ElementaryTypeName","src":"3049:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3048:34:28"},"returnParameters":{"id":6563,"nodeType":"ParameterList","parameters":[],"src":"3102:0:28"},"scope":6966,"src":"3015:169:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6620,"nodeType":"Block","src":"3286:523:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6581,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"3305:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3333:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3325:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6582,"name":"address","nodeType":"ElementaryTypeName","src":"3325:7:28","typeDescriptions":{}}},"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3305:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e74657220612076616c6964206164647265737321","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3337:24:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a4e6cc610269e44f247c87fbd5c83f7818a189fe38c9dad8faef7bd1599b7fd","typeString":"literal_string \"Enter a valid address!\""},"value":"Enter a valid address!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a4e6cc610269e44f247c87fbd5c83f7818a189fe38c9dad8faef7bd1599b7fd","typeString":"literal_string \"Enter a valid address!\""}],"id":6580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3297:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3297:65:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6589,"nodeType":"ExpressionStatement","src":"3297:65:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6591,"name":"ccipReceicers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"3381:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo storage ref)"}},"id":6593,"indexExpression":{"id":6592,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"3395:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3381:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage","typeString":"struct HorizonS.ReceiverInfo storage ref"}},"id":6594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3413:10:28","memberName":"isReceiver","nodeType":"MemberAccess","referencedDeclaration":6503,"src":"3381:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3427:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3381:51:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526563656976657220697320616c7265616479207265676973746572656421","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3434:33:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3198f3066233ecb389a938fd40adc75ed15f9de66bb03b115db890d1b3120ec4","typeString":"literal_string \"Receiver is already registered!\""},"value":"Receiver is already registered!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3198f3066233ecb389a938fd40adc75ed15f9de66bb03b115db890d1b3120ec4","typeString":"literal_string \"Receiver is already registered!\""}],"id":6590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3373:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3373:95:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6599,"nodeType":"ExpressionStatement","src":"3373:95:28"},{"assignments":[6602],"declarations":[{"constant":false,"id":6602,"mutability":"mutable","name":"newReceiver","nameLocation":"3501:11:28","nodeType":"VariableDeclaration","scope":6620,"src":"3481:31:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_memory_ptr","typeString":"struct HorizonS.ReceiverInfo"},"typeName":{"id":6601,"nodeType":"UserDefinedTypeName","pathNode":{"id":6600,"name":"ReceiverInfo","nameLocations":["3481:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":6504,"src":"3481:12:28"},"referencedDeclaration":6504,"src":"3481:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage_ptr","typeString":"struct HorizonS.ReceiverInfo"}},"visibility":"internal"}],"id":6608,"initialValue":{"arguments":[{"id":6604,"name":"_blockchainName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"3559:15:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6605,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"3606:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3649:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6603,"name":"ReceiverInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"3515:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ReceiverInfo_$6504_storage_ptr_$","typeString":"type(struct HorizonS.ReceiverInfo storage pointer)"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3543:14:28","3589:15:28","3637:10:28"],"names":["blockchainName","receiverAddress","isReceiver"],"nodeType":"FunctionCall","src":"3515:150:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_memory_ptr","typeString":"struct HorizonS.ReceiverInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"3481:184:28"},{"expression":{"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6609,"name":"ccipReceicers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"3686:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo storage ref)"}},"id":6611,"indexExpression":{"id":6610,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"3700:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3686:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage","typeString":"struct HorizonS.ReceiverInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6612,"name":"newReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"3720:11:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_memory_ptr","typeString":"struct HorizonS.ReceiverInfo memory"}},"src":"3686:45:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage","typeString":"struct HorizonS.ReceiverInfo storage ref"}},"id":6614,"nodeType":"ExpressionStatement","src":"3686:45:28"},{"eventCall":{"arguments":[{"id":6616,"name":"_blockchainName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"3767:15:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6617,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"3784:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6615,"name":"CCIPReceiverAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"3749:17:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3749:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6619,"nodeType":"EmitStatement","src":"3744:57:28"}]},"functionSelector":"1d5e2947","id":6621,"implemented":true,"kind":"function","modifiers":[{"id":6578,"kind":"modifierInvocation","modifierName":{"id":6577,"name":"onlyOwner","nameLocations":["3277:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":6965,"src":"3277:9:28"},"nodeType":"ModifierInvocation","src":"3277:9:28"}],"name":"addReceiver","nameLocation":"3201:11:28","nodeType":"FunctionDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"_blockchainName","nameLocation":"3227:15:28","nodeType":"VariableDeclaration","scope":6621,"src":"3213:29:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6572,"name":"string","nodeType":"ElementaryTypeName","src":"3213:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6575,"mutability":"mutable","name":"_receiverAddress","nameLocation":"3252:16:28","nodeType":"VariableDeclaration","scope":6621,"src":"3244:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6574,"name":"address","nodeType":"ElementaryTypeName","src":"3244:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3212:57:28"},"returnParameters":{"id":6579,"nodeType":"ParameterList","parameters":[],"src":"3286:0:28"},"scope":6966,"src":"3192:617:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6647,"nodeType":"Block","src":"3884:219:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6629,"name":"ccipReceicers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"3903:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo storage ref)"}},"id":6631,"indexExpression":{"id":6630,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"3917:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3903:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage","typeString":"struct HorizonS.ReceiverInfo storage ref"}},"id":6632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3935:10:28","memberName":"isReceiver","nodeType":"MemberAccess","referencedDeclaration":6503,"src":"3903:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3949:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3903:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526563656976657220697320616c7265616479207265676973746572656421","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3955:33:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3198f3066233ecb389a938fd40adc75ed15f9de66bb03b115db890d1b3120ec4","typeString":"literal_string \"Receiver is already registered!\""},"value":"Receiver is already registered!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3198f3066233ecb389a938fd40adc75ed15f9de66bb03b115db890d1b3120ec4","typeString":"literal_string \"Receiver is already registered!\""}],"id":6628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3895:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3895:94:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6637,"nodeType":"ExpressionStatement","src":"3895:94:28"},{"expression":{"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4002:38:28","subExpression":{"baseExpression":{"id":6638,"name":"ccipReceicers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"4009:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo storage ref)"}},"id":6640,"indexExpression":{"id":6639,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"4023:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4009:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage","typeString":"struct HorizonS.ReceiverInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6642,"nodeType":"ExpressionStatement","src":"4002:38:28"},{"eventCall":{"arguments":[{"id":6644,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"4078:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6643,"name":"CCIPReceiverRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"4058:19:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4058:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6646,"nodeType":"EmitStatement","src":"4053:42:28"}]},"functionSelector":"6552d8b4","id":6648,"implemented":true,"kind":"function","modifiers":[{"id":6626,"kind":"modifierInvocation","modifierName":{"id":6625,"name":"onlyOwner","nameLocations":["3874:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":6965,"src":"3874:9:28"},"nodeType":"ModifierInvocation","src":"3874:9:28"}],"name":"removeReceiver","nameLocation":"3826:14:28","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"_receiverAddress","nameLocation":"3849:16:28","nodeType":"VariableDeclaration","scope":6648,"src":"3841:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6622,"name":"address","nodeType":"ElementaryTypeName","src":"3841:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3840:26:28"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[],"src":"3884:0:28"},"scope":6966,"src":"3817:286:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6769,"nodeType":"Block","src":"4269:1001:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6660,"name":"ccipReceicers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"4288:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo storage ref)"}},"id":6662,"indexExpression":{"id":6661,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"4302:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4288:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage","typeString":"struct HorizonS.ReceiverInfo storage ref"}},"id":6663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4320:15:28","memberName":"receiverAddress","nodeType":"MemberAccess","referencedDeclaration":6501,"src":"4288:47:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4347:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4339:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6664,"name":"address","nodeType":"ElementaryTypeName","src":"4339:7:28","typeDescriptions":{}}},"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4339:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4288:61:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e74657220612076616c6964207265636569766572206164647265737321","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4351:33:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8d9131826db29986b87dbfce77173e048bd1d924e033380286897bd5a50d8b1","typeString":"literal_string \"Enter a valid receiver address!\""},"value":"Enter a valid receiver address!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8d9131826db29986b87dbfce77173e048bd1d924e033380286897bd5a50d8b1","typeString":"literal_string \"Enter a valid receiver address!\""}],"id":6659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4280:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4280:105:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6671,"nodeType":"ExpressionStatement","src":"4280:105:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6673,"name":"ccipReceicers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"4404:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo storage ref)"}},"id":6675,"indexExpression":{"id":6674,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"4418:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4404:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage","typeString":"struct HorizonS.ReceiverInfo storage ref"}},"id":6676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4436:10:28","memberName":"isReceiver","nodeType":"MemberAccess","referencedDeclaration":6503,"src":"4404:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4450:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4404:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686973207265636569766572206973206e6f742077686974656c69737465642079657421","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4456:39:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3939d389695ed8a44af39b829abdb3163eff2b493229e8c7b6307049a27cc2d","typeString":"literal_string \"This receiver is not whitelisted yet!\""},"value":"This receiver is not whitelisted yet!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3939d389695ed8a44af39b829abdb3163eff2b493229e8c7b6307049a27cc2d","typeString":"literal_string \"This receiver is not whitelisted yet!\""}],"id":6672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4396:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4396:100:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6681,"nodeType":"ExpressionStatement","src":"4396:100:28"},{"assignments":[6686],"declarations":[{"constant":false,"id":6686,"mutability":"mutable","name":"evm2AnyMessage","nameLocation":"4538:14:28","nodeType":"VariableDeclaration","scope":6769,"src":"4509:43:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage"},"typeName":{"id":6685,"nodeType":"UserDefinedTypeName","pathNode":{"id":6684,"name":"Client.EVM2AnyMessage","nameLocations":["4509:6:28","4516:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":217,"src":"4509:21:28"},"referencedDeclaration":217,"src":"4509:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_storage_ptr","typeString":"struct Client.EVM2AnyMessage"}},"visibility":"internal"}],"id":6698,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":6688,"name":"ccipReceicers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"4587:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_ReceiverInfo_$6504_storage_$","typeString":"mapping(address => struct HorizonS.ReceiverInfo storage ref)"}},"id":6690,"indexExpression":{"id":6689,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"4601:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4587:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_ReceiverInfo_$6504_storage","typeString":"struct HorizonS.ReceiverInfo storage ref"}},"id":6691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4619:15:28","memberName":"receiverAddress","nodeType":"MemberAccess","referencedDeclaration":6501,"src":"4587:47:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6692,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"4649:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":6695,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"4677:9:28","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}],"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4669:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6693,"name":"address","nodeType":"ElementaryTypeName","src":"4669:7:28","typeDescriptions":{}}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4669:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6687,"name":"_buildCCIPMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"4555:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_EVM2AnyMessage_$217_memory_ptr_$","typeString":"function (address,bytes memory,address) pure returns (struct Client.EVM2AnyMessage memory)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:143:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage memory"}},"nodeType":"VariableDeclarationStatement","src":"4509:189:28"},{"assignments":[6701],"declarations":[{"constant":false,"id":6701,"mutability":"mutable","name":"router","nameLocation":"4725:6:28","nodeType":"VariableDeclaration","scope":6769,"src":"4711:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRouterClient_$184","typeString":"contract IRouterClient"},"typeName":{"id":6700,"nodeType":"UserDefinedTypeName","pathNode":{"id":6699,"name":"IRouterClient","nameLocations":["4711:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":184,"src":"4711:13:28"},"referencedDeclaration":184,"src":"4711:13:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRouterClient_$184","typeString":"contract IRouterClient"}},"visibility":"internal"}],"id":6707,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6703,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4748:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4753:9:28","memberName":"getRouter","nodeType":"MemberAccess","referencedDeclaration":96,"src":"4748:14:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4748:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6702,"name":"IRouterClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"4734:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRouterClient_$184_$","typeString":"type(contract IRouterClient)"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRouterClient_$184","typeString":"contract IRouterClient"}},"nodeType":"VariableDeclarationStatement","src":"4711:54:28"},{"assignments":[6709],"declarations":[{"constant":false,"id":6709,"mutability":"mutable","name":"fees","nameLocation":"4786:4:28","nodeType":"VariableDeclaration","scope":6769,"src":"4778:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4778:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6715,"initialValue":{"arguments":[{"id":6712,"name":"_destinationChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"4807:25:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":6713,"name":"evm2AnyMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4834:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage memory"}],"expression":{"id":6710,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"4793:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRouterClient_$184","typeString":"contract IRouterClient"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4800:6:28","memberName":"getFee","nodeType":"MemberAccess","referencedDeclaration":172,"src":"4793:13:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$217_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4778:71:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6716,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"4866:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"arguments":[{"id":6721,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4901:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}],"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4893:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6719,"name":"address","nodeType":"ElementaryTypeName","src":"4893:7:28","typeDescriptions":{}}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6717,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"4873:9:28","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4883:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":454,"src":"4873:19:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4866:41:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6736,"nodeType":"IfStatement","src":"4862:125:28","trueBody":{"errorCall":{"arguments":[{"arguments":[{"arguments":[{"id":6730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4974:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}],"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4966:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6728,"name":"address","nodeType":"ElementaryTypeName","src":"4966:7:28","typeDescriptions":{}}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6726,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"4946:9:28","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":454,"src":"4946:19:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4946:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6733,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"4982:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6725,"name":"NotEnoughBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"4929:16:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4929:58:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6735,"nodeType":"RevertStatement","src":"4922:65:28"}},{"expression":{"arguments":[{"arguments":[{"id":6742,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"5026:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRouterClient_$184","typeString":"contract IRouterClient"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRouterClient_$184","typeString":"contract IRouterClient"}],"id":6741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6740,"name":"address","nodeType":"ElementaryTypeName","src":"5018:7:28","typeDescriptions":{}}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5018:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6744,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"5035:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6737,"name":"linkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"5000:9:28","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$522","typeString":"contract LinkTokenInterface"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5010:7:28","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":447,"src":"5000:17:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6746,"nodeType":"ExpressionStatement","src":"5000:40:28"},{"expression":{"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6747,"name":"messageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"5053:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6750,"name":"_destinationChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"5081:25:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":6751,"name":"evm2AnyMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"5108:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage memory"}],"expression":{"id":6748,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"5065:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRouterClient_$184","typeString":"contract IRouterClient"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5072:8:28","memberName":"ccipSend","nodeType":"MemberAccess","referencedDeclaration":183,"src":"5065:15:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$217_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:58:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5053:70:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6754,"nodeType":"ExpressionStatement","src":"5053:70:28"},{"eventCall":{"arguments":[{"id":6756,"name":"messageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"5153:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6757,"name":"_destinationChainSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"5164:25:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":6758,"name":"_receiverAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"5191:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6759,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"5209:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"hexValue":"30","id":6762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5224:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5216:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6760,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:28","typeDescriptions":{}}},"id":6763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5216:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6764,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"5228:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6755,"name":"MessageSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"5141:11:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint64,address,bytes memory,address,uint256)"}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5141:92:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6766,"nodeType":"EmitStatement","src":"5136:97:28"},{"expression":{"id":6767,"name":"messageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"5253:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6658,"id":6768,"nodeType":"Return","src":"5246:16:28"}]},"functionSelector":"a30e3770","id":6770,"implemented":true,"kind":"function","modifiers":[],"name":"sendMessagePayLINK","nameLocation":"4120:18:28","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"_destinationChainSelector","nameLocation":"4146:25:28","nodeType":"VariableDeclaration","scope":6770,"src":"4139:32:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6649,"name":"uint64","nodeType":"ElementaryTypeName","src":"4139:6:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6652,"mutability":"mutable","name":"_receiverAddress","nameLocation":"4181:16:28","nodeType":"VariableDeclaration","scope":6770,"src":"4173:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6651,"name":"address","nodeType":"ElementaryTypeName","src":"4173:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6654,"mutability":"mutable","name":"_data","nameLocation":"4212:5:28","nodeType":"VariableDeclaration","scope":6770,"src":"4199:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6653,"name":"bytes","nodeType":"ElementaryTypeName","src":"4199:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4138:80:28"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"messageId","nameLocation":"4259:9:28","nodeType":"VariableDeclaration","scope":6770,"src":"4251:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4251:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4250:19:28"},"scope":6966,"src":"4111:1159:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6816,"nodeType":"Block","src":"5423:452:28","statements":[{"assignments":[6786],"declarations":[{"constant":false,"id":6786,"mutability":"mutable","name":"evm2AnyMessage","nameLocation":"5463:14:28","nodeType":"VariableDeclaration","scope":6816,"src":"5434:43:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage"},"typeName":{"id":6785,"nodeType":"UserDefinedTypeName","pathNode":{"id":6784,"name":"Client.EVM2AnyMessage","nameLocations":["5434:6:28","5441:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":217,"src":"5434:21:28"},"referencedDeclaration":217,"src":"5434:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_storage_ptr","typeString":"struct Client.EVM2AnyMessage"}},"visibility":"internal"}],"id":6813,"initialValue":{"arguments":[{"arguments":[{"id":6791,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"5538:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6789,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5527:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5531:6:28","memberName":"encode","nodeType":"MemberAccess","src":"5527:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5527:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":6795,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"5580:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6793,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5569:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5573:6:28","memberName":"encode","nodeType":"MemberAccess","src":"5569:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5569:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"hexValue":"30","id":6801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5643:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5615:27:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$191_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"},"typeName":{"baseType":{"id":6798,"nodeType":"UserDefinedTypeName","pathNode":{"id":6797,"name":"Client.EVMTokenAmount","nameLocations":["5619:6:28","5626:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":191,"src":"5619:21:28"},"referencedDeclaration":191,"src":"5619:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVMTokenAmount_$191_storage_ptr","typeString":"struct Client.EVMTokenAmount"}},"id":6799,"nodeType":"ArrayTypeName","src":"5619:23:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_storage_$dyn_storage_ptr","typeString":"struct Client.EVMTokenAmount[]"}}},"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_memory_ptr_$dyn_memory_ptr","typeString":"struct Client.EVMTokenAmount memory[] memory"}},{"arguments":[{"arguments":[{"hexValue":"3830305f303030","id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5743:7:28","typeDescriptions":{"typeIdentifier":"t_rational_800000_by_1","typeString":"int_const 800000"},"value":"800_000"},{"hexValue":"66616c7365","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5760:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_800000_by_1","typeString":"int_const 800000"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6805,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"5710:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Client_$241_$","typeString":"type(library Client)"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5717:14:28","memberName":"EVMExtraArgsV1","nodeType":"MemberAccess","referencedDeclaration":225,"src":"5710:21:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EVMExtraArgsV1_$225_storage_ptr_$","typeString":"type(struct Client.EVMExtraArgsV1 storage pointer)"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5733:8:28","5752:6:28"],"names":["gasLimit","strict"],"nodeType":"FunctionCall","src":"5710:57:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EVMExtraArgsV1_$225_memory_ptr","typeString":"struct Client.EVMExtraArgsV1 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_EVMExtraArgsV1_$225_memory_ptr","typeString":"struct Client.EVMExtraArgsV1 memory"}],"expression":{"id":6803,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"5672:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Client_$241_$","typeString":"type(library Client)"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5679:12:28","memberName":"_argsToBytes","nodeType":"MemberAccess","referencedDeclaration":240,"src":"5672:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$225_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"}},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5672:110:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6811,"name":"_feeTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"5807:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_memory_ptr_$dyn_memory_ptr","typeString":"struct Client.EVMTokenAmount memory[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6787,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"5480:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Client_$241_$","typeString":"type(library Client)"}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5487:14:28","memberName":"EVM2AnyMessage","nodeType":"MemberAccess","referencedDeclaration":217,"src":"5480:21:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EVM2AnyMessage_$217_storage_ptr_$","typeString":"type(struct Client.EVM2AnyMessage storage pointer)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5517:8:28","5563:4:28","5601:12:28","5660:9:28","5797:8:28"],"names":["receiver","data","tokenAmounts","extraArgs","feeToken"],"nodeType":"FunctionCall","src":"5480:355:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage memory"}},"nodeType":"VariableDeclarationStatement","src":"5434:401:28"},{"expression":{"id":6814,"name":"evm2AnyMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"5853:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage memory"}},"functionReturnParameters":6781,"id":6815,"nodeType":"Return","src":"5846:21:28"}]},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"_buildCCIPMessage","nameLocation":"5287:17:28","nodeType":"FunctionDefinition","parameters":{"id":6777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"_receiver","nameLocation":"5313:9:28","nodeType":"VariableDeclaration","scope":6817,"src":"5305:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6771,"name":"address","nodeType":"ElementaryTypeName","src":"5305:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"_data","nameLocation":"5337:5:28","nodeType":"VariableDeclaration","scope":6817,"src":"5324:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6773,"name":"bytes","nodeType":"ElementaryTypeName","src":"5324:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6776,"mutability":"mutable","name":"_feeTokenAddress","nameLocation":"5352:16:28","nodeType":"VariableDeclaration","scope":6817,"src":"5344:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6775,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5304:65:28"},"returnParameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6817,"src":"5393:28:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_memory_ptr","typeString":"struct Client.EVM2AnyMessage"},"typeName":{"id":6779,"nodeType":"UserDefinedTypeName","pathNode":{"id":6778,"name":"Client.EVM2AnyMessage","nameLocations":["5393:6:28","5400:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":217,"src":"5393:21:28"},"referencedDeclaration":217,"src":"5393:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$217_storage_ptr","typeString":"struct Client.EVM2AnyMessage"}},"visibility":"internal"}],"src":"5392:30:28"},"scope":6966,"src":"5278:597:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[84],"body":{"id":6873,"nodeType":"Block","src":"5967:407:28","statements":[{"expression":{"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6824,"name":"lastReceivedMessageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"5978:21:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6825,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6002:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6017:9:28","memberName":"messageId","nodeType":"MemberAccess","referencedDeclaration":193,"src":"6002:24:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5978:48:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6828,"nodeType":"ExpressionStatement","src":"5978:48:28"},{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6829,"name":"lastReceivedText","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"6037:16:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6832,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6067:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6082:4:28","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":199,"src":"6067:19:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6089:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6834,"name":"string","nodeType":"ElementaryTypeName","src":"6089:6:28","typeDescriptions":{}}}],"id":6836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6088:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":6830,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6056:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6060:6:28","memberName":"decode","nodeType":"MemberAccess","src":"6056:10:28","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6056:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6037:60:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6839,"nodeType":"ExpressionStatement","src":"6037:60:28"},{"eventCall":{"arguments":[{"expression":{"id":6841,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6131:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6146:9:28","memberName":"messageId","nodeType":"MemberAccess","referencedDeclaration":193,"src":"6131:24:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6843,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6157:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6172:19:28","memberName":"sourceChainSelector","nodeType":"MemberAccess","referencedDeclaration":195,"src":"6157:34:28","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"arguments":[{"expression":{"id":6847,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6204:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6219:6:28","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":197,"src":"6204:21:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6228:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6849,"name":"address","nodeType":"ElementaryTypeName","src":"6228:7:28","typeDescriptions":{}}}],"id":6851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6227:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"}],"expression":{"id":6845,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6193:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6197:6:28","memberName":"decode","nodeType":"MemberAccess","src":"6193:10:28","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6193:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"expression":{"id":6855,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6250:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6265:4:28","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":199,"src":"6250:19:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6272:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6857,"name":"string","nodeType":"ElementaryTypeName","src":"6272:6:28","typeDescriptions":{}}}],"id":6859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6271:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":6853,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6239:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6243:6:28","memberName":"decode","nodeType":"MemberAccess","src":"6239:10:28","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6239:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"baseExpression":{"expression":{"id":6861,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6282:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6297:16:28","memberName":"destTokenAmounts","nodeType":"MemberAccess","referencedDeclaration":203,"src":"6282:31:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_memory_ptr_$dyn_memory_ptr","typeString":"struct Client.EVMTokenAmount memory[] memory"}},"id":6864,"indexExpression":{"hexValue":"30","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6314:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6282:34:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVMTokenAmount_$191_memory_ptr","typeString":"struct Client.EVMTokenAmount memory"}},"id":6865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6317:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":188,"src":"6282:40:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"expression":{"id":6866,"name":"any2EvmMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6324:14:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage memory"}},"id":6867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6339:16:28","memberName":"destTokenAmounts","nodeType":"MemberAccess","referencedDeclaration":203,"src":"6324:31:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EVMTokenAmount_$191_memory_ptr_$dyn_memory_ptr","typeString":"struct Client.EVMTokenAmount memory[] memory"}},"id":6869,"indexExpression":{"hexValue":"30","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6324:34:28","typeDescriptions":{"typeIdentifier":"t_struct$_EVMTokenAmount_$191_memory_ptr","typeString":"struct Client.EVMTokenAmount memory"}},"id":6870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6359:6:28","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":190,"src":"6324:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6840,"name":"MessageReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"6115:15:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint64_$_t_address_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint64,address,string memory,address,uint256)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6115:251:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"EmitStatement","src":"6110:256:28"}]},"id":6874,"implemented":true,"kind":"function","modifiers":[],"name":"_ccipReceive","nameLocation":"5892:12:28","nodeType":"FunctionDefinition","overrides":{"id":6822,"nodeType":"OverrideSpecifier","overrides":[],"src":"5959:8:28"},"parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"any2EvmMessage","nameLocation":"5934:14:28","nodeType":"VariableDeclaration","scope":6874,"src":"5905:43:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_memory_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":6819,"nodeType":"UserDefinedTypeName","pathNode":{"id":6818,"name":"Client.Any2EVMMessage","nameLocations":["5905:6:28","5912:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":204,"src":"5905:21:28"},"referencedDeclaration":204,"src":"5905:21:28","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$204_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"5904:45:28"},"returnParameters":{"id":6823,"nodeType":"ParameterList","parameters":[],"src":"5967:0:28"},"scope":6966,"src":"5883:491:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6877,"nodeType":"Block","src":"6409:2:28","statements":[]},"id":6878,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6875,"nodeType":"ParameterList","parameters":[],"src":"6389:2:28"},"returnParameters":{"id":6876,"nodeType":"ParameterList","parameters":[],"src":"6409:0:28"},"scope":6966,"src":"6382:29:28","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":6917,"nodeType":"Block","src":"6480:262:28","statements":[{"assignments":[6884],"declarations":[{"constant":false,"id":6884,"mutability":"mutable","name":"amount","nameLocation":"6499:6:28","nodeType":"VariableDeclaration","scope":6917,"src":"6491:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6883,"name":"uint256","nodeType":"ElementaryTypeName","src":"6491:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6890,"initialValue":{"expression":{"arguments":[{"id":6887,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6516:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}],"id":6886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6508:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6885,"name":"address","nodeType":"ElementaryTypeName","src":"6508:7:28","typeDescriptions":{}}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6508:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6522:7:28","memberName":"balance","nodeType":"MemberAccess","src":"6508:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6491:38:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6891,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"6546:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6556:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6546:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6897,"nodeType":"IfStatement","src":"6542:43:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6894,"name":"NothingToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"6566:17:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6566:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6896,"nodeType":"RevertStatement","src":"6559:26:28"}},{"assignments":[6899,null],"declarations":[{"constant":false,"id":6899,"mutability":"mutable","name":"sent","nameLocation":"6604:4:28","nodeType":"VariableDeclaration","scope":6917,"src":"6599:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6898,"name":"bool","nodeType":"ElementaryTypeName","src":"6599:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":6906,"initialValue":{"arguments":[{"hexValue":"","id":6904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6647:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":6900,"name":"_beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"6614:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6627:4:28","memberName":"call","nodeType":"MemberAccess","src":"6614:17:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":6902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"6639:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6614:32:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6614:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6598:52:28"},{"condition":{"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6667:5:28","subExpression":{"id":6907,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"6668:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6916,"nodeType":"IfStatement","src":"6663:71:28","trueBody":{"errorCall":{"arguments":[{"expression":{"id":6910,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6701:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6705:6:28","memberName":"sender","nodeType":"MemberAccess","src":"6701:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6912,"name":"_beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"6713:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6913,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"6727:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6909,"name":"FailedToWithdrawEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"6681:19:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6915,"nodeType":"RevertStatement","src":"6674:60:28"}}]},"functionSelector":"51cff8d9","id":6918,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"6428:8:28","nodeType":"FunctionDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"_beneficiary","nameLocation":"6445:12:28","nodeType":"VariableDeclaration","scope":6918,"src":"6437:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6879,"name":"address","nodeType":"ElementaryTypeName","src":"6437:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6436:22:28"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[],"src":"6480:0:28"},"scope":6966,"src":"6419:323:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6952,"nodeType":"Block","src":"6833:189:28","statements":[{"assignments":[6926],"declarations":[{"constant":false,"id":6926,"mutability":"mutable","name":"amount","nameLocation":"6852:6:28","nodeType":"VariableDeclaration","scope":6952,"src":"6844:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6925,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6936,"initialValue":{"arguments":[{"arguments":[{"id":6933,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6894:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HorizonS_$6966","typeString":"contract HorizonS"}],"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6886:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6931,"name":"address","nodeType":"ElementaryTypeName","src":"6886:7:28","typeDescriptions":{}}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6886:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":6928,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"6868:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6927,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"6861:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$319_$","typeString":"type(contract IERC20)"}},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6861:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$319","typeString":"contract IERC20"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6876:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":276,"src":"6861:24:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6861:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6844:56:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6937,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"6917:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6927:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6917:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6943,"nodeType":"IfStatement","src":"6913:43:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6940,"name":"NothingToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"6937:17:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6937:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6942,"nodeType":"RevertStatement","src":"6930:26:28"}},{"expression":{"arguments":[{"id":6948,"name":"_beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"6993:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6949,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"7007:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6945,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"6976:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6944,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"6969:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$319_$","typeString":"type(contract IERC20)"}},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6969:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$319","typeString":"contract IERC20"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6984:8:28","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":286,"src":"6969:23:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6969:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6951,"nodeType":"ExpressionStatement","src":"6969:45:28"}]},"functionSelector":"3aeac4e1","id":6953,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawToken","nameLocation":"6759:13:28","nodeType":"FunctionDefinition","parameters":{"id":6923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6920,"mutability":"mutable","name":"_beneficiary","nameLocation":"6782:12:28","nodeType":"VariableDeclaration","scope":6953,"src":"6774:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6919,"name":"address","nodeType":"ElementaryTypeName","src":"6774:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6922,"mutability":"mutable","name":"_token","nameLocation":"6804:6:28","nodeType":"VariableDeclaration","scope":6953,"src":"6796:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6921,"name":"address","nodeType":"ElementaryTypeName","src":"6796:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6772:39:28"},"returnParameters":{"id":6924,"nodeType":"ParameterList","parameters":[],"src":"6833:0:28"},"scope":6966,"src":"6750:272:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6964,"nodeType":"Block","src":"7050:97:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6956,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7069:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7073:6:28","memberName":"sender","nodeType":"MemberAccess","src":"7069:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"7083:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7069:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204f776e65722063616e2063616c6c20746869732066756e6374696f6e21","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7090:36:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa74c2beecec9c17c96aac3702cfcb1c247042dd9822997272f2c56fd0edc1d5","typeString":"literal_string \"Only Owner can call this function!\""},"value":"Only Owner can call this function!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa74c2beecec9c17c96aac3702cfcb1c247042dd9822997272f2c56fd0edc1d5","typeString":"literal_string \"Only Owner can call this function!\""}],"id":6955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7061:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6962,"nodeType":"ExpressionStatement","src":"7061:66:28"},{"id":6963,"nodeType":"PlaceholderStatement","src":"7138:1:28"}]},"id":6965,"name":"onlyOwner","nameLocation":"7039:9:28","nodeType":"ModifierDefinition","parameters":{"id":6954,"nodeType":"ParameterList","parameters":[],"src":"7048:2:28"},"src":"7030:117:28","virtual":false,"visibility":"internal"}],"scope":6967,"src":"577:6573:28","usedErrors":[100,6437,6439,6447,6451],"usedEvents":[6465,6479,6485,6489]}],"src":"33:7119:28"},"id":28},"contracts/HorizonStaff.sol":{"ast":{"absolutePath":"contracts/HorizonStaff.sol","exportedSymbols":{"HorizonStaff":[7750],"IERC20":[827],"NothingToWithdraw":[6971]},"id":7751,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6968,"literals":["solidity",">=","0.8",".9","<=","0.8",".20"],"nodeType":"PragmaDirective","src":"33:33:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7751,"sourceUnit":828,"src":"70:56:29","symbolAliases":[],"unitAlias":""},{"errorSelector":"d0d04f60","id":6971,"name":"NothingToWithdraw","nameLocation":"136:17:29","nodeType":"ErrorDefinition","parameters":{"id":6970,"nodeType":"ParameterList","parameters":[],"src":"153:2:29"},"src":"130:26:29"},{"abstract":false,"baseContracts":[],"canonicalName":"HorizonStaff","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7750,"linearizedBaseContracts":[7750],"name":"HorizonStaff","nameLocation":"169:12:29","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6974,"mutability":"mutable","name":"scheduleId","nameLocation":"224:10:29","nodeType":"VariableDeclaration","scope":7750,"src":"219:19:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6972,"name":"uint","nodeType":"ElementaryTypeName","src":"219:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"237:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"functionSelector":"afd92762","id":6977,"mutability":"mutable","name":"baseInterestRate","nameLocation":"257:16:29","nodeType":"VariableDeclaration","scope":7750,"src":"245:33:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6975,"name":"uint","nodeType":"ElementaryTypeName","src":"245:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":6976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"276:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"7fca631f","id":6980,"mutability":"mutable","name":"dailyInterestRate","nameLocation":"297:17:29","nodeType":"VariableDeclaration","scope":7750,"src":"285:33:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6978,"name":"uint","nodeType":"ElementaryTypeName","src":"285:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"317:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"id":6983,"mutability":"mutable","name":"oneDay","nameLocation":"330:6:29","nodeType":"VariableDeclaration","scope":7750,"src":"325:16:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6981,"name":"uint","nodeType":"ElementaryTypeName","src":"325:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3630","id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:2:29","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"visibility":"internal"},{"constant":false,"id":6985,"mutability":"mutable","name":"owner","nameLocation":"364:5:29","nodeType":"VariableDeclaration","scope":7750,"src":"356:13:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6984,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"da51e137fbd273174ffcac81ca558daee6ff0b24569cb9bc7086453e280dca27","id":6989,"name":"AdminADD","nameLocation":"402:8:29","nodeType":"EventDefinition","parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"indexed":true,"mutability":"mutable","name":"_wallet","nameLocation":"427:7:29","nodeType":"VariableDeclaration","scope":6989,"src":"411:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6986,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"410:25:29"},"src":"396:40:29"},{"anonymous":false,"eventSelector":"a3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f","id":6993,"name":"AdminRemoved","nameLocation":"448:12:29","nodeType":"EventDefinition","parameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6991,"indexed":true,"mutability":"mutable","name":"_wallet","nameLocation":"477:7:29","nodeType":"VariableDeclaration","scope":6993,"src":"461:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6990,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"460:25:29"},"src":"442:44:29"},{"anonymous":false,"eventSelector":"7afee0f1b802cc0f66c67890e26b4566251859cf2cd8de79b86aed7251d9756a","id":7000,"name":"TokenAdded","nameLocation":"498:10:29","nodeType":"EventDefinition","parameters":{"id":6999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"indexed":false,"mutability":"mutable","name":"tokenAddress","nameLocation":"516:12:29","nodeType":"VariableDeclaration","scope":7000,"src":"509:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":6995,"nodeType":"UserDefinedTypeName","pathNode":{"id":6994,"name":"IERC20","nameLocations":["509:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"509:6:29"},"referencedDeclaration":827,"src":"509:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6998,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"537:6:29","nodeType":"VariableDeclaration","scope":7000,"src":"530:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6997,"name":"string","nodeType":"ElementaryTypeName","src":"530:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"508:36:29"},"src":"492:53:29"},{"anonymous":false,"eventSelector":"1adb68f0a540855cafa9d341c1e94a36fa13b8a15ff602507addfe49c0f018d1","id":7006,"name":"TokenRemoved","nameLocation":"557:12:29","nodeType":"EventDefinition","parameters":{"id":7005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7002,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"577:6:29","nodeType":"VariableDeclaration","scope":7006,"src":"570:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7001,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7004,"indexed":false,"mutability":"mutable","name":"_stablecoin","nameLocation":"593:11:29","nodeType":"VariableDeclaration","scope":7006,"src":"585:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7003,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"569:37:29"},"src":"551:56:29"},{"anonymous":false,"eventSelector":"fc0b6df00175009634ee8493748db715994ef6a2da308acd70658b3b4f3222b1","id":7012,"name":"InstallmentDateUpdated","nameLocation":"619:22:29","nodeType":"EventDefinition","parameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"indexed":false,"mutability":"mutable","name":"_installmentNumber","nameLocation":"647:18:29","nodeType":"VariableDeclaration","scope":7012,"src":"642:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7007,"name":"uint","nodeType":"ElementaryTypeName","src":"642:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7010,"indexed":false,"mutability":"mutable","name":"_dateOfPayment","nameLocation":"672:14:29","nodeType":"VariableDeclaration","scope":7012,"src":"667:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7009,"name":"uint","nodeType":"ElementaryTypeName","src":"667:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"641:46:29"},"src":"613:75:29"},{"anonymous":false,"eventSelector":"5f5dc0ddcbd58755ca8f75ed24dab8604cf01289128dd4a692bdc474c904ffa5","id":7016,"name":"TheInstallmenteIsOnTime","nameLocation":"704:23:29","nodeType":"EventDefinition","parameters":{"id":7015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"indexed":false,"mutability":"mutable","name":"_paymentDelay","nameLocation":"733:13:29","nodeType":"VariableDeclaration","scope":7016,"src":"728:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7013,"name":"uint","nodeType":"ElementaryTypeName","src":"728:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"727:20:29"},"src":"698:50:29"},{"anonymous":false,"eventSelector":"1323840bbd6e53af646a0046b72ff8ea4144b0492c4f6d3614f8ce899804fd04","id":7020,"name":"TheInstallmentIsOneDayLate","nameLocation":"760:26:29","nodeType":"EventDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"indexed":false,"mutability":"mutable","name":"_amountToPay","nameLocation":"792:12:29","nodeType":"VariableDeclaration","scope":7020,"src":"787:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7017,"name":"uint","nodeType":"ElementaryTypeName","src":"787:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"786:19:29"},"src":"754:52:29"},{"anonymous":false,"eventSelector":"7882c1a4f360824e9d02cee7d2b40d77bf44368aae126f3af401776bf5e82483","id":7026,"name":"TheTitleIsCloseToBeCanceled","nameLocation":"818:27:29","nodeType":"EventDefinition","parameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"indexed":false,"mutability":"mutable","name":"currentInterestRate","nameLocation":"851:19:29","nodeType":"VariableDeclaration","scope":7026,"src":"846:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7021,"name":"uint","nodeType":"ElementaryTypeName","src":"846:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7024,"indexed":false,"mutability":"mutable","name":"amountToPay","nameLocation":"877:11:29","nodeType":"VariableDeclaration","scope":7026,"src":"872:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint","nodeType":"ElementaryTypeName","src":"872:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"845:44:29"},"src":"812:78:29"},{"anonymous":false,"eventSelector":"43df8b22d3686d15a6e74163ca342c850bc01d74db643db1d546d2bd2a93c9ec","id":7032,"name":"PaymentIsLate","nameLocation":"902:13:29","nodeType":"EventDefinition","parameters":{"id":7031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"indexed":false,"mutability":"mutable","name":"currentInterestRate","nameLocation":"921:19:29","nodeType":"VariableDeclaration","scope":7032,"src":"916:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7027,"name":"uint","nodeType":"ElementaryTypeName","src":"916:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7030,"indexed":false,"mutability":"mutable","name":"amountToPay","nameLocation":"947:11:29","nodeType":"VariableDeclaration","scope":7032,"src":"942:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7029,"name":"uint","nodeType":"ElementaryTypeName","src":"942:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"915:44:29"},"src":"896:64:29"},{"canonicalName":"HorizonStaff.AdminInfo","id":7037,"members":[{"constant":false,"id":7034,"mutability":"mutable","name":"wallet","nameLocation":"1023:6:29","nodeType":"VariableDeclaration","scope":7037,"src":"1015:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7033,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7036,"mutability":"mutable","name":"isAdmin","nameLocation":"1045:7:29","nodeType":"VariableDeclaration","scope":7037,"src":"1040:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7035,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AdminInfo","nameLocation":"994:9:29","nodeType":"StructDefinition","scope":7750,"src":"987:73:29","visibility":"public"},{"canonicalName":"HorizonStaff.TokenInfo","id":7045,"members":[{"constant":false,"id":7039,"mutability":"mutable","name":"tokenSymbol","nameLocation":"1109:11:29","nodeType":"VariableDeclaration","scope":7045,"src":"1102:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7038,"name":"string","nodeType":"ElementaryTypeName","src":"1102:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7042,"mutability":"mutable","name":"stablecoin","nameLocation":"1138:10:29","nodeType":"VariableDeclaration","scope":7045,"src":"1131:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":7041,"nodeType":"UserDefinedTypeName","pathNode":{"id":7040,"name":"IERC20","nameLocations":["1131:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"1131:6:29"},"referencedDeclaration":827,"src":"1131:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7044,"mutability":"mutable","name":"isStable","nameLocation":"1164:8:29","nodeType":"VariableDeclaration","scope":7045,"src":"1159:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7043,"name":"bool","nodeType":"ElementaryTypeName","src":"1159:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"1073:9:29","nodeType":"StructDefinition","scope":7750,"src":"1066:114:29","visibility":"public"},{"canonicalName":"HorizonStaff.Deadlines","id":7058,"members":[{"constant":false,"id":7047,"mutability":"mutable","name":"installmentNumber","nameLocation":"1219:17:29","nodeType":"VariableDeclaration","scope":7058,"src":"1214:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7046,"name":"uint","nodeType":"ElementaryTypeName","src":"1214:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7049,"mutability":"mutable","name":"participants","nameLocation":"1252:12:29","nodeType":"VariableDeclaration","scope":7058,"src":"1247:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7048,"name":"uint","nodeType":"ElementaryTypeName","src":"1247:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7051,"mutability":"mutable","name":"dateOfPayment","nameLocation":"1280:13:29","nodeType":"VariableDeclaration","scope":7058,"src":"1275:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7050,"name":"uint","nodeType":"ElementaryTypeName","src":"1275:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7053,"mutability":"mutable","name":"dateOfDraw","nameLocation":"1309:10:29","nodeType":"VariableDeclaration","scope":7058,"src":"1304:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7052,"name":"uint","nodeType":"ElementaryTypeName","src":"1304:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7055,"mutability":"mutable","name":"baseInterestRate","nameLocation":"1335:16:29","nodeType":"VariableDeclaration","scope":7058,"src":"1330:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7054,"name":"uint","nodeType":"ElementaryTypeName","src":"1330:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7057,"mutability":"mutable","name":"dailyInterestRate","nameLocation":"1367:17:29","nodeType":"VariableDeclaration","scope":7058,"src":"1362:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7056,"name":"uint","nodeType":"ElementaryTypeName","src":"1362:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Deadlines","nameLocation":"1193:9:29","nodeType":"StructDefinition","scope":7750,"src":"1186:206:29","visibility":"public"},{"constant":false,"functionSelector":"7c4c4b89","id":7064,"mutability":"mutable","name":"allowedCrypto","nameLocation":"1468:13:29","nodeType":"VariableDeclaration","scope":7750,"src":"1420:61:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo)"},"typeName":{"id":7063,"keyName":"coinAddress","keyNameLocation":"1435:11:29","keyType":{"id":7060,"nodeType":"UserDefinedTypeName","pathNode":{"id":7059,"name":"IERC20","nameLocations":["1428:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"1428:6:29"},"referencedDeclaration":827,"src":"1428:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"nodeType":"Mapping","src":"1420:40:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7062,"nodeType":"UserDefinedTypeName","pathNode":{"id":7061,"name":"TokenInfo","nameLocations":["1450:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7045,"src":"1450:9:29"},"referencedDeclaration":7045,"src":"1450:9:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage_ptr","typeString":"struct HorizonStaff.TokenInfo"}}},"visibility":"public"},{"constant":false,"id":7071,"mutability":"mutable","name":"schedule","nameLocation":"1564:8:29","nodeType":"VariableDeclaration","scope":7750,"src":"1488:84:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines))"},"typeName":{"id":7070,"keyName":"_titleId","keyNameLocation":"1501:8:29","keyType":{"id":7065,"name":"uint","nodeType":"ElementaryTypeName","src":"1496:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1488:66:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7069,"keyName":"installmentId","keyNameLocation":"1526:13:29","keyType":{"id":7066,"name":"uint","nodeType":"ElementaryTypeName","src":"1521:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1513:40:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7068,"nodeType":"UserDefinedTypeName","pathNode":{"id":7067,"name":"Deadlines","nameLocations":["1543:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7058,"src":"1543:9:29"},"referencedDeclaration":7058,"src":"1543:9:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage_ptr","typeString":"struct HorizonStaff.Deadlines"}}}},"visibility":"internal"},{"constant":false,"functionSelector":"4f83158a","id":7076,"mutability":"mutable","name":"staff","nameLocation":"1628:5:29","nodeType":"VariableDeclaration","scope":7750,"src":"1579:54:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AdminInfo_$7037_storage_$","typeString":"mapping(address => struct HorizonStaff.AdminInfo)"},"typeName":{"id":7075,"keyName":"adminWallet","keyNameLocation":"1595:11:29","keyType":{"id":7072,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1579:41:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AdminInfo_$7037_storage_$","typeString":"mapping(address => struct HorizonStaff.AdminInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7074,"nodeType":"UserDefinedTypeName","pathNode":{"id":7073,"name":"AdminInfo","nameLocations":["1610:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7037,"src":"1610:9:29"},"referencedDeclaration":7037,"src":"1610:9:29","typeDescriptions":{"typeIdentifier":"t_struct$_AdminInfo_$7037_storage_ptr","typeString":"struct HorizonStaff.AdminInfo"}}},"visibility":"public"},{"constant":false,"id":7079,"mutability":"mutable","name":"stablecoin","nameLocation":"1649:10:29","nodeType":"VariableDeclaration","scope":7750,"src":"1642:17:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":7078,"nodeType":"UserDefinedTypeName","pathNode":{"id":7077,"name":"IERC20","nameLocations":["1642:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"1642:6:29"},"referencedDeclaration":827,"src":"1642:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"},{"body":{"id":7087,"nodeType":"Block","src":"1682:37:29","statements":[{"expression":{"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7082,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"1693:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1701:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1705:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1701:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1693:18:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7086,"nodeType":"ExpressionStatement","src":"1693:18:29"}]},"id":7088,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7080,"nodeType":"ParameterList","parameters":[],"src":"1680:2:29"},"returnParameters":{"id":7081,"nodeType":"ParameterList","parameters":[],"src":"1682:0:29"},"scope":7750,"src":"1668:51:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7126,"nodeType":"Block","src":"1769:308:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7094,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"1792:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1811:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1803:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7095,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:29","typeDescriptions":{}}},"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1792:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e2077616c6c65742063616e277420626520656d70747921","id":7100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1815:30:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_17f9b6b4cecc563bf0903967ba55675beafb4644a25c8495e6e72055d00f1d26","typeString":"literal_string \"Admin wallet can't be empty!\""},"value":"Admin wallet can't be empty!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17f9b6b4cecc563bf0903967ba55675beafb4644a25c8495e6e72055d00f1d26","typeString":"literal_string \"Admin wallet can't be empty!\""}],"id":7093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1784:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:62:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7102,"nodeType":"ExpressionStatement","src":"1784:62:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7104,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"1865:5:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AdminInfo_$7037_storage_$","typeString":"mapping(address => struct HorizonStaff.AdminInfo storage ref)"}},"id":7106,"indexExpression":{"id":7105,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"1871:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1865:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_AdminInfo_$7037_storage","typeString":"struct HorizonStaff.AdminInfo storage ref"}},"id":7107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1880:7:29","memberName":"isAdmin","nodeType":"MemberAccess","referencedDeclaration":7036,"src":"1865:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":7108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1891:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1865:31:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e20616c72656164792072656769737465726564","id":7110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1897:26:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa39f340e4c5dac7de7661cef90ddbb45e9eab57c6b006419779b6eb0d284f18","typeString":"literal_string \"Admin already registered\""},"value":"Admin already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa39f340e4c5dac7de7661cef90ddbb45e9eab57c6b006419779b6eb0d284f18","typeString":"literal_string \"Admin already registered\""}],"id":7103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:67:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7112,"nodeType":"ExpressionStatement","src":"1857:67:29"},{"expression":{"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7113,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"1937:5:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AdminInfo_$7037_storage_$","typeString":"mapping(address => struct HorizonStaff.AdminInfo storage ref)"}},"id":7115,"indexExpression":{"id":7114,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"1943:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1937:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_AdminInfo_$7037_storage","typeString":"struct HorizonStaff.AdminInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7117,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"1987:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2018:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7116,"name":"AdminInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"1954:9:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AdminInfo_$7037_storage_ptr_$","typeString":"type(struct HorizonStaff.AdminInfo storage pointer)"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1979:6:29","2009:7:29"],"names":["wallet","isAdmin"],"nodeType":"FunctionCall","src":"1954:80:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AdminInfo_$7037_memory_ptr","typeString":"struct HorizonStaff.AdminInfo memory"}},"src":"1937:97:29","typeDescriptions":{"typeIdentifier":"t_struct$_AdminInfo_$7037_storage","typeString":"struct HorizonStaff.AdminInfo storage ref"}},"id":7121,"nodeType":"ExpressionStatement","src":"1937:97:29"},{"eventCall":{"arguments":[{"id":7123,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"2061:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7122,"name":"AdminADD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"2052:8:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2052:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7125,"nodeType":"EmitStatement","src":"2047:22:29"}]},"functionSelector":"70480275","id":7127,"implemented":true,"kind":"function","modifiers":[],"name":"addAdmin","nameLocation":"1736:8:29","nodeType":"FunctionDefinition","parameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"_wallet","nameLocation":"1753:7:29","nodeType":"VariableDeclaration","scope":7127,"src":"1745:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7089,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1744:17:29"},"returnParameters":{"id":7092,"nodeType":"ParameterList","parameters":[],"src":"1769:0:29"},"scope":7750,"src":"1727:350:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7160,"nodeType":"Block","src":"2130:217:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7133,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"2154:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2165:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7134,"name":"address","nodeType":"ElementaryTypeName","src":"2165:7:29","typeDescriptions":{}}},"id":7137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2154:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e2077616c6c65742063616e277420626520656d70747921","id":7139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2177:30:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_17f9b6b4cecc563bf0903967ba55675beafb4644a25c8495e6e72055d00f1d26","typeString":"literal_string \"Admin wallet can't be empty!\""},"value":"Admin wallet can't be empty!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17f9b6b4cecc563bf0903967ba55675beafb4644a25c8495e6e72055d00f1d26","typeString":"literal_string \"Admin wallet can't be empty!\""}],"id":7132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2146:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2146:62:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7141,"nodeType":"ExpressionStatement","src":"2146:62:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7143,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"2227:5:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AdminInfo_$7037_storage_$","typeString":"mapping(address => struct HorizonStaff.AdminInfo storage ref)"}},"id":7145,"indexExpression":{"id":7144,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"2233:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2227:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_AdminInfo_$7037_storage","typeString":"struct HorizonStaff.AdminInfo storage ref"}},"id":7146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2242:7:29","memberName":"isAdmin","nodeType":"MemberAccess","referencedDeclaration":7036,"src":"2227:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2253:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2227:30:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2219:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7150,"nodeType":"ExpressionStatement","src":"2219:39:29"},{"expression":{"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2279:21:29","subExpression":{"baseExpression":{"id":7151,"name":"staff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"2286:5:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_AdminInfo_$7037_storage_$","typeString":"mapping(address => struct HorizonStaff.AdminInfo storage ref)"}},"id":7153,"indexExpression":{"id":7152,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"2292:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2286:14:29","typeDescriptions":{"typeIdentifier":"t_struct$_AdminInfo_$7037_storage","typeString":"struct HorizonStaff.AdminInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7155,"nodeType":"ExpressionStatement","src":"2279:21:29"},{"eventCall":{"arguments":[{"id":7157,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"2331:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7156,"name":"AdminRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"2318:12:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2318:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7159,"nodeType":"EmitStatement","src":"2313:26:29"}]},"functionSelector":"1785f53c","id":7161,"implemented":true,"kind":"function","modifiers":[],"name":"removeAdmin","nameLocation":"2094:11:29","nodeType":"FunctionDefinition","parameters":{"id":7130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7129,"mutability":"mutable","name":"_wallet","nameLocation":"2114:7:29","nodeType":"VariableDeclaration","scope":7161,"src":"2106:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7128,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:17:29"},"returnParameters":{"id":7131,"nodeType":"ParameterList","parameters":[],"src":"2130:0:29"},"scope":7750,"src":"2085:262:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7212,"nodeType":"Block","src":"2428:427:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7172,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"2460:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"id":7171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2452:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7170,"name":"address","nodeType":"ElementaryTypeName","src":"2452:7:29","typeDescriptions":{}}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2452:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2484:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2476:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7174,"name":"address","nodeType":"ElementaryTypeName","src":"2476:7:29","typeDescriptions":{}}},"id":7177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2476:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2452:34:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616464726573732063616e6e6f74206265207a65726f","id":7179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2488:30:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682","typeString":"literal_string \"Token address cannot be zero\""},"value":"Token address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682","typeString":"literal_string \"Token address cannot be zero\""}],"id":7169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2444:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2444:75:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7181,"nodeType":"ExpressionStatement","src":"2444:75:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7183,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"2538:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7185,"indexExpression":{"id":7184,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"2552:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2538:26:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"id":7186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2565:10:29","memberName":"stablecoin","nodeType":"MemberAccess","referencedDeclaration":7042,"src":"2538:37:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2594:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2586:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7188,"name":"address","nodeType":"ElementaryTypeName","src":"2586:7:29","typeDescriptions":{}}},"id":7191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7187,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2579:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$827_$","typeString":"type(contract IERC20)"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2579:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"src":"2538:59:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479206164646564","id":7194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2599:21:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309","typeString":"literal_string \"Token already added\""},"value":"Token already added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309","typeString":"literal_string \"Token already added\""}],"id":7182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2530:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:91:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7196,"nodeType":"ExpressionStatement","src":"2530:91:29"},{"expression":{"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7197,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"2634:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7199,"indexExpression":{"id":7198,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"2648:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2634:26:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7201,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"2701:12:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7202,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"2740:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},{"hexValue":"74727565","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2776:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7200,"name":"TokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"2663:9:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenInfo_$7045_storage_ptr_$","typeString":"type(struct HorizonStaff.TokenInfo storage pointer)"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2688:11:29","2728:10:29","2766:8:29"],"names":["tokenSymbol","stablecoin","isStable"],"nodeType":"FunctionCall","src":"2663:129:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_memory_ptr","typeString":"struct HorizonStaff.TokenInfo memory"}},"src":"2634:158:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"id":7206,"nodeType":"ExpressionStatement","src":"2634:158:29"},{"eventCall":{"arguments":[{"id":7208,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"2821:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},{"id":7209,"name":"_tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"2834:12:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7207,"name":"TokenAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"2810:10:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IERC20_$827_$_t_string_memory_ptr_$returns$__$","typeString":"function (contract IERC20,string memory)"}},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7211,"nodeType":"EmitStatement","src":"2805:42:29"}]},"functionSelector":"2c8da560","id":7213,"implemented":true,"kind":"function","modifiers":[],"name":"addToken","nameLocation":"2364:8:29","nodeType":"FunctionDefinition","parameters":{"id":7167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"_stablecoin","nameLocation":"2380:11:29","nodeType":"VariableDeclaration","scope":7213,"src":"2373:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":7163,"nodeType":"UserDefinedTypeName","pathNode":{"id":7162,"name":"IERC20","nameLocations":["2373:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"2373:6:29"},"referencedDeclaration":827,"src":"2373:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7166,"mutability":"mutable","name":"_tokenSymbol","nameLocation":"2407:12:29","nodeType":"VariableDeclaration","scope":7213,"src":"2393:26:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7165,"name":"string","nodeType":"ElementaryTypeName","src":"2393:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2372:48:29"},"returnParameters":{"id":7168,"nodeType":"ParameterList","parameters":[],"src":"2428:0:29"},"scope":7750,"src":"2355:500:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7257,"nodeType":"Block","src":"2911:378:29","statements":[{"assignments":[7220],"declarations":[{"constant":false,"id":7220,"mutability":"mutable","name":"stablecoinAddress","nameLocation":"2935:17:29","nodeType":"VariableDeclaration","scope":7257,"src":"2927:25:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7219,"name":"address","nodeType":"ElementaryTypeName","src":"2927:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7228,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":7223,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"2963:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7225,"indexExpression":{"id":7224,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"2977:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2963:26:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"id":7226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2990:10:29","memberName":"stablecoin","nodeType":"MemberAccess","referencedDeclaration":7042,"src":"2963:37:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}],"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2955:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7221,"name":"address","nodeType":"ElementaryTypeName","src":"2955:7:29","typeDescriptions":{}}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2955:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2927:74:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7230,"name":"stablecoinAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"3022:17:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3051:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3043:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7231,"name":"address","nodeType":"ElementaryTypeName","src":"3043:7:29","typeDescriptions":{}}},"id":7234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3043:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3022:31:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616464726573732063616e6e6f74206265207a65726f","id":7236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3055:30:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682","typeString":"literal_string \"Token address cannot be zero\""},"value":"Token address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682","typeString":"literal_string \"Token address cannot be zero\""}],"id":7229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3014:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:72:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7238,"nodeType":"ExpressionStatement","src":"3014:72:29"},{"assignments":[7241],"declarations":[{"constant":false,"id":7241,"mutability":"mutable","name":"tokenToRemove","nameLocation":"3117:13:29","nodeType":"VariableDeclaration","scope":7257,"src":"3099:31:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage_ptr","typeString":"struct HorizonStaff.TokenInfo"},"typeName":{"id":7240,"nodeType":"UserDefinedTypeName","pathNode":{"id":7239,"name":"TokenInfo","nameLocations":["3099:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7045,"src":"3099:9:29"},"referencedDeclaration":7045,"src":"3099:9:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage_ptr","typeString":"struct HorizonStaff.TokenInfo"}},"visibility":"internal"}],"id":7245,"initialValue":{"baseExpression":{"id":7242,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"3133:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7244,"indexExpression":{"id":7243,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"3147:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3133:26:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3099:60:29"},{"expression":{"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3172:33:29","subExpression":{"baseExpression":{"id":7246,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"3179:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7248,"indexExpression":{"id":7247,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"3193:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3179:26:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7250,"nodeType":"ExpressionStatement","src":"3172:33:29"},{"eventCall":{"arguments":[{"expression":{"id":7252,"name":"tokenToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3236:13:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage_ptr","typeString":"struct HorizonStaff.TokenInfo storage pointer"}},"id":7253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3250:11:29","memberName":"tokenSymbol","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"3236:25:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":7254,"name":"stablecoinAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"3263:17:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7251,"name":"TokenRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"3223:12:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7256,"nodeType":"EmitStatement","src":"3218:63:29"}]},"functionSelector":"5fa7b584","id":7258,"implemented":true,"kind":"function","modifiers":[],"name":"removeToken","nameLocation":"2872:11:29","nodeType":"FunctionDefinition","parameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"_stablecoin","nameLocation":"2891:11:29","nodeType":"VariableDeclaration","scope":7258,"src":"2884:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":7215,"nodeType":"UserDefinedTypeName","pathNode":{"id":7214,"name":"IERC20","nameLocations":["2884:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"2884:6:29"},"referencedDeclaration":827,"src":"2884:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2883:20:29"},"returnParameters":{"id":7218,"nodeType":"ParameterList","parameters":[],"src":"2911:0:29"},"scope":7750,"src":"2863:426:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7351,"nodeType":"Block","src":"3402:1091:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7270,"name":"_numPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"3425:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3425:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756d626572206f66207061796d656e7473206d7573742062652067726561746572207468616e203021","id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3443:44:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_799b33296b6188d48dd20df891f493bb09b5125514c21cec6e49adb781b5c2ce","typeString":"literal_string \"Number of payments must be greater than 0!\""},"value":"Number of payments must be greater than 0!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_799b33296b6188d48dd20df891f493bb09b5125514c21cec6e49adb781b5c2ce","typeString":"literal_string \"Number of payments must be greater than 0!\""}],"id":7269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3417:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3417:71:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7275,"nodeType":"ExpressionStatement","src":"3417:71:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7277,"name":"_closing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"3507:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7278,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3518:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3524:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"3518:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3507:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54686520636c6f73696e67206f66207469746c652073656c6c696e67206d75737420626520696e207468652066757475726521","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3535:53:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3588ec2961678dee5c25a4be9f3ceef2362d1cbf0735b29ec7114b901308d9f","typeString":"literal_string \"The closing of title selling must be in the future!\""},"value":"The closing of title selling must be in the future!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3588ec2961678dee5c25a4be9f3ceef2362d1cbf0735b29ec7114b901308d9f","typeString":"literal_string \"The closing of title selling must be in the future!\""}],"id":7276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3499:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3499:90:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7283,"nodeType":"ExpressionStatement","src":"3499:90:29"},{"assignments":[7285],"declarations":[{"constant":false,"id":7285,"mutability":"mutable","name":"intervalDays","nameLocation":"3607:12:29","nodeType":"VariableDeclaration","scope":7351,"src":"3602:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7284,"name":"uint","nodeType":"ElementaryTypeName","src":"3602:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7287,"initialValue":{"hexValue":"35","id":7286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:9:29","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"nodeType":"VariableDeclarationStatement","src":"3602:29:29"},{"assignments":[7289],"declarations":[{"constant":false,"id":7289,"mutability":"mutable","name":"nextDate","nameLocation":"3704:8:29","nodeType":"VariableDeclaration","scope":7351,"src":"3699:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7288,"name":"uint","nodeType":"ElementaryTypeName","src":"3699:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7293,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7290,"name":"_closing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"3715:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"333030","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3726:3:29","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"src":"3715:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3699:30:29"},{"body":{"id":7340,"nodeType":"Block","src":"3816:567:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7305,"name":"nextDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"3839:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7306,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3850:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3856:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"3850:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3839:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e742064617465206d75737420626520696e207468652066757475726521","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3867:37:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e1a2994d6d24fdabaea9a2bbe196a2703aefd99ae4d47bffb675b980e6f57c1","typeString":"literal_string \"Payment date must be in the future!\""},"value":"Payment date must be in the future!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e1a2994d6d24fdabaea9a2bbe196a2703aefd99ae4d47bffb675b980e6f57c1","typeString":"literal_string \"Payment date must be in the future!\""}],"id":7304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3831:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3831:74:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7311,"nodeType":"ExpressionStatement","src":"3831:74:29"},{"assignments":[7314],"declarations":[{"constant":false,"id":7314,"mutability":"mutable","name":"dates","nameLocation":"3939:5:29","nodeType":"VariableDeclaration","scope":7340,"src":"3922:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_memory_ptr","typeString":"struct HorizonStaff.Deadlines"},"typeName":{"id":7313,"nodeType":"UserDefinedTypeName","pathNode":{"id":7312,"name":"Deadlines","nameLocations":["3922:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7058,"src":"3922:9:29"},"referencedDeclaration":7058,"src":"3922:9:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage_ptr","typeString":"struct HorizonStaff.Deadlines"}},"visibility":"internal"}],"id":7325,"initialValue":{"arguments":[{"id":7316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"3995:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4029:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7318,"name":"nextDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4064:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7319,"name":"nextDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4103:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"333030","id":7320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4114:3:29","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"src":"4103:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7322,"name":"baseInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4187:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7323,"name":"dailyInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"4241:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7315,"name":"Deadlines","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"3947:9:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Deadlines_$7058_storage_ptr_$","typeString":"type(struct HorizonStaff.Deadlines storage pointer)"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3976:17:29","4015:12:29","4049:13:29","4091:10:29","4169:16:29","4222:17:29"],"names":["installmentNumber","participants","dateOfPayment","dateOfDraw","baseInterestRate","dailyInterestRate"],"nodeType":"FunctionCall","src":"3947:327:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_memory_ptr","typeString":"struct HorizonStaff.Deadlines memory"}},"nodeType":"VariableDeclarationStatement","src":"3922:352:29"},{"expression":{"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7326,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"4291:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7329,"indexExpression":{"id":7327,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"4300:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4291:18:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7330,"indexExpression":{"id":7328,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"4310:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4291:21:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7331,"name":"dates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"4315:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_memory_ptr","typeString":"struct HorizonStaff.Deadlines memory"}},"src":"4291:29:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7333,"nodeType":"ExpressionStatement","src":"4291:29:29"},{"expression":{"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7334,"name":"nextDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4337:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7335,"name":"nextDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4348:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7336,"name":"intervalDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"4359:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4348:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4337:34:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7339,"nodeType":"ExpressionStatement","src":"4337:34:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"3792:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7299,"name":"_numPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7262,"src":"3797:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3792:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7341,"initializationExpression":{"assignments":[7295],"declarations":[{"constant":false,"id":7295,"mutability":"mutable","name":"i","nameLocation":"3785:1:29","nodeType":"VariableDeclaration","scope":7341,"src":"3780:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7294,"name":"uint","nodeType":"ElementaryTypeName","src":"3780:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7297,"initialValue":{"hexValue":"31","id":7296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3789:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3780:10:29"},"loopExpression":{"expression":{"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3811:3:29","subExpression":{"id":7301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"3811:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7303,"nodeType":"ExpressionStatement","src":"3811:3:29"},"nodeType":"ForStatement","src":"3775:608:29"},{"assignments":[7343],"declarations":[{"constant":false,"id":7343,"mutability":"mutable","name":"titleSchedule","nameLocation":"4400:13:29","nodeType":"VariableDeclaration","scope":7351,"src":"4395:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7342,"name":"uint","nodeType":"ElementaryTypeName","src":"4395:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7345,"initialValue":{"id":7344,"name":"scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"4416:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4395:31:29"},{"expression":{"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4439:13:29","subExpression":{"id":7346,"name":"scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"4439:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7348,"nodeType":"ExpressionStatement","src":"4439:13:29"},{"expression":{"id":7349,"name":"titleSchedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"4472:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7268,"id":7350,"nodeType":"Return","src":"4465:20:29"}]},"functionSelector":"5294bac8","id":7352,"implemented":true,"kind":"function","modifiers":[],"name":"createSchedule","nameLocation":"3306:14:29","nodeType":"FunctionDefinition","parameters":{"id":7265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"_titleId","nameLocation":"3326:8:29","nodeType":"VariableDeclaration","scope":7352,"src":"3321:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7259,"name":"uint","nodeType":"ElementaryTypeName","src":"3321:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7262,"mutability":"mutable","name":"_numPayments","nameLocation":"3341:12:29","nodeType":"VariableDeclaration","scope":7352,"src":"3336:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7261,"name":"uint","nodeType":"ElementaryTypeName","src":"3336:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7264,"mutability":"mutable","name":"_closing","nameLocation":"3360:8:29","nodeType":"VariableDeclaration","scope":7352,"src":"3355:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7263,"name":"uint","nodeType":"ElementaryTypeName","src":"3355:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3320:49:29"},"returnParameters":{"id":7268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7267,"mutability":"mutable","name":"_scheduleId","nameLocation":"3390:11:29","nodeType":"VariableDeclaration","scope":7352,"src":"3385:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7266,"name":"uint","nodeType":"ElementaryTypeName","src":"3385:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3384:18:29"},"scope":7750,"src":"3297:1196:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7430,"nodeType":"Block","src":"4603:781:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7362,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"4627:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4648:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4627:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7374616c6c6d656e74206e756d626572206d7573742062652067726561746572207468616e207a65726f21","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4651:47:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f45b6b2d63e4363890c9bdbb5653729a30ed80952bd9f494911b9e061f499b3","typeString":"literal_string \"Installment number must be greater than zero!\""},"value":"Installment number must be greater than zero!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f45b6b2d63e4363890c9bdbb5653729a30ed80952bd9f494911b9e061f499b3","typeString":"literal_string \"Installment number must be greater than zero!\""}],"id":7361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4619:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:80:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7367,"nodeType":"ExpressionStatement","src":"4619:80:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":7369,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"4718:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7371,"indexExpression":{"id":7370,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"4727:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4718:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7373,"indexExpression":{"id":7372,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"4740:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4718:41:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4760:17:29","memberName":"installmentNumber","nodeType":"MemberAccess","referencedDeclaration":7047,"src":"4718:59:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7375,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"4781:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4718:81:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7374616c6c6d656e74206e756d626572206d75737420657869737421","id":7377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4801:32:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_20d2c36b86279c293924b89cea9ef8e5174b8eec2ed6647db15e9b33dde4bf36","typeString":"literal_string \"Installment number must exist!\""},"value":"Installment number must exist!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20d2c36b86279c293924b89cea9ef8e5174b8eec2ed6647db15e9b33dde4bf36","typeString":"literal_string \"Installment number must exist!\""}],"id":7368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4710:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4710:124:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7379,"nodeType":"ExpressionStatement","src":"4710:124:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7381,"name":"_dateOfPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"4853:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"baseExpression":{"id":7382,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"4870:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7384,"indexExpression":{"id":7383,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"4879:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4870:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7386,"indexExpression":{"id":7385,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"4892:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4870:41:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4912:13:29","memberName":"dateOfPayment","nodeType":"MemberAccess","referencedDeclaration":7051,"src":"4870:55:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4853:72:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e206f6e6c7920706f7374706f6e6520746865207061796d656e7421","id":7389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4927:36:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_17f651260aadf975c3f7ef08b67604098dcf4ee42a47f5a2ddc09ebf6a446ba8","typeString":"literal_string \"You can only postpone the payment!\""},"value":"You can only postpone the payment!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17f651260aadf975c3f7ef08b67604098dcf4ee42a47f5a2ddc09ebf6a446ba8","typeString":"literal_string \"You can only postpone the payment!\""}],"id":7380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4845:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4845:119:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7391,"nodeType":"ExpressionStatement","src":"4845:119:29"},{"assignments":[7393],"declarations":[{"constant":false,"id":7393,"mutability":"mutable","name":"nextDate","nameLocation":"4982:8:29","nodeType":"VariableDeclaration","scope":7430,"src":"4977:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint","nodeType":"ElementaryTypeName","src":"4977:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7398,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7394,"name":"_dateOfPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"4993:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"hexValue":"31","id":7395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5011:9:29","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"1"}],"id":7396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5010:11:29","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"}},"src":"4993:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4977:44:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7400,"name":"nextDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"5042:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"expression":{"baseExpression":{"baseExpression":{"id":7401,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"5054:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7403,"indexExpression":{"id":7402,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"5063:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5054:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7407,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7404,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"5076:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5097:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5076:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5054:45:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5100:13:29","memberName":"dateOfPayment","nodeType":"MemberAccess","referencedDeclaration":7051,"src":"5054:59:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5053:61:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5042:72:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5117:9:29","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"src":"5042:84:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742068617665206120706572696f64206f662033302064617973206265747765656e20696e7374616c6c6d656e747321","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5128:53:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fa2eb2d0c3f0148218220919aa3c98b30c65ee22edeba89aa01e251eb942143","typeString":"literal_string \"Must have a period of 30 days between installments!\""},"value":"Must have a period of 30 days between installments!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fa2eb2d0c3f0148218220919aa3c98b30c65ee22edeba89aa01e251eb942143","typeString":"literal_string \"Must have a period of 30 days between installments!\""}],"id":7399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5034:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5034:148:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7415,"nodeType":"ExpressionStatement","src":"5034:148:29"},{"expression":{"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":7416,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"5228:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7419,"indexExpression":{"id":7417,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"5237:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5228:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7420,"indexExpression":{"id":7418,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"5250:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5228:41:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5270:13:29","memberName":"dateOfPayment","nodeType":"MemberAccess","referencedDeclaration":7051,"src":"5228:55:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7422,"name":"_dateOfPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"5286:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5228:72:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7424,"nodeType":"ExpressionStatement","src":"5228:72:29"},{"eventCall":{"arguments":[{"id":7426,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"5341:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7427,"name":"_dateOfPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"5361:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7425,"name":"InstallmentDateUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"5318:22:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5318:58:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7429,"nodeType":"EmitStatement","src":"5313:63:29"}]},"functionSelector":"559006c2","id":7431,"implemented":true,"kind":"function","modifiers":[],"name":"updatePaymentDate","nameLocation":"4514:17:29","nodeType":"FunctionDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7354,"mutability":"mutable","name":"_scheduleId","nameLocation":"4537:11:29","nodeType":"VariableDeclaration","scope":7431,"src":"4532:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7353,"name":"uint","nodeType":"ElementaryTypeName","src":"4532:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7356,"mutability":"mutable","name":"_installmentNumber","nameLocation":"4555:18:29","nodeType":"VariableDeclaration","scope":7431,"src":"4550:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7355,"name":"uint","nodeType":"ElementaryTypeName","src":"4550:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7358,"mutability":"mutable","name":"_dateOfPayment","nameLocation":"4580:14:29","nodeType":"VariableDeclaration","scope":7431,"src":"4575:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7357,"name":"uint","nodeType":"ElementaryTypeName","src":"4575:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4531:64:29"},"returnParameters":{"id":7360,"nodeType":"ParameterList","parameters":[],"src":"4603:0:29"},"scope":7750,"src":"4505:879:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7452,"nodeType":"Block","src":"5470:118:29","statements":[{"assignments":[7440],"declarations":[{"constant":false,"id":7440,"mutability":"mutable","name":"deadline","nameLocation":"5499:8:29","nodeType":"VariableDeclaration","scope":7452,"src":"5481:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage_ptr","typeString":"struct HorizonStaff.Deadlines"},"typeName":{"id":7439,"nodeType":"UserDefinedTypeName","pathNode":{"id":7438,"name":"Deadlines","nameLocations":["5481:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7058,"src":"5481:9:29"},"referencedDeclaration":7058,"src":"5481:9:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage_ptr","typeString":"struct HorizonStaff.Deadlines"}},"visibility":"internal"}],"id":7446,"initialValue":{"baseExpression":{"baseExpression":{"id":7441,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"5510:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7443,"indexExpression":{"id":7442,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"5519:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5510:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7445,"indexExpression":{"id":7444,"name":"_drawNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"5532:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5510:34:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5481:63:29"},{"expression":{"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5557:23:29","subExpression":{"expression":{"id":7447,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"5557:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage_ptr","typeString":"struct HorizonStaff.Deadlines storage pointer"}},"id":7449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5566:12:29","memberName":"participants","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"5557:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7451,"nodeType":"ExpressionStatement","src":"5557:23:29"}]},"functionSelector":"ac066fa2","id":7453,"implemented":true,"kind":"function","modifiers":[],"name":"addParticipantsToDraw","nameLocation":"5405:21:29","nodeType":"FunctionDefinition","parameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7433,"mutability":"mutable","name":"_scheduleId","nameLocation":"5432:11:29","nodeType":"VariableDeclaration","scope":7453,"src":"5427:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7432,"name":"uint","nodeType":"ElementaryTypeName","src":"5427:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7435,"mutability":"mutable","name":"_drawNumber","nameLocation":"5450:11:29","nodeType":"VariableDeclaration","scope":7453,"src":"5445:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7434,"name":"uint","nodeType":"ElementaryTypeName","src":"5445:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5426:36:29"},"returnParameters":{"id":7437,"nodeType":"ParameterList","parameters":[],"src":"5470:0:29"},"scope":7750,"src":"5396:192:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7565,"nodeType":"Block","src":"5739:1296:29","statements":[{"assignments":[7465],"declarations":[{"constant":false,"id":7465,"mutability":"mutable","name":"inicialValue","nameLocation":"5762:12:29","nodeType":"VariableDeclaration","scope":7565,"src":"5757:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7464,"name":"uint","nodeType":"ElementaryTypeName","src":"5757:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7467,"initialValue":{"id":7466,"name":"_inicialInstallment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"5777:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5757:39:29"},{"assignments":[7469],"declarations":[{"constant":false,"id":7469,"mutability":"mutable","name":"currentInterestRate","nameLocation":"5812:19:29","nodeType":"VariableDeclaration","scope":7565,"src":"5807:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7468,"name":"uint","nodeType":"ElementaryTypeName","src":"5807:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7470,"nodeType":"VariableDeclarationStatement","src":"5807:24:29"},{"assignments":[7472],"declarations":[{"constant":false,"id":7472,"mutability":"mutable","name":"amountToPay","nameLocation":"5847:11:29","nodeType":"VariableDeclaration","scope":7565,"src":"5842:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7471,"name":"uint","nodeType":"ElementaryTypeName","src":"5842:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7473,"nodeType":"VariableDeclarationStatement","src":"5842:16:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7474,"name":"_paymentDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"5876:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7475,"name":"oneDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"5892:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5876:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7561,"nodeType":"Block","src":"6219:780:29","statements":[{"assignments":[7507],"declarations":[{"constant":false,"id":7507,"mutability":"mutable","name":"daily","nameLocation":"6299:5:29","nodeType":"VariableDeclaration","scope":7561,"src":"6294:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7506,"name":"uint","nodeType":"ElementaryTypeName","src":"6294:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7514,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":7508,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"6307:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7510,"indexExpression":{"id":7509,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"6316:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7512,"indexExpression":{"id":7511,"name":"_inicialInstallment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"6329:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:42:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6350:17:29","memberName":"dailyInterestRate","nodeType":"MemberAccess","referencedDeclaration":7057,"src":"6307:60:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6294:73:29"},{"assignments":[7516],"declarations":[{"constant":false,"id":7516,"mutability":"mutable","name":"totalDailyInterest","nameLocation":"6389:18:29","nodeType":"VariableDeclaration","scope":7561,"src":"6384:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7515,"name":"uint","nodeType":"ElementaryTypeName","src":"6384:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7523,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7517,"name":"_paymentDelay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7455,"src":"6411:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7518,"name":"oneDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"6427:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6411:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6410:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7521,"name":"daily","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7507,"src":"6437:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6410:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6384:58:29"},{"expression":{"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7524,"name":"currentInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"6459:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7525,"name":"baseInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"6481:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7526,"name":"totalDailyInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"6500:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6481:37:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6459:59:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7529,"nodeType":"ExpressionStatement","src":"6459:59:29"},{"assignments":[7531],"declarations":[{"constant":false,"id":7531,"mutability":"mutable","name":"valueWithInterests","nameLocation":"6540:18:29","nodeType":"VariableDeclaration","scope":7561,"src":"6535:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7530,"name":"uint","nodeType":"ElementaryTypeName","src":"6535:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7538,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7532,"name":"inicialValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"6562:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7533,"name":"currentInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"6577:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6562:34:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6561:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6600:3:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6561:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6535:68:29"},{"expression":{"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7539,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"6704:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7540,"name":"inicialValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"6718:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7541,"name":"valueWithInterests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"6733:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6718:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6704:47:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7544,"nodeType":"ExpressionStatement","src":"6704:47:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7545,"name":"currentInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"6771:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3430","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6793:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"src":"6771:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7559,"nodeType":"Block","src":"6901:87:29","statements":[{"eventCall":{"arguments":[{"id":7555,"name":"currentInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"6939:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7556,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"6960:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7554,"name":"PaymentIsLate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"6925:13:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6925:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7558,"nodeType":"EmitStatement","src":"6920:52:29"}]},"id":7560,"nodeType":"IfStatement","src":"6768:220:29","trueBody":{"id":7553,"nodeType":"Block","src":"6796:101:29","statements":[{"eventCall":{"arguments":[{"id":7549,"name":"currentInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"6848:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7550,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"6869:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7548,"name":"TheTitleIsCloseToBeCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"6820:27:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6820:61:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7552,"nodeType":"EmitStatement","src":"6815:66:29"}]}}]},"id":7562,"nodeType":"IfStatement","src":"5873:1126:29","trueBody":{"id":7505,"nodeType":"Block","src":"5899:316:29","statements":[{"expression":{"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7477,"name":"currentInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"5914:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":7478,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"5936:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7480,"indexExpression":{"id":7479,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"5945:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5936:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7482,"indexExpression":{"id":7481,"name":"_inicialInstallment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"5958:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5936:42:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5979:16:29","memberName":"baseInterestRate","nodeType":"MemberAccess","referencedDeclaration":7055,"src":"5936:59:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5914:81:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7485,"nodeType":"ExpressionStatement","src":"5914:81:29"},{"assignments":[7487],"declarations":[{"constant":false,"id":7487,"mutability":"mutable","name":"valueWithInterest","nameLocation":"6017:17:29","nodeType":"VariableDeclaration","scope":7505,"src":"6012:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7486,"name":"uint","nodeType":"ElementaryTypeName","src":"6012:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7494,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7488,"name":"inicialValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"6038:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7489,"name":"currentInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"6053:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:34:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7491,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6037:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6076:3:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6037:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6012:67:29"},{"expression":{"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7495,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"6096:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7496,"name":"inicialValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"6110:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7497,"name":"valueWithInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7487,"src":"6125:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6110:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6096:46:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7500,"nodeType":"ExpressionStatement","src":"6096:46:29"},{"eventCall":{"arguments":[{"id":7502,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"6191:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7501,"name":"TheInstallmentIsOneDayLate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"6164:26:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6164:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7504,"nodeType":"EmitStatement","src":"6159:44:29"}]}},{"expression":{"id":7563,"name":"amountToPay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"7016:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7463,"id":7564,"nodeType":"Return","src":"7009:18:29"}]},"functionSelector":"2b187755","id":7566,"implemented":true,"kind":"function","modifiers":[],"name":"calculateDelayedPayment","nameLocation":"5628:23:29","nodeType":"FunctionDefinition","parameters":{"id":7460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7455,"mutability":"mutable","name":"_paymentDelay","nameLocation":"5657:13:29","nodeType":"VariableDeclaration","scope":7566,"src":"5652:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7454,"name":"uint","nodeType":"ElementaryTypeName","src":"5652:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7457,"mutability":"mutable","name":"_scheduleId","nameLocation":"5677:11:29","nodeType":"VariableDeclaration","scope":7566,"src":"5672:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7456,"name":"uint","nodeType":"ElementaryTypeName","src":"5672:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7459,"mutability":"mutable","name":"_inicialInstallment","nameLocation":"5695:19:29","nodeType":"VariableDeclaration","scope":7566,"src":"5690:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7458,"name":"uint","nodeType":"ElementaryTypeName","src":"5690:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5651:64:29"},"returnParameters":{"id":7463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7566,"src":"5733:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7461,"name":"uint","nodeType":"ElementaryTypeName","src":"5733:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5732:6:29"},"scope":7750,"src":"5619:1416:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7581,"nodeType":"Block","src":"7107:95:29","statements":[{"expression":{"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7573,"name":"baseInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"7125:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7574,"name":"_baseRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"7144:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7125:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7576,"nodeType":"ExpressionStatement","src":"7125:28:29"},{"expression":{"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7577,"name":"dailyInterestRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"7164:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7578,"name":"_dailyRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"7184:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7164:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7580,"nodeType":"ExpressionStatement","src":"7164:30:29"}]},"functionSelector":"b4f9a7e0","id":7582,"implemented":true,"kind":"function","modifiers":[],"name":"updateInterest","nameLocation":"7052:14:29","nodeType":"FunctionDefinition","parameters":{"id":7571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"mutability":"mutable","name":"_baseRate","nameLocation":"7072:9:29","nodeType":"VariableDeclaration","scope":7582,"src":"7067:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7567,"name":"uint","nodeType":"ElementaryTypeName","src":"7067:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7570,"mutability":"mutable","name":"_dailyRate","nameLocation":"7088:10:29","nodeType":"VariableDeclaration","scope":7582,"src":"7083:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7569,"name":"uint","nodeType":"ElementaryTypeName","src":"7083:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7066:33:29"},"returnParameters":{"id":7572,"nodeType":"ParameterList","parameters":[],"src":"7107:0:29"},"scope":7750,"src":"7043:159:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7632,"nodeType":"Block","src":"7300:412:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7591,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"7323:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7593,"indexExpression":{"id":7592,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"7337:13:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7323:28:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"id":7594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7352:8:29","memberName":"isStable","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"7323:37:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7364:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7323:45:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420616c6c6f776564","id":7597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7370:19:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b","typeString":"literal_string \"Token not allowed\""},"value":"Token not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b318a5ee46f86f39aed1f4d1664d882d10cd5f107f7744b083b8f848bbae3c7b","typeString":"literal_string \"Token not allowed\""}],"id":7590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7315:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7315:75:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7599,"nodeType":"ExpressionStatement","src":"7315:75:29"},{"expression":{"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7600,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"7403:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":7601,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"7416:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7603,"indexExpression":{"id":7602,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"7430:13:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7416:28:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"id":7604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7445:10:29","memberName":"stablecoin","nodeType":"MemberAccess","referencedDeclaration":7042,"src":"7416:39:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"src":"7403:52:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":7606,"nodeType":"ExpressionStatement","src":"7403:52:29"},{"assignments":[7608],"declarations":[{"constant":false,"id":7608,"mutability":"mutable","name":"amount","nameLocation":"7473:6:29","nodeType":"VariableDeclaration","scope":7632,"src":"7468:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7607,"name":"uint","nodeType":"ElementaryTypeName","src":"7468:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7616,"initialValue":{"arguments":[{"arguments":[{"id":7613,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7511:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_HorizonStaff_$7750","typeString":"contract HorizonStaff"}],"id":7612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7503:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7611,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:29","typeDescriptions":{}}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7503:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7609,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"7482:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7493:9:29","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":784,"src":"7482:20:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7482:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7468:49:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"7585:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7595:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7585:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7624,"nodeType":"IfStatement","src":"7581:69:29","trueBody":{"id":7623,"nodeType":"Block","src":"7597:53:29","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7620,"name":"NothingToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"7619:17:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7619:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7622,"nodeType":"RevertStatement","src":"7612:26:29"}]}},{"expression":{"arguments":[{"id":7628,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"7690:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"7697:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7625,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"7670:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7681:8:29","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":794,"src":"7670:19:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7631,"nodeType":"ExpressionStatement","src":"7670:34:29"}]},"functionSelector":"668fb6dc","id":7633,"implemented":true,"kind":"function","modifiers":[{"id":7588,"kind":"modifierInvocation","modifierName":{"id":7587,"name":"onlyOwner","nameLocations":["7290:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7749,"src":"7290:9:29"},"nodeType":"ModifierInvocation","src":"7290:9:29"}],"name":"withdrawProtocolFee","nameLocation":"7241:19:29","nodeType":"FunctionDefinition","parameters":{"id":7586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7585,"mutability":"mutable","name":"_tokenAddress","nameLocation":"7268:13:29","nodeType":"VariableDeclaration","scope":7633,"src":"7261:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":7584,"nodeType":"UserDefinedTypeName","pathNode":{"id":7583,"name":"IERC20","nameLocations":["7261:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"7261:6:29"},"referencedDeclaration":827,"src":"7261:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"7260:22:29"},"returnParameters":{"id":7589,"nodeType":"ParameterList","parameters":[],"src":"7300:0:29"},"scope":7750,"src":"7232:480:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7672,"nodeType":"Block","src":"7847:257:29","statements":[{"assignments":[7647],"declarations":[{"constant":false,"id":7647,"mutability":"mutable","name":"symbol","nameLocation":"7876:6:29","nodeType":"VariableDeclaration","scope":7672,"src":"7862:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7646,"name":"string","nodeType":"ElementaryTypeName","src":"7862:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7652,"initialValue":{"expression":{"baseExpression":{"id":7648,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"7885:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7650,"indexExpression":{"id":7649,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"7899:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7885:26:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"id":7651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7912:11:29","memberName":"tokenSymbol","nodeType":"MemberAccess","referencedDeclaration":7039,"src":"7885:38:29","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7862:61:29"},{"expression":{"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7653,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"7934:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":7654,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"7947:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7656,"indexExpression":{"id":7655,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"7961:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7947:26:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"id":7657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7974:10:29","memberName":"stablecoin","nodeType":"MemberAccess","referencedDeclaration":7042,"src":"7947:37:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"src":"7934:50:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"id":7659,"nodeType":"ExpressionStatement","src":"7934:50:29"},{"assignments":[7661],"declarations":[{"constant":false,"id":7661,"mutability":"mutable","name":"isStable","nameLocation":"8000:8:29","nodeType":"VariableDeclaration","scope":7672,"src":"7995:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7660,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7666,"initialValue":{"expression":{"baseExpression":{"id":7662,"name":"allowedCrypto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"8011:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_contract$_IERC20_$827_$_t_struct$_TokenInfo_$7045_storage_$","typeString":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo storage ref)"}},"id":7664,"indexExpression":{"id":7663,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"8025:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8011:26:29","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$7045_storage","typeString":"struct HorizonStaff.TokenInfo storage ref"}},"id":7665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8038:8:29","memberName":"isStable","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"8011:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7995:51:29"},{"expression":{"components":[{"id":7667,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"8067:6:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7668,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"8075:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},{"id":7669,"name":"isStable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7661,"src":"8087:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8066:30:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_contract$_IERC20_$827_$_t_bool_$","typeString":"tuple(string memory,contract IERC20,bool)"}},"functionReturnParameters":7645,"id":7671,"nodeType":"Return","src":"8059:37:29"}]},"functionSelector":"8c83ddd3","id":7673,"implemented":true,"kind":"function","modifiers":[],"name":"returnAvailableStablecoin","nameLocation":"7756:25:29","nodeType":"FunctionDefinition","parameters":{"id":7637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7636,"mutability":"mutable","name":"_stablecoin","nameLocation":"7789:11:29","nodeType":"VariableDeclaration","scope":7673,"src":"7782:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":7635,"nodeType":"UserDefinedTypeName","pathNode":{"id":7634,"name":"IERC20","nameLocations":["7782:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"7782:6:29"},"referencedDeclaration":827,"src":"7782:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"7781:20:29"},"returnParameters":{"id":7645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7673,"src":"7819:13:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7638,"name":"string","nodeType":"ElementaryTypeName","src":"7819:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7673,"src":"7834:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"},"typeName":{"id":7641,"nodeType":"UserDefinedTypeName","pathNode":{"id":7640,"name":"IERC20","nameLocations":["7834:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":827,"src":"7834:6:29"},"referencedDeclaration":827,"src":"7834:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$827","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7673,"src":"7842:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7643,"name":"bool","nodeType":"ElementaryTypeName","src":"7842:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7818:29:29"},"scope":7750,"src":"7747:357:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7693,"nodeType":"Block","src":"8213:127:29","statements":[{"assignments":[7683],"declarations":[{"constant":false,"id":7683,"mutability":"mutable","name":"paymentDate","nameLocation":"8234:11:29","nodeType":"VariableDeclaration","scope":7693,"src":"8229:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7682,"name":"uint","nodeType":"ElementaryTypeName","src":"8229:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7690,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":7684,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"8248:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7686,"indexExpression":{"id":7685,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"8257:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8248:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7688,"indexExpression":{"id":7687,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"8270:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8248:41:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8290:13:29","memberName":"dateOfPayment","nodeType":"MemberAccess","referencedDeclaration":7051,"src":"8248:55:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8229:74:29"},{"expression":{"id":7691,"name":"paymentDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"8321:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7681,"id":7692,"nodeType":"Return","src":"8314:18:29"}]},"functionSelector":"64cf0e40","id":7694,"implemented":true,"kind":"function","modifiers":[],"name":"returnPaymentDeadline","nameLocation":"8121:21:29","nodeType":"FunctionDefinition","parameters":{"id":7678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7675,"mutability":"mutable","name":"_scheduleId","nameLocation":"8148:11:29","nodeType":"VariableDeclaration","scope":7694,"src":"8143:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7674,"name":"uint","nodeType":"ElementaryTypeName","src":"8143:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7677,"mutability":"mutable","name":"_installmentNumber","nameLocation":"8166:18:29","nodeType":"VariableDeclaration","scope":7694,"src":"8161:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7676,"name":"uint","nodeType":"ElementaryTypeName","src":"8161:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8142:43:29"},"returnParameters":{"id":7681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7694,"src":"8208:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7679,"name":"uint","nodeType":"ElementaryTypeName","src":"8208:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8207:6:29"},"scope":7750,"src":"8112:228:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7714,"nodeType":"Block","src":"8442:128:29","statements":[{"assignments":[7704],"declarations":[{"constant":false,"id":7704,"mutability":"mutable","name":"drawDate","nameLocation":"8463:8:29","nodeType":"VariableDeclaration","scope":7714,"src":"8458:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7703,"name":"uint","nodeType":"ElementaryTypeName","src":"8458:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7711,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":7705,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"8474:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7707,"indexExpression":{"id":7706,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7696,"src":"8483:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8474:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7709,"indexExpression":{"id":7708,"name":"_installmentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"8496:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8474:41:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"id":7710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8516:10:29","memberName":"dateOfDraw","nodeType":"MemberAccess","referencedDeclaration":7053,"src":"8474:52:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8458:68:29"},{"expression":{"id":7712,"name":"drawDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"8554:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7702,"id":7713,"nodeType":"Return","src":"8547:15:29"}]},"functionSelector":"29b00732","id":7715,"implemented":true,"kind":"function","modifiers":[],"name":"returnDrawDate","nameLocation":"8357:14:29","nodeType":"FunctionDefinition","parameters":{"id":7699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7696,"mutability":"mutable","name":"_scheduleId","nameLocation":"8377:11:29","nodeType":"VariableDeclaration","scope":7715,"src":"8372:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7695,"name":"uint","nodeType":"ElementaryTypeName","src":"8372:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7698,"mutability":"mutable","name":"_installmentNumber","nameLocation":"8395:18:29","nodeType":"VariableDeclaration","scope":7715,"src":"8390:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7697,"name":"uint","nodeType":"ElementaryTypeName","src":"8390:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8371:43:29"},"returnParameters":{"id":7702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7715,"src":"8437:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7700,"name":"uint","nodeType":"ElementaryTypeName","src":"8437:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8436:6:29"},"scope":7750,"src":"8348:222:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7736,"nodeType":"Block","src":"8672:123:29","statements":[{"assignments":[7726],"declarations":[{"constant":false,"id":7726,"mutability":"mutable","name":"deadline","nameLocation":"8701:8:29","nodeType":"VariableDeclaration","scope":7736,"src":"8683:26:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage_ptr","typeString":"struct HorizonStaff.Deadlines"},"typeName":{"id":7725,"nodeType":"UserDefinedTypeName","pathNode":{"id":7724,"name":"Deadlines","nameLocations":["8683:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":7058,"src":"8683:9:29"},"referencedDeclaration":7058,"src":"8683:9:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage_ptr","typeString":"struct HorizonStaff.Deadlines"}},"visibility":"internal"}],"id":7732,"initialValue":{"baseExpression":{"baseExpression":{"id":7727,"name":"schedule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"8712:8:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines storage ref))"}},"id":7729,"indexExpression":{"id":7728,"name":"_scheduleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"8721:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8712:21:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Deadlines_$7058_storage_$","typeString":"mapping(uint256 => struct HorizonStaff.Deadlines storage ref)"}},"id":7731,"indexExpression":{"id":7730,"name":"_drawNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"8734:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8712:34:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage","typeString":"struct HorizonStaff.Deadlines storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8683:63:29"},{"expression":{"expression":{"id":7733,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"8766:8:29","typeDescriptions":{"typeIdentifier":"t_struct$_Deadlines_$7058_storage_ptr","typeString":"struct HorizonStaff.Deadlines storage pointer"}},"id":7734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8775:12:29","memberName":"participants","nodeType":"MemberAccess","referencedDeclaration":7049,"src":"8766:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7723,"id":7735,"nodeType":"Return","src":"8759:28:29"}]},"functionSelector":"0d65a8e8","id":7737,"implemented":true,"kind":"function","modifiers":[],"name":"returnDrawParticipants","nameLocation":"8587:22:29","nodeType":"FunctionDefinition","parameters":{"id":7720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7717,"mutability":"mutable","name":"_scheduleId","nameLocation":"8615:11:29","nodeType":"VariableDeclaration","scope":7737,"src":"8610:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7716,"name":"uint","nodeType":"ElementaryTypeName","src":"8610:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7719,"mutability":"mutable","name":"_drawNumber","nameLocation":"8633:11:29","nodeType":"VariableDeclaration","scope":7737,"src":"8628:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7718,"name":"uint","nodeType":"ElementaryTypeName","src":"8628:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8609:36:29"},"returnParameters":{"id":7723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7737,"src":"8666:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7721,"name":"uint","nodeType":"ElementaryTypeName","src":"8666:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8665:6:29"},"scope":7750,"src":"8578:217:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7748,"nodeType":"Block","src":"8824:90:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8843:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8847:6:29","memberName":"sender","nodeType":"MemberAccess","src":"8843:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"8857:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8843:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652063616c6c6572206d75737420626520746865206f776e6572","id":7744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8863:30:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e61d177b1cb08dcb824700db93c23d6494b1bd32673cf68fc7bb05e4467f317","typeString":"literal_string \"The caller must be the owner\""},"value":"The caller must be the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e61d177b1cb08dcb824700db93c23d6494b1bd32673cf68fc7bb05e4467f317","typeString":"literal_string \"The caller must be the owner\""}],"id":7739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8835:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8835:59:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7746,"nodeType":"ExpressionStatement","src":"8835:59:29"},{"id":7747,"nodeType":"PlaceholderStatement","src":"8905:1:29"}]},"id":7749,"name":"onlyOwner","nameLocation":"8812:9:29","nodeType":"ModifierDefinition","parameters":{"id":7738,"nodeType":"ParameterList","parameters":[],"src":"8821:2:29"},"src":"8803:111:29","virtual":false,"visibility":"internal"}],"scope":7751,"src":"160:8757:29","usedErrors":[6971],"usedEvents":[6989,6993,7000,7006,7012,7016,7020,7026,7032]}],"src":"33:8884:29"},"id":29},"contracts/HorizonVRF.sol":{"ast":{"absolutePath":"contracts/HorizonVRF.sol","exportedSymbols":{"HorizonVRF":[8040],"VRFConsumerBaseV2":[580],"VRFCoordinatorV2Interface":[427]},"id":8041,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7752,"literals":["solidity",">=","0.8",".9","<=","0.8",".20"],"nodeType":"PragmaDirective","src":"33:33:30"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":7753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8041,"sourceUnit":428,"src":"70:80:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":7754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8041,"sourceUnit":581,"src":"152:65:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7755,"name":"VRFConsumerBaseV2","nameLocations":["244:17:30"],"nodeType":"IdentifierPath","referencedDeclaration":580,"src":"244:17:30"},"id":7756,"nodeType":"InheritanceSpecifier","src":"244:17:30"}],"canonicalName":"HorizonVRF","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8040,"linearizedBaseContracts":[8040,580],"name":"HorizonVRF","nameLocation":"230:10:30","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"fe311bf598a14a250b990be603a26cfc8f34a235e618e79c51aacc47c0d74ac6","id":7768,"name":"RequestSent","nameLocation":"276:11:30","nodeType":"EventDefinition","parameters":{"id":7767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7758,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"293:9:30","nodeType":"VariableDeclaration","scope":7768,"src":"288:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7757,"name":"uint","nodeType":"ElementaryTypeName","src":"288:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7760,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"311:8:30","nodeType":"VariableDeclaration","scope":7768,"src":"304:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7759,"name":"uint32","nodeType":"ElementaryTypeName","src":"304:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7762,"indexed":false,"mutability":"mutable","name":"_titleId","nameLocation":"326:8:30","nodeType":"VariableDeclaration","scope":7768,"src":"321:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7761,"name":"uint","nodeType":"ElementaryTypeName","src":"321:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7764,"indexed":false,"mutability":"mutable","name":"_drawNumber","nameLocation":"341:11:30","nodeType":"VariableDeclaration","scope":7768,"src":"336:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7763,"name":"uint","nodeType":"ElementaryTypeName","src":"336:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7766,"indexed":false,"mutability":"mutable","name":"_totalPlayersAvailable","nameLocation":"359:22:30","nodeType":"VariableDeclaration","scope":7768,"src":"354:27:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7765,"name":"uint","nodeType":"ElementaryTypeName","src":"354:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"287:95:30"},"src":"270:113:30"},{"anonymous":false,"eventSelector":"147eb1ff0c82f87f2b03e2c43f5a36488ff63ec6b730195fde4605f612f8db51","id":7777,"name":"RequestFulfilled","nameLocation":"395:16:30","nodeType":"EventDefinition","parameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7770,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"420:9:30","nodeType":"VariableDeclaration","scope":7777,"src":"412:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7769,"name":"uint256","nodeType":"ElementaryTypeName","src":"412:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7773,"indexed":false,"mutability":"mutable","name":"randomWords","nameLocation":"441:11:30","nodeType":"VariableDeclaration","scope":7777,"src":"431:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7771,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7772,"nodeType":"ArrayTypeName","src":"431:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7775,"indexed":false,"mutability":"mutable","name":"randomValue","nameLocation":"459:11:30","nodeType":"VariableDeclaration","scope":7777,"src":"454:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7774,"name":"uint","nodeType":"ElementaryTypeName","src":"454:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"411:60:30"},"src":"389:83:30"},{"anonymous":false,"eventSelector":"1e095c411ca4acab3ed7a29fbace87cb5a48a71e48208e826be0d73de77b3fdb","id":7781,"name":"RandomValueUpdated","nameLocation":"484:18:30","nodeType":"EventDefinition","parameters":{"id":7780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7779,"indexed":false,"mutability":"mutable","name":"randomValue","nameLocation":"511:11:30","nodeType":"VariableDeclaration","scope":7781,"src":"503:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7778,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"502:21:30"},"src":"478:46:30"},{"canonicalName":"HorizonVRF.RequestStatus","id":7791,"members":[{"constant":false,"id":7783,"mutability":"mutable","name":"fulfilled","nameLocation":"569:9:30","nodeType":"VariableDeclaration","scope":7791,"src":"564:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7782,"name":"bool","nodeType":"ElementaryTypeName","src":"564:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7785,"mutability":"mutable","name":"exists","nameLocation":"594:6:30","nodeType":"VariableDeclaration","scope":7791,"src":"589:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7784,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7788,"mutability":"mutable","name":"randomWords","nameLocation":"621:11:30","nodeType":"VariableDeclaration","scope":7791,"src":"611:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7786,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7787,"nodeType":"ArrayTypeName","src":"611:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7790,"mutability":"mutable","name":"randomValue","nameLocation":"651:11:30","nodeType":"VariableDeclaration","scope":7791,"src":"643:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7789,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RequestStatus","nameLocation":"539:13:30","nodeType":"StructDefinition","scope":8040,"src":"532:138:30","visibility":"public"},{"canonicalName":"HorizonVRF.DrawInfos","id":7798,"members":[{"constant":false,"id":7793,"mutability":"mutable","name":"titleId","nameLocation":"708:7:30","nodeType":"VariableDeclaration","scope":7798,"src":"703:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7792,"name":"uint","nodeType":"ElementaryTypeName","src":"703:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7795,"mutability":"mutable","name":"drawNumber","nameLocation":"731:10:30","nodeType":"VariableDeclaration","scope":7798,"src":"726:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7794,"name":"uint","nodeType":"ElementaryTypeName","src":"726:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7797,"mutability":"mutable","name":"totalPlayersAvailable","nameLocation":"757:21:30","nodeType":"VariableDeclaration","scope":7798,"src":"752:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7796,"name":"uint","nodeType":"ElementaryTypeName","src":"752:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DrawInfos","nameLocation":"683:9:30","nodeType":"StructDefinition","scope":8040,"src":"676:110:30","visibility":"public"},{"constant":false,"functionSelector":"a168fa89","id":7803,"mutability":"mutable","name":"s_requests","nameLocation":"845:10:30","nodeType":"VariableDeclaration","scope":8040,"src":"794:61:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus)"},"typeName":{"id":7802,"keyName":"requestId","keyNameLocation":"810:9:30","keyType":{"id":7799,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"794:43:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7801,"nodeType":"UserDefinedTypeName","pathNode":{"id":7800,"name":"RequestStatus","nameLocations":["823:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7791,"src":"823:13:30"},"referencedDeclaration":7791,"src":"823:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage_ptr","typeString":"struct HorizonVRF.RequestStatus"}}},"visibility":"public"},{"constant":false,"functionSelector":"cbc1c021","id":7808,"mutability":"mutable","name":"s_draw","nameLocation":"909:6:30","nodeType":"VariableDeclaration","scope":8040,"src":"862:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrawInfos_$7798_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.DrawInfos)"},"typeName":{"id":7807,"keyName":"requestId","keyNameLocation":"878:9:30","keyType":{"id":7804,"name":"uint256","nodeType":"ElementaryTypeName","src":"870:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"862:39:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrawInfos_$7798_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.DrawInfos)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7806,"nodeType":"UserDefinedTypeName","pathNode":{"id":7805,"name":"DrawInfos","nameLocations":["891:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":7798,"src":"891:9:30"},"referencedDeclaration":7798,"src":"891:9:30","typeDescriptions":{"typeIdentifier":"t_struct$_DrawInfos_$7798_storage_ptr","typeString":"struct HorizonVRF.DrawInfos"}}},"visibility":"public"},{"constant":false,"id":7810,"mutability":"mutable","name":"randomValue","nameLocation":"962:11:30","nodeType":"VariableDeclaration","scope":8040,"src":"946:27:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7809,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"8da5cb5b","id":7812,"mutability":"mutable","name":"owner","nameLocation":"995:5:30","nodeType":"VariableDeclaration","scope":8040,"src":"980:20:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7811,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8796ba8c","id":7815,"mutability":"mutable","name":"requestIds","nameLocation":"1052:10:30","nodeType":"VariableDeclaration","scope":8040,"src":"1035:27:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":7813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7814,"nodeType":"ArrayTypeName","src":"1035:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"fc2a88c3","id":7817,"mutability":"mutable","name":"lastRequestId","nameLocation":"1084:13:30","nodeType":"VariableDeclaration","scope":8040,"src":"1069:28:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7816,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":7820,"mutability":"mutable","name":"COORDINATOR","nameLocation":"1136:11:30","nodeType":"VariableDeclaration","scope":8040,"src":"1110:37:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$427","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":7819,"nodeType":"UserDefinedTypeName","pathNode":{"id":7818,"name":"VRFCoordinatorV2Interface","nameLocations":["1110:25:30"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"1110:25:30"},"referencedDeclaration":427,"src":"1110:25:30","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$427","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"internal"},{"constant":false,"id":7822,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"1162:14:30","nodeType":"VariableDeclaration","scope":8040,"src":"1154:22:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7821,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7824,"mutability":"mutable","name":"keyHash","nameLocation":"1191:7:30","nodeType":"VariableDeclaration","scope":8040,"src":"1183:15:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1183:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7826,"mutability":"mutable","name":"s_subscriptionId","nameLocation":"1212:16:30","nodeType":"VariableDeclaration","scope":8040,"src":"1205:23:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7825,"name":"uint64","nodeType":"ElementaryTypeName","src":"1205:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7828,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1242:16:30","nodeType":"VariableDeclaration","scope":8040,"src":"1235:23:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7827,"name":"uint32","nodeType":"ElementaryTypeName","src":"1235:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7830,"mutability":"mutable","name":"requestConfirmations","nameLocation":"1272:20:30","nodeType":"VariableDeclaration","scope":8040,"src":"1265:27:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7829,"name":"uint16","nodeType":"ElementaryTypeName","src":"1265:6:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7832,"mutability":"mutable","name":"numWords","nameLocation":"1306:8:30","nodeType":"VariableDeclaration","scope":8040,"src":"1299:15:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7831,"name":"uint32","nodeType":"ElementaryTypeName","src":"1299:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"body":{"id":7876,"nodeType":"Block","src":"1750:282:30","statements":[{"expression":{"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7850,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7820,"src":"1761:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$427","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7852,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"1801:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7851,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1775:25:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$427_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1775:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$427","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1761:56:30","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$427","typeString":"contract VRFCoordinatorV2Interface"}},"id":7855,"nodeType":"ExpressionStatement","src":"1761:56:30"},{"expression":{"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7856,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"1828:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7857,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"1838:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1828:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7859,"nodeType":"ExpressionStatement","src":"1828:18:30"},{"expression":{"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7860,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"1857:16:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7861,"name":"_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"1876:15:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1857:34:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":7863,"nodeType":"ExpressionStatement","src":"1857:34:30"},{"expression":{"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7864,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"1902:16:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7865,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7840,"src":"1921:17:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1902:36:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":7867,"nodeType":"ExpressionStatement","src":"1902:36:30"},{"expression":{"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7868,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"1949:20:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7869,"name":"_requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"1972:21:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"1949:44:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":7871,"nodeType":"ExpressionStatement","src":"1949:44:30"},{"expression":{"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7872,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7832,"src":"2004:8:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7873,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"2015:9:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2004:20:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":7875,"nodeType":"ExpressionStatement","src":"2004:20:30"}]},"id":7877,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7847,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"1734:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7848,"kind":"baseConstructorSpecifier","modifierName":{"id":7846,"name":"VRFConsumerBaseV2","nameLocations":["1716:17:30"],"nodeType":"IdentifierPath","referencedDeclaration":580,"src":"1716:17:30"},"nodeType":"ModifierInvocation","src":"1716:34:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7834,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"1343:15:30","nodeType":"VariableDeclaration","scope":7877,"src":"1335:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7833,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7836,"mutability":"mutable","name":"_keyHash","nameLocation":"1430:8:30","nodeType":"VariableDeclaration","scope":7877,"src":"1422:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1422:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7838,"mutability":"mutable","name":"_subscriptionId","nameLocation":"1533:15:30","nodeType":"VariableDeclaration","scope":7877,"src":"1526:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7837,"name":"uint64","nodeType":"ElementaryTypeName","src":"1526:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7840,"mutability":"mutable","name":"_callbackGasLimit","nameLocation":"1581:17:30","nodeType":"VariableDeclaration","scope":7877,"src":"1574:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7839,"name":"uint32","nodeType":"ElementaryTypeName","src":"1574:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7842,"mutability":"mutable","name":"_requestConfirmations","nameLocation":"1633:21:30","nodeType":"VariableDeclaration","scope":7877,"src":"1626:28:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7841,"name":"uint16","nodeType":"ElementaryTypeName","src":"1626:6:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7844,"mutability":"mutable","name":"_numWords","nameLocation":"1684:9:30","nodeType":"VariableDeclaration","scope":7877,"src":"1677:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7843,"name":"uint32","nodeType":"ElementaryTypeName","src":"1677:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1334:381:30"},"returnParameters":{"id":7849,"nodeType":"ParameterList","parameters":[],"src":"1750:0:30"},"scope":8040,"src":"1323:709:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7944,"nodeType":"Block","src":"2170:717:30","statements":[{"expression":{"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7888,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"2184:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7891,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"2227:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7892,"name":"s_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"2236:16:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":7893,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"2254:20:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":7894,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"2276:16:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7895,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7832,"src":"2294:8:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":7889,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7820,"src":"2196:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$427","typeString":"contract VRFCoordinatorV2Interface"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2208:18:30","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":360,"src":"2196:30:30","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2196:107:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2184:119:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7898,"nodeType":"ExpressionStatement","src":"2184:119:30"},{"expression":{"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7899,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"2314:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus storage ref)"}},"id":7901,"indexExpression":{"id":7900,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"2325:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2314:21:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"30","id":7906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2394:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2380:13:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2384:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7904,"nodeType":"ArrayTypeName","src":"2384:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2380:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"74727565","id":7908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2419:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2449:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2482:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7902,"name":"RequestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7791,"src":"2338:13:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RequestStatus_$7791_storage_ptr_$","typeString":"type(struct HorizonVRF.RequestStatus storage pointer)"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2367:11:30","2411:6:30","2438:9:30","2469:11:30"],"names":["randomWords","exists","fulfilled","randomValue"],"nodeType":"FunctionCall","src":"2338:157:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_memory_ptr","typeString":"struct HorizonVRF.RequestStatus memory"}},"src":"2314:181:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"id":7913,"nodeType":"ExpressionStatement","src":"2314:181:30"},{"expression":{"arguments":[{"id":7917,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"2524:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7914,"name":"requestIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"2508:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2519:4:30","memberName":"push","nodeType":"MemberAccess","src":"2508:15:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2508:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7919,"nodeType":"ExpressionStatement","src":"2508:26:30"},{"expression":{"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7920,"name":"lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"2545:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7921,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"2561:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2545:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7923,"nodeType":"ExpressionStatement","src":"2545:25:30"},{"expression":{"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7924,"name":"s_draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7808,"src":"2583:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrawInfos_$7798_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.DrawInfos storage ref)"}},"id":7926,"indexExpression":{"id":7925,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"2590:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2583:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_DrawInfos_$7798_storage","typeString":"struct HorizonVRF.DrawInfos storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7928,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"2637:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7929,"name":"_drawNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"2672:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7930,"name":"_totalPlayersAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"2721:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7927,"name":"DrawInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"2603:9:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DrawInfos_$7798_storage_ptr_$","typeString":"type(struct HorizonVRF.DrawInfos storage pointer)"}},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2628:7:30","2660:10:30","2698:21:30"],"names":["titleId","drawNumber","totalPlayersAvailable"],"nodeType":"FunctionCall","src":"2603:152:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DrawInfos_$7798_memory_ptr","typeString":"struct HorizonVRF.DrawInfos memory"}},"src":"2583:172:30","typeDescriptions":{"typeIdentifier":"t_struct$_DrawInfos_$7798_storage","typeString":"struct HorizonVRF.DrawInfos storage ref"}},"id":7933,"nodeType":"ExpressionStatement","src":"2583:172:30"},{"eventCall":{"arguments":[{"id":7935,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"2785:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7936,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7832,"src":"2796:8:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7937,"name":"_titleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"2806:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7938,"name":"_drawNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"2816:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7939,"name":"_totalPlayersAvailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"2829:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7934,"name":"RequestSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7768,"src":"2773:11:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint32,uint256,uint256,uint256)"}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2773:79:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7941,"nodeType":"EmitStatement","src":"2768:84:30"},{"expression":{"id":7942,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"2870:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7887,"id":7943,"nodeType":"Return","src":"2863:16:30"}]},"functionSelector":"32601f64","id":7945,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2049:18:30","nodeType":"FunctionDefinition","parameters":{"id":7884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7879,"mutability":"mutable","name":"_titleId","nameLocation":"2073:8:30","nodeType":"VariableDeclaration","scope":7945,"src":"2068:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7878,"name":"uint","nodeType":"ElementaryTypeName","src":"2068:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7881,"mutability":"mutable","name":"_drawNumber","nameLocation":"2088:11:30","nodeType":"VariableDeclaration","scope":7945,"src":"2083:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7880,"name":"uint","nodeType":"ElementaryTypeName","src":"2083:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7883,"mutability":"mutable","name":"_totalPlayersAvailable","nameLocation":"2109:22:30","nodeType":"VariableDeclaration","scope":7945,"src":"2101:30:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2101:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:65:30"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7886,"mutability":"mutable","name":"requestId","nameLocation":"2159:9:30","nodeType":"VariableDeclaration","scope":7945,"src":"2151:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7885,"name":"uint256","nodeType":"ElementaryTypeName","src":"2151:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2150:19:30"},"scope":8040,"src":"2040:847:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[553],"body":{"id":8002,"nodeType":"Block","src":"2992:397:30","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7955,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3011:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus storage ref)"}},"id":7957,"indexExpression":{"id":7956,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"3022:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3011:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"id":7958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3034:6:30","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":7785,"src":"3011:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72657175657374206e6f7420666f756e64","id":7959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3042:19:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b","typeString":"literal_string \"request not found\""},"value":"request not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b","typeString":"literal_string \"request not found\""}],"id":7954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3003:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:59:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7961,"nodeType":"ExpressionStatement","src":"3003:59:30"},{"expression":{"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7962,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3075:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus storage ref)"}},"id":7964,"indexExpression":{"id":7963,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"3086:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3075:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"id":7965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3098:9:30","memberName":"fulfilled","nodeType":"MemberAccess","referencedDeclaration":7783,"src":"3075:32:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3110:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3075:39:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7968,"nodeType":"ExpressionStatement","src":"3075:39:30"},{"expression":{"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7969,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3125:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus storage ref)"}},"id":7971,"indexExpression":{"id":7970,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"3136:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3125:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"id":7972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3148:11:30","memberName":"randomWords","nodeType":"MemberAccess","referencedDeclaration":7788,"src":"3125:34:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7973,"name":"_randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"3162:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3125:49:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7975,"nodeType":"ExpressionStatement","src":"3125:49:30"},{"expression":{"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7976,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3186:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus storage ref)"}},"id":7978,"indexExpression":{"id":7977,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"3197:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3186:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"id":7979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3209:11:30","memberName":"randomValue","nodeType":"MemberAccess","referencedDeclaration":7790,"src":"3186:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7980,"name":"_randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"3224:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7982,"indexExpression":{"hexValue":"30","id":7981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3237:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3224:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"baseExpression":{"id":7983,"name":"s_draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7808,"src":"3242:6:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_DrawInfos_$7798_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.DrawInfos storage ref)"}},"id":7985,"indexExpression":{"id":7984,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"3249:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3242:18:30","typeDescriptions":{"typeIdentifier":"t_struct$_DrawInfos_$7798_storage","typeString":"struct HorizonVRF.DrawInfos storage ref"}},"id":7986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3261:21:30","memberName":"totalPlayersAvailable","nodeType":"MemberAccess","referencedDeclaration":7797,"src":"3242:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3224:58:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3223:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3223:62:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3186:99:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7992,"nodeType":"ExpressionStatement","src":"3186:99:30"},{"eventCall":{"arguments":[{"id":7994,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"3320:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7995,"name":"_randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"3332:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"baseExpression":{"id":7996,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3346:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus storage ref)"}},"id":7998,"indexExpression":{"id":7997,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"3357:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3346:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"id":7999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3369:11:30","memberName":"randomValue","nodeType":"MemberAccess","referencedDeclaration":7790,"src":"3346:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7993,"name":"RequestFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"3303:16:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256[] memory,uint256)"}},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3303:78:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8001,"nodeType":"EmitStatement","src":"3298:83:30"}]},"id":8003,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2904:18:30","nodeType":"FunctionDefinition","overrides":{"id":7952,"nodeType":"OverrideSpecifier","overrides":[],"src":"2983:8:30"},"parameters":{"id":7951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7947,"mutability":"mutable","name":"_requestId","nameLocation":"2931:10:30","nodeType":"VariableDeclaration","scope":8003,"src":"2923:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7950,"mutability":"mutable","name":"_randomWords","nameLocation":"2960:12:30","nodeType":"VariableDeclaration","scope":8003,"src":"2943:29:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2943:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7949,"nodeType":"ArrayTypeName","src":"2943:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2922:51:30"},"returnParameters":{"id":7953,"nodeType":"ParameterList","parameters":[],"src":"2992:0:30"},"scope":8040,"src":"2895:494:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8038,"nodeType":"Block","src":"3534:221:30","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8016,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3553:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus storage ref)"}},"id":8018,"indexExpression":{"id":8017,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"3564:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3553:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"id":8019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3576:6:30","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":7785,"src":"3553:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"72657175657374206e6f7420666f756e64","id":8020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3584:19:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b","typeString":"literal_string \"request not found\""},"value":"request not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0880dc095000a80878793b3e55eb8c029daebb45a85dbc462aae5dacbd03526b","typeString":"literal_string \"request not found\""}],"id":8015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3545:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:59:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8022,"nodeType":"ExpressionStatement","src":"3545:59:30"},{"assignments":[8025],"declarations":[{"constant":false,"id":8025,"mutability":"mutable","name":"request","nameLocation":"3636:7:30","nodeType":"VariableDeclaration","scope":8038,"src":"3615:28:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_memory_ptr","typeString":"struct HorizonVRF.RequestStatus"},"typeName":{"id":8024,"nodeType":"UserDefinedTypeName","pathNode":{"id":8023,"name":"RequestStatus","nameLocations":["3615:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":7791,"src":"3615:13:30"},"referencedDeclaration":7791,"src":"3615:13:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage_ptr","typeString":"struct HorizonVRF.RequestStatus"}},"visibility":"internal"}],"id":8029,"initialValue":{"baseExpression":{"id":8026,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"3646:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RequestStatus_$7791_storage_$","typeString":"mapping(uint256 => struct HorizonVRF.RequestStatus storage ref)"}},"id":8028,"indexExpression":{"id":8027,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"3657:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3646:22:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_storage","typeString":"struct HorizonVRF.RequestStatus storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3615:53:30"},{"expression":{"components":[{"expression":{"id":8030,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"3687:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_memory_ptr","typeString":"struct HorizonVRF.RequestStatus memory"}},"id":8031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3695:9:30","memberName":"fulfilled","nodeType":"MemberAccess","referencedDeclaration":7783,"src":"3687:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8032,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"3706:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_memory_ptr","typeString":"struct HorizonVRF.RequestStatus memory"}},"id":8033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3714:11:30","memberName":"randomWords","nodeType":"MemberAccess","referencedDeclaration":7788,"src":"3706:19:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":8034,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"3727:7:30","typeDescriptions":{"typeIdentifier":"t_struct$_RequestStatus_$7791_memory_ptr","typeString":"struct HorizonVRF.RequestStatus memory"}},"id":8035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3735:11:30","memberName":"randomValue","nodeType":"MemberAccess","referencedDeclaration":7790,"src":"3727:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3686:61:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(bool,uint256[] memory,uint256)"}},"functionReturnParameters":8014,"id":8037,"nodeType":"Return","src":"3679:68:30"}]},"functionSelector":"d8a4676f","id":8039,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestStatus","nameLocation":"3406:16:30","nodeType":"FunctionDefinition","parameters":{"id":8006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8005,"mutability":"mutable","name":"_requestId","nameLocation":"3431:10:30","nodeType":"VariableDeclaration","scope":8039,"src":"3423:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8004,"name":"uint256","nodeType":"ElementaryTypeName","src":"3423:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3422:20:30"},"returnParameters":{"id":8014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8008,"mutability":"mutable","name":"fulfilled","nameLocation":"3471:9:30","nodeType":"VariableDeclaration","scope":8039,"src":"3466:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8007,"name":"bool","nodeType":"ElementaryTypeName","src":"3466:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8011,"mutability":"mutable","name":"randomWords","nameLocation":"3499:11:30","nodeType":"VariableDeclaration","scope":8039,"src":"3482:28:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8009,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8010,"nodeType":"ArrayTypeName","src":"3482:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":8013,"mutability":"mutable","name":"_randomValue","nameLocation":"3520:12:30","nodeType":"VariableDeclaration","scope":8039,"src":"3512:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8012,"name":"uint256","nodeType":"ElementaryTypeName","src":"3512:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:68:30"},"scope":8040,"src":"3397:358:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8041,"src":"221:3537:30","usedErrors":[531],"usedEvents":[7768,7777,7781]}],"src":"33:3725:30"},"id":30}},"contracts":{"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol":{"CCIPReceiver":{"abi":[{"inputs":[{"internalType":"address","name":"router","type":"address"}],"name":"InvalidRouter","type":"error"},{"inputs":[{"components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]"}],"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple"}],"name":"ccipReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"details":"Note ensure you check the msg.sender is the OffRampRouter","params":{"message":"CCIP Message"}},"getRouter()":{"returns":{"_0":"i_router address"}},"supportsInterface(bytes4)":{"params":{"interfaceId":"The interfaceId to check"},"returns":{"_0":"true if the interfaceId is supported"}}},"title":"CCIPReceiver - Base contract for CCIP applications that can receive messages.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"85572ffb","getRouter()":"b0f479a1","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"title\":\"CCIPReceiver - Base contract for CCIP applications that can receive messages.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":\"CCIPReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IAny2EVMMessageReceiver} from \\\"../interfaces/IAny2EVMMessageReceiver.sol\\\";\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\nimport {IERC165} from \\\"../../vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\\\";\\n\\n/// @title CCIPReceiver - Base contract for CCIP applications that can receive messages.\\nabstract contract CCIPReceiver is IAny2EVMMessageReceiver, IERC165 {\\n  address internal immutable i_router;\\n\\n  constructor(address router) {\\n    if (router == address(0)) revert InvalidRouter(address(0));\\n    i_router = router;\\n  }\\n\\n  /// @notice IERC165 supports an interfaceId\\n  /// @param interfaceId The interfaceId to check\\n  /// @return true if the interfaceId is supported\\n  function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\\n    return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId;\\n  }\\n\\n  /// @inheritdoc IAny2EVMMessageReceiver\\n  function ccipReceive(Client.Any2EVMMessage calldata message) external virtual override onlyRouter {\\n    _ccipReceive(message);\\n  }\\n\\n  /// @notice Override this function in your implementation.\\n  /// @param message Any2EVMMessage\\n  function _ccipReceive(Client.Any2EVMMessage memory message) internal virtual;\\n\\n  /////////////////////////////////////////////////////////////////////\\n  // Plumbing\\n  /////////////////////////////////////////////////////////////////////\\n\\n  /// @notice Return the current router\\n  /// @return i_router address\\n  function getRouter() public view returns (address) {\\n    return address(i_router);\\n  }\\n\\n  error InvalidRouter(address router);\\n\\n  /// @dev only calls from the set router are accepted.\\n  modifier onlyRouter() {\\n    if (msg.sender != address(i_router)) revert InvalidRouter(msg.sender);\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xcf5d0a5cd6ed0f6a9ed721b3e532c0504ed1ba3ab6d3567165876ceb4f23b084\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\n/// @notice Application contracts that intend to receive messages from\\n/// the router should implement this interface.\\ninterface IAny2EVMMessageReceiver {\\n  /// @notice Called by the Router to deliver a message.\\n  /// If this reverts, any token transfers also revert. The message\\n  /// will move to a FAILED state and become available for manual execution.\\n  /// @param message CCIP Message\\n  /// @dev Note ensure you check the msg.sender is the OffRampRouter\\n  function ccipReceive(Client.Any2EVMMessage calldata message) external;\\n}\\n\",\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// End consumer library.\\nlibrary Client {\\n  struct EVMTokenAmount {\\n    address token; // token address on the local chain.\\n    uint256 amount; // Amount of tokens.\\n  }\\n\\n  struct Any2EVMMessage {\\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\\n    uint64 sourceChainSelector; // Source chain selector.\\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\\n    bytes data; // payload sent in original message.\\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\\n  }\\n\\n  // If extraArgs is empty bytes, the default is 200k gas limit and strict = false.\\n  struct EVM2AnyMessage {\\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\\n    bytes data; // Data payload\\n    EVMTokenAmount[] tokenAmounts; // Token transfers\\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\\n  }\\n\\n  // extraArgs will evolve to support new features\\n  // bytes4(keccak256(\\\"CCIP EVMExtraArgsV1\\\"));\\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\\n  struct EVMExtraArgsV1 {\\n    uint256 gasLimit; // ATTENTION!!! MAX GAS LIMIT 4M FOR BETA TESTING\\n    bool strict; // See strict sequencing details below.\\n  }\\n\\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n  /**\\n    * @dev Returns true if this contract implements the interface defined by\\n    * `interfaceId`. See the corresponding\\n    * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n    * to learn more about how these ids are created.\\n    *\\n    * This function call must use less than 30 000 gas.\\n    */\\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\",\"keccak256\":\"0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"notice":"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."},"getRouter()":{"notice":"Return the current router"},"supportsInterface(bytes4)":{"notice":"IERC165 supports an interfaceId"}},"version":1}}},"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol":{"IAny2EVMMessageReceiver":{"abi":[{"inputs":[{"components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]"}],"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple"}],"name":"ccipReceive","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"details":"Note ensure you check the msg.sender is the OffRampRouter","params":{"message":"CCIP Message"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"85572ffb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"}},\"notice\":\"Application contracts that intend to receive messages from the router should implement this interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":\"IAny2EVMMessageReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\n/// @notice Application contracts that intend to receive messages from\\n/// the router should implement this interface.\\ninterface IAny2EVMMessageReceiver {\\n  /// @notice Called by the Router to deliver a message.\\n  /// If this reverts, any token transfers also revert. The message\\n  /// will move to a FAILED state and become available for manual execution.\\n  /// @param message CCIP Message\\n  /// @dev Note ensure you check the msg.sender is the OffRampRouter\\n  function ccipReceive(Client.Any2EVMMessage calldata message) external;\\n}\\n\",\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// End consumer library.\\nlibrary Client {\\n  struct EVMTokenAmount {\\n    address token; // token address on the local chain.\\n    uint256 amount; // Amount of tokens.\\n  }\\n\\n  struct Any2EVMMessage {\\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\\n    uint64 sourceChainSelector; // Source chain selector.\\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\\n    bytes data; // payload sent in original message.\\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\\n  }\\n\\n  // If extraArgs is empty bytes, the default is 200k gas limit and strict = false.\\n  struct EVM2AnyMessage {\\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\\n    bytes data; // Data payload\\n    EVMTokenAmount[] tokenAmounts; // Token transfers\\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\\n  }\\n\\n  // extraArgs will evolve to support new features\\n  // bytes4(keccak256(\\\"CCIP EVMExtraArgsV1\\\"));\\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\\n  struct EVMExtraArgsV1 {\\n    uint256 gasLimit; // ATTENTION!!! MAX GAS LIMIT 4M FOR BETA TESTING\\n    bool strict; // See strict sequencing details below.\\n  }\\n\\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"notice":"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."}},"notice":"Application contracts that intend to receive messages from the router should implement this interface.","version":1}}},"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol":{"IRouterClient":{"abi":[{"inputs":[],"name":"InsufficientFeeTokenAmount","type":"error"},{"inputs":[],"name":"InvalidMsgValue","type":"error"},{"inputs":[{"internalType":"uint64","name":"destChainSelector","type":"uint64"}],"name":"UnsupportedDestinationChain","type":"error"},{"inputs":[{"internalType":"uint64","name":"destinationChainSelector","type":"uint64"},{"components":[{"internalType":"bytes","name":"receiver","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Client.EVMTokenAmount[]","name":"tokenAmounts","type":"tuple[]"},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct Client.EVM2AnyMessage","name":"message","type":"tuple"}],"name":"ccipSend","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint64","name":"destinationChainSelector","type":"uint64"},{"components":[{"internalType":"bytes","name":"receiver","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Client.EVMTokenAmount[]","name":"tokenAmounts","type":"tuple[]"},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}],"internalType":"struct Client.EVM2AnyMessage","name":"message","type":"tuple"}],"name":"getFee","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"chainSelector","type":"uint64"}],"name":"getSupportedTokens","outputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"chainSelector","type":"uint64"}],"name":"isChainSupported","outputs":[{"internalType":"bool","name":"supported","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"details":"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.","params":{"destinationChainSelector":"The destination chain ID","message":"The cross-chain CCIP message including data and/or tokens"},"returns":{"_0":"messageId The message ID"}},"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"details":"returns 0 fee on invalid message.","params":{"destinationChainSelector":"The destination chainSelector","message":"The cross-chain CCIP message including data and/or tokens"},"returns":{"fee":"returns guaranteed execution fee for the specified message delivery to destination chain"}},"getSupportedTokens(uint64)":{"params":{"chainSelector":"The chainSelector."},"returns":{"tokens":"The addresses of all tokens that are supported."}},"isChainSupported(uint64)":{"params":{"chainSelector":"The chain to check."},"returns":{"supported":"is true if it is supported, false if not."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":"96f4e9f9","getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":"20487ded","getSupportedTokens(uint64)":"fbca3b74","isChainSupported(uint64)":"a48a9058"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientFeeTokenAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMsgValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"UnsupportedDestinationChain\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipSend\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"}],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"}],\"name\":\"isChainSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.\",\"params\":{\"destinationChainSelector\":\"The destination chain ID\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"_0\":\"messageId The message ID\"}},\"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"returns 0 fee on invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chainSelector\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"fee\":\"returns guaranteed execution fee for the specified message delivery to destination chain\"}},\"getSupportedTokens(uint64)\":{\"params\":{\"chainSelector\":\"The chainSelector.\"},\"returns\":{\"tokens\":\"The addresses of all tokens that are supported.\"}},\"isChainSupported(uint64)\":{\"params\":{\"chainSelector\":\"The chain to check.\"},\"returns\":{\"supported\":\"is true if it is supported, false if not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"notice\":\"Request a message to be sent to the destination chain\"},\"getSupportedTokens(uint64)\":{\"notice\":\"Gets a list of all supported tokens which can be sent or received to/from a given chain id.\"},\"isChainSupported(uint64)\":{\"notice\":\"Checks if the given chain ID is supported for sending/receiving.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":\"IRouterClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\ninterface IRouterClient {\\n  error UnsupportedDestinationChain(uint64 destChainSelector);\\n  error InsufficientFeeTokenAmount();\\n  error InvalidMsgValue();\\n\\n  /// @notice Checks if the given chain ID is supported for sending/receiving.\\n  /// @param chainSelector The chain to check.\\n  /// @return supported is true if it is supported, false if not.\\n  function isChainSupported(uint64 chainSelector) external view returns (bool supported);\\n\\n  /// @notice Gets a list of all supported tokens which can be sent or received\\n  /// to/from a given chain id.\\n  /// @param chainSelector The chainSelector.\\n  /// @return tokens The addresses of all tokens that are supported.\\n  function getSupportedTokens(uint64 chainSelector) external view returns (address[] memory tokens);\\n\\n  /// @param destinationChainSelector The destination chainSelector\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return fee returns guaranteed execution fee for the specified message\\n  /// delivery to destination chain\\n  /// @dev returns 0 fee on invalid message.\\n  function getFee(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage memory message\\n  ) external view returns (uint256 fee);\\n\\n  /// @notice Request a message to be sent to the destination chain\\n  /// @param destinationChainSelector The destination chain ID\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return messageId The message ID\\n  /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\\n  /// the overpayment with no refund.\\n  function ccipSend(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage calldata message\\n  ) external payable returns (bytes32);\\n}\\n\",\"keccak256\":\"0x9899fab6a40f68408ddf153612c553f2441ea27770176bf71ccce22c40393286\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// End consumer library.\\nlibrary Client {\\n  struct EVMTokenAmount {\\n    address token; // token address on the local chain.\\n    uint256 amount; // Amount of tokens.\\n  }\\n\\n  struct Any2EVMMessage {\\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\\n    uint64 sourceChainSelector; // Source chain selector.\\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\\n    bytes data; // payload sent in original message.\\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\\n  }\\n\\n  // If extraArgs is empty bytes, the default is 200k gas limit and strict = false.\\n  struct EVM2AnyMessage {\\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\\n    bytes data; // Data payload\\n    EVMTokenAmount[] tokenAmounts; // Token transfers\\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\\n  }\\n\\n  // extraArgs will evolve to support new features\\n  // bytes4(keccak256(\\\"CCIP EVMExtraArgsV1\\\"));\\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\\n  struct EVMExtraArgsV1 {\\n    uint256 gasLimit; // ATTENTION!!! MAX GAS LIMIT 4M FOR BETA TESTING\\n    bool strict; // See strict sequencing details below.\\n  }\\n\\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"notice":"Request a message to be sent to the destination chain"},"getSupportedTokens(uint64)":{"notice":"Gets a list of all supported tokens which can be sent or received to/from a given chain id."},"isChainSupported(uint64)":{"notice":"Checks if the given chain ID is supported for sending/receiving."}},"version":1}}},"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol":{"Client":{"abi":[{"inputs":[],"name":"EVM_EXTRA_ARGS_V1_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601857607b908161001e823930815050f35b600080fdfe6080806040526004361015601257600080fd5b60003560e01c633ab8c0d014602657600080fd5b60003660031901126040576397a657c960e01b8152602090f35b600080fdfea2646970667358221220115d398666361c1bc66c462a34635093b8601b12c382ece9aa150cff80bf251364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x18 JUMPI PUSH1 0x7B SWAP1 DUP2 PUSH2 0x1E DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x3AB8C0D0 EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x40 JUMPI PUSH4 0x97A657C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0x5D CODECOPY DUP7 PUSH7 0x361C1BC66C462A CALLVALUE PUSH4 0x5093B860 SHL SLT 0xC3 DUP3 0xEC 0xE9 0xAA ISZERO 0xC SELFDESTRUCT DUP1 0xBF 0x25 SGT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"82:1465:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080806040526004361015601257600080fd5b60003560e01c633ab8c0d014602657600080fd5b60003660031901126040576397a657c960e01b8152602090f35b600080fdfea2646970667358221220115d398666361c1bc66c462a34635093b8601b12c382ece9aa150cff80bf251364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x3AB8C0D0 EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x40 JUMPI PUSH4 0x97A657C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0x5D CODECOPY DUP7 PUSH7 0x361C1BC66C462A CALLVALUE PUSH4 0x5093B860 SHL SLT 0xC3 DUP3 0xEC 0xE9 0xAA ISZERO 0xC SELFDESTRUCT DUP1 0xBF 0x25 SGT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"82:1465:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;82:1465:3;;;;-1:-1:-1;;;82:1465:3;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"24600","executionCost":"infinite","totalCost":"infinite"},"external":{"EVM_EXTRA_ARGS_V1_TAG()":"135"},"internal":{"_argsToBytes(struct Client.EVMExtraArgsV1 memory)":"infinite"}},"methodIdentifiers":{"EVM_EXTRA_ARGS_V1_TAG()":"3ab8c0d0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EVM_EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":\"Client\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// End consumer library.\\nlibrary Client {\\n  struct EVMTokenAmount {\\n    address token; // token address on the local chain.\\n    uint256 amount; // Amount of tokens.\\n  }\\n\\n  struct Any2EVMMessage {\\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\\n    uint64 sourceChainSelector; // Source chain selector.\\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\\n    bytes data; // payload sent in original message.\\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\\n  }\\n\\n  // If extraArgs is empty bytes, the default is 200k gas limit and strict = false.\\n  struct EVM2AnyMessage {\\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\\n    bytes data; // Data payload\\n    EVMTokenAmount[] tokenAmounts; // Token transfers\\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\\n  }\\n\\n  // extraArgs will evolve to support new features\\n  // bytes4(keccak256(\\\"CCIP EVMExtraArgsV1\\\"));\\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\\n  struct EVMExtraArgsV1 {\\n    uint256 gasLimit; // ATTENTION!!! MAX GAS LIMIT 4M FOR BETA TESTING\\n    bool strict; // See strict sequencing details below.\\n  }\\n\\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `to`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `from` to `to` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\",\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n  /**\\n    * @dev Returns true if this contract implements the interface defined by\\n    * `interfaceId`. See the corresponding\\n    * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n    * to learn more about how these ids are created.\\n    *\\n    * This function call must use less than 30 000 gas.\\n    */\\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\",\"keccak256\":\"0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"EIP-721 Metadata Update Extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":860,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":862,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":866,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":870,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":874,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":880,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ERC721Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 Token that can be burned (destroyed).","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"burn(uint256)":{"details":"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"title":"ERC721 Burnable Token","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        _update(address(0), tokenId, _msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":860,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":862,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":866,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":870,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":874,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":880,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}"},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Strings} from \\\"../../../utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"../../../interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"../../../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 tokenId => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        _tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":860,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":862,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":866,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":870,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":874,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":880,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2028,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"devdoc":{"details":"String operations.","errors":{"StringsInsufficientHexLength(uint256,uint256)":[{"details":"The `value` string doesn't fit in the specified `length`."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c92920b95ff65aa793f2a6cb729072c41d92e770eb032455500b0ff1f7277a864736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP3 SWAP3 SIGNEXTEND SWAP6 SELFDESTRUCT PUSH6 0xAA793F2A6CB7 0x29 SMOD 0x2C COINBASE 0xD9 0x2E PUSH24 0xEB032455500B0FF1F7277A864736F6C6343000814003300 ","sourceMap":"251:2847:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c92920b95ff65aa793f2a6cb729072c41d92e770eb032455500b0ff1f7277a864736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP3 SWAP3 SIGNEXTEND SWAP6 SELFDESTRUCT PUSH6 0xAA793F2A6CB7 0x29 SMOD 0x2C COINBASE 0xD9 0x2E PUSH24 0xEB032455500B0FF1F7277A864736F6C6343000814003300 ","sourceMap":"251:2847:21:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite","toStringSigned(int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","errors":{"MathOverflowedMulDiv()":[{"details":"Muldiv operation overflow."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122012c133ef50a1088e596f2a16708e36baf6d837de2bde41fdf13598dcf0ccce2164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xC1 CALLER 0xEF POP LOG1 ADDMOD DUP15 MSIZE PUSH16 0x2A16708E36BAF6D837DE2BDE41FDF135 SWAP9 0xDC CREATE 0xCC 0xCE 0x21 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122012c133ef50a1088e596f2a16708e36baf6d837de2bde41fdf13598dcf0ccce2164736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xC1 CALLER 0xEF POP LOG1 ADDMOD DUP15 MSIZE PUSH16 0x2A16708E36BAF6D837DE2BDE41FDF135 SWAP9 0xDC CREATE 0xCC 0xCE 0x21 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:24:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite","unsignedRoundsUp(enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202f9d21d37e7577d4ac43154e026d10e58732e7efd50f37eb4047ffc0806f663364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SWAP14 0x21 0xD3 PUSH31 0x7577D4AC43154E026D10E58732E7EFD50F37EB4047FFC0806F663364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"216:1047:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202f9d21d37e7577d4ac43154e026d10e58732e7efd50f37eb4047ffc0806f663364736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SWAP14 0x21 0xD3 PUSH31 0x7577D4AC43154E026D10E58732E7EFD50F37EB4047FFC0806F663364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"216:1047:25:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Horizon.sol":{"Horizon":{"abi":[{"inputs":[{"internalType":"address","name":"_router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"router","type":"address"}],"name":"InvalidRouter","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"totalAmountLate","type":"uint256"}],"name":"AmountLateWithInterest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountWithInterests","type":"uint256"}],"name":"AmountToPay","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_idTitle","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_contractId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_drawNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_idOfColateralTitle","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_idOfColateralContract","type":"uint256"}],"name":"ColateralTitleAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_idTitle","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_contractId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_drawSelected","type":"uint256"},{"indexed":false,"internalType":"address","name":"_fujiReceiver","type":"address"}],"name":"CreatingPermission","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_temporaryEnsurance","type":"address"}],"name":"EnsuranceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_idTitle","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_contractId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_valueOfEnsurance","type":"uint256"}],"name":"EnsuranceValueNeededUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_idTitle","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_contractId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_installmentsPaid","type":"uint256"}],"name":"InstallmentPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_installmentsPaid","type":"uint256"}],"name":"LastInstallmentPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"messageId","type":"bytes32"},{"indexed":true,"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"text","type":"string"}],"name":"MessageReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_idTitle","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_drawNumber","type":"uint256"},{"indexed":false,"internalType":"address","name":"_winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"_titleValue","type":"uint256"}],"name":"MonthlyWinnerPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_idTitle","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_drawNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_randomValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_selectedContractId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_winner","type":"address"}],"name":"MonthlyWinnerSelected","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum Horizon.MyTitleWithdraw","name":"myTitleStatus","type":"uint8"}],"name":"MyTitleStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_investmentValue","type":"uint256"},{"indexed":false,"internalType":"address","name":"_protocolAddress","type":"address"}],"name":"NewInvestmentCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_titleId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_scheduleId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_monthlyValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_titleValue","type":"uint256"}],"name":"NewTitleCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_contractId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_owner","type":"address"}],"name":"NewTitleSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_nextDraw","type":"uint256"}],"name":"NextDraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"lateInstallments","type":"uint256"}],"name":"PaymentIsLate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_i","type":"uint256"}],"name":"PaymentLateNumber","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_installmentsPaid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_colateralTitleId","type":"uint256"},{"indexed":false,"internalType":"address","name":"_colateralReceiptAddress","type":"address"},{"indexed":false,"internalType":"address","name":"_nftAddress","type":"address"},{"indexed":false,"internalType":"enum Horizon.MyTitleWithdraw","name":"myTitleStatus","type":"uint8"}],"name":"ThereAreSomePendencies","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_titlesAvailableForNextDraw","type":"uint256"}],"name":"ThisTitleHasBeenCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum Horizon.TitleStatus","name":"status","type":"uint8"}],"name":"TitleStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"fulfilled","type":"bool"},{"indexed":false,"internalType":"uint256[]","name":"randomWords","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"randomValue","type":"uint256"}],"name":"VRFAnswer","type":"event"},{"inputs":[{"internalType":"uint256","name":"_idTitle","type":"uint256"},{"internalType":"uint256","name":"_contractId","type":"uint256"}],"name":"addRWAColateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_receiverAddress","type":"address"}],"name":"addReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"}],"name":"addSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_sourceChainSelector","type":"uint64"}],"name":"addSourceChain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_titleId","type":"uint256"},{"internalType":"uint256","name":"_contractId","type":"uint256"},{"internalType":"uint256","name":"_idOfColateralTitle","type":"uint256"},{"internalType":"uint256","name":"_idOfColateralContract","type":"uint256"}],"name":"addTitleAsColateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"titleId","type":"uint256"}],"name":"allTitles","outputs":[{"internalType":"uint256","name":"openSellingDate","type":"uint256"},{"internalType":"uint256","name":"closeSellingDate","type":"uint256"},{"internalType":"uint256","name":"paymentSchedule","type":"uint256"},{"internalType":"uint256","name":"nextDrawNumber","type":"uint256"},{"internalType":"uint256","name":"titleValue","type":"uint256"},{"internalType":"uint256","name":"installments","type":"uint256"},{"internalType":"uint256","name":"monthlyInvestiment","type":"uint256"},{"internalType":"uint256","name":"protocolFee","type":"uint256"},{"internalType":"uint256","name":"numberOfTitlesSold","type":"uint256"},{"internalType":"uint256","name":"totalValueReceived","type":"uint256"},{"internalType":"uint256","name":"totalValuePaid","type":"uint256"},{"internalType":"uint256","name":"titleCanceled","type":"uint256"},{"internalType":"enum Horizon.TitleStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_titleId","type":"uint64"},{"internalType":"bool","name":"withdrawPeriod","type":"bool"},{"internalType":"contract IERC20","name":"_tokenAddress","type":"address"}],"name":"buyTitle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]"}],"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple"}],"name":"ccipReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"titleId","type":"uint256"},{"internalType":"uint256","name":"contractId","type":"uint256"}],"name":"colateralInfos","outputs":[{"internalType":"address","name":"colateralOwner","type":"address"},{"internalType":"uint256","name":"titleIdOfColateral","type":"uint256"},{"internalType":"uint256","name":"contractIdOfColateral","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_opening","type":"uint256"},{"internalType":"uint256","name":"_closing","type":"uint256"},{"internalType":"uint256","name":"_participants","type":"uint256"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"createTitle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"titleId","type":"uint256"},{"internalType":"uint256","name":"drawNumber","type":"uint256"}],"name":"drawInfos","outputs":[{"internalType":"uint256","name":"idTitle","type":"uint256"},{"internalType":"uint256","name":"drawNumber","type":"uint256"},{"internalType":"uint256","name":"drawDate","type":"uint256"},{"internalType":"uint256","name":"totalParticipants","type":"uint256"},{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256","name":"randomNumberVRF","type":"uint256"},{"internalType":"uint256","name":"selectedContractID","type":"uint256"},{"internalType":"address","name":"winner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastReceivedMessageDetails","outputs":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"bytes","name":"text","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idTitle","type":"uint256"}],"name":"monthlyVRFWinner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idTitle","type":"uint256"},{"internalType":"uint256","name":"_contractId","type":"uint256"},{"internalType":"uint256","name":"_installmentNumber","type":"uint256"},{"internalType":"contract IERC20","name":"_tokenAddress","type":"address"}],"name":"payInstallment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idTitle","type":"uint256"},{"internalType":"contract IERC20","name":"_tokenAddress","type":"address"}],"name":"protocolWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idTitle","type":"uint256"}],"name":"receiveVRFRandomNumber","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idTitle","type":"uint256"},{"internalType":"uint256","name":"_contractId","type":"uint256"}],"name":"refundColateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"}],"name":"removeSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_sourceChainSelector","type":"uint64"}],"name":"removelistSourceChain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"titleId","type":"uint256"},{"internalType":"uint256","name":"drawNumber","type":"uint256"},{"internalType":"uint256","name":"paymentOrder","type":"uint256"}],"name":"selectorVRF","outputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"uint256","name":"installmentNumber","type":"uint256"},{"internalType":"uint256","name":"paymentDate","type":"uint256"},{"internalType":"address","name":"payerAddress","type":"address"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"paymentDelay","type":"uint256"},{"internalType":"bool","name":"paid","type":"bool"},{"internalType":"uint256","name":"installmentsPaid","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"titleId","type":"uint256"},{"internalType":"uint256","name":"contractId","type":"uint256"}],"name":"titleSoldInfos","outputs":[{"internalType":"uint256","name":"contractId","type":"uint256"},{"internalType":"uint256","name":"titleValue","type":"uint256"},{"internalType":"uint256","name":"installments","type":"uint256"},{"internalType":"uint256","name":"monthlyValue","type":"uint256"},{"internalType":"uint256","name":"periodLocked","type":"uint256"},{"internalType":"address","name":"titleOwner","type":"address"},{"internalType":"uint256","name":"installmentsPaid","type":"uint256"},{"internalType":"uint256","name":"drawSelected","type":"uint256"},{"internalType":"uint256","name":"colateralId","type":"uint256"},{"internalType":"address","name":"colateralTitleAddress","type":"address"},{"internalType":"address","name":"colateralRWAAddress","type":"address"},{"internalType":"uint256","name":"valueOfEnsuranceNeeded","type":"uint256"},{"internalType":"enum Horizon.MyTitleWithdraw","name":"myTitleStatus","type":"uint8"},{"internalType":"bool","name":"paid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_titleId","type":"uint256"}],"name":"updateTitleStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_titleId","type":"uint256"},{"internalType":"uint256","name":"_contractId","type":"uint256"}],"name":"verifyLatePayments","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"whitelistedSenders","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"name":"whitelistedSourceChains","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_idTitle","type":"uint256"},{"internalType":"uint256","name":"_contractId","type":"uint256"},{"internalType":"contract IERC20","name":"_stablecoin","type":"address"}],"name":"winnerWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"details":"Note ensure you check the msg.sender is the OffRampRouter","params":{"message":"CCIP Message"}},"getRouter()":{"returns":{"_0":"i_router address"}},"supportsInterface(bytes4)":{"params":{"interfaceId":"The interfaceId to check"},"returns":{"_0":"true if the interfaceId is supported"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0346200012657601f6200427038819003918201601f19168301916001600160401b038311848410176200012b578084926020946040528339810103126200012657516001600160a01b0381168082036200012657156200010d57608052600060045560018060a01b031973cd24c9696f2aa4bb15170b263e72642b5600b47981600b541617600b5573e7d98f63efcdd443549b64205b1a1d22af8c100781600c541617600c55730203fc68ded882c7b669b4711c42fb7a27e119a981600d541617600d5573c3e7e776227d34874f6082f2f8476dd150dec2de81600e541617600e553390600854161760085560405161412e9081620001428239608051818181610d3b01526113c40152f35b6040516335fdcccd60e21b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146129a35750806323478654146127a4578063263596a514612767578063272efc69146127285780632d7c0b7f1461244e57806331ae0df61461236b5780634991126d146122bb5780634c67469c1461205f5780634facbacb14611c4257806358a15a2e14611c2b578063643233e51461187c57806369d83ed1146118425780637dc91a021461180357806385572ffb146113875780638a12312c146112c95780638f9fce70146110d65780639beaf73114610e45578063ab92263114610dbc578063ad3b6da314610d6a578063b0f479a114610d25578063b2f8764314610cd9578063b697f53114610c8a578063ba658a44146107bb578063c39622f814610785578063c5ec1c7a14610733578063d0ade9d514610470578063d762a160146101a75763ff46ed531461015357600080fd5b346101a25760203660031901126101a2576001600160401b03610174612abe565b61018960018060a01b03600854163314613fa5565b166000908152600260205260409020805460ff19169055005b600080fd5b346101a2576020806003193601126101a2576004359081600052600f81526040600020600c81019283549160ff8316916101e083612a88565b6004831480801561045d575b801561044a575b15610405578254421190816103f4575b501561024557505050507fb34436423c205503bb9de249902d7e3e7fc76197d9cec741c46e9e0dd6489f4491600360ff1982541617905560405160038152a15b005b60018295949501544211806103e1575b1561026c575050505050600160ff19825416179055005b60018060a0979596971b03600b541692856003840154926044604051809781936301acb51d60e31b835260048301528660248301525afa9384156103d5576000946103a6575b506102bc81612a88565b6001811491829182610398575b8315610353575b5050506000146103145750507fb34436423c205503bb9de249902d7e3e7fc76197d9cec741c46e9e0dd6489f449250600260ff1982541617905560405160028152a1005b600801549091901561032257005b7f2e24ed849df3be5edecca4a9280b775d8d82b800d0ebefaa298f3d61a0998a709360ff19169055604051908152a1005b61035f91929350612a88565b8161037c575b5080610374575b8680806102d0565b50811561036c565b61038c9150600b83015490612bfe565b60058201541086610365565b6005850154821193506102c9565b9093508581813d83116103ce575b6103be8183612b0a565b810103126101a2575192876102b2565b503d6103b4565b6040513d6000823e3d90fd5b506103eb83612a88565b60038314610255565b90506103ff84612a88565b87610203565b60405162461bcd60e51b815260048101879052601860248201527f54686973207469746c6520616c726561647920656e64656400000000000000006044820152606490fd5b5061045484612a88565b600184146101f3565b5061046784612a88565b600384146101ec565b346101a2576020806003193601126101a25760043580600052600f825260406000209160118152604060002060038401908154600052825260406000209060018060a01b0380600c541695600060048501546024604051809a819363d8a4676f60e01b835260048301525afa9283156103d5576000809860009561068c575b50156106475760405160608101986001998a83526060898401528151809152886080840192019060005b81811061063457507f495707aadfdb79a8158bc4c70170204a5bd6402ce8d4f16af9b93d19f5b864b760a08c8c8f8c8e918d8d8d7f6eed17f1838c49c44631282c96ef8d77984fda771e865bc74772b03c5da4bde78e808f8860408301520390a18760005260128752604060002093600c81880193845496876000528a526040600020886000528a526040600020968860058b0155875460068b015560048801996007888c54169101906001600160601b038f1b8254161790558b60005260108b52604060002088546000528b526007604060002001556105fb87548c613b5d565b019060ff198254161790556106108154612ba4565b905554915493541693604051958652850152604084015260608301526080820152a1005b82518452928a0192918a01918c01610519565b60405162461bcd60e51b815260048101879052601960248201527f5652462072657175657374206e6f742066756c66696c6c6564000000000000006044820152606490fd5b98505092503d806000893e6106a18189612b0a565b8701926060888503126101a2576106b78861341a565b97868101516001600160401b0381116101a25781019480601f870112156101a25785516106e381612b8d565b966106f16040519889612b0a565b818852898089019260051b8201019283116101a25789809101915b8383106107235750505050604001519397896104ef565b82518152918101918a910161070c565b346101a25760203660031901126101a2576001600160401b03610754612abe565b61076960018060a01b03600854163314613fa5565b166000908152600260205260409020805460ff19166001179055005b346101a25760803660031901126101a2576064356001600160a01b03811681036101a25761024390604435602435600435612c3d565b346101a25760603660031901126101a2576107d4612abe565b602435908115158092036101a2576107ea612aa8565b6001600160401b038216600052600f602052604060002091600360ff600c8501541661081581612a88565b03610c2857600883015493600584015494858111610bf257610838600191612ba4565b9182600887015514600014610be7576007840154946000905b6108646004870154976006880154612bfe565b9060405197886101c08101106001600160401b036101c08b011117610bbd576101c0890160405284895260208901526040880152606087015260808601523360a0860152600060c0860152600060e086015260006101008601523061012086015260006101408601526000610160860152600261018086015260006101a08601526001600160401b0382166000526010602052604060002090600052602052600c6040600020855181556020860151600182015560408601516002820155606086015160038201556080860151600482015560018060a01b0360a087015116600582016001600160601b0360a01b918282541617905560c0870151600683015560e0870151600783015561010087015160088301556009820160018060a01b036101208901511682825416179055600a82019060018060a01b036101408901511690825416179055610160860151600b820155016109d06101808601516109ca81612a88565b82612be6565b6101a0850151151561ff0082549160081b169061ff0019161790556008830154600584015410610bd3575b6101a06040519480516020870152602081015160408701526040810151606087015260608101516080870152608081015160a087015260018060a01b0360a08201511660c087015260c081015160e087015260e081015161010087015261010081015161012087015260018060a01b036101208201511661014087015260018060a01b0361014082015116610160870152610160810151610180870152610180810151610aa781612a88565b82870152015115156101c08501526101c084526101e08401938085106001600160401b03861117610bbd576040859052600d54636902622f60e11b865260209086906001600160a01b03168160006101df1986610b0981336101e48201612c0b565b0301925af180156103d557610b8c575b6001600160401b0382166000818152601060209081526040808320600889810154855292529182902080546006909101547f5462399704f0e380dbcb381163c0a1404e8b14097242551b2494b16157faa530948992610b7c928a92909190612c3d565b01548151908152336020820152a1005b602091939482903d8411610bb5575b81610ba591612b0a565b810103126101a257829184610b19565b3d9150610b9b565b634e487b7160e01b600052604160045260246000fd5b600c8301805460ff191660011790556109fb565b600094600590610851565b60405162461bcd60e51b815260206004820152600e60248201526d5469746c6520736f6c646f75742160901b6044820152606490fd5b60405162461bcd60e51b815260206004820152603460248201527f54686973205469746c65206973206e6f7420617661696c61626c652e20436865604482015273636b20746865205469746c65207374617475732160601b6064820152608490fd5b346101a25760203660031901126101a257610ca3612a54565b6008546001600160a01b039190610cbd9083163314613fa5565b166000908152600360205260409020805460ff19166001179055005b346101a25760203660031901126101a257610cf2612a54565b6008546001600160a01b039190610d0c9083163314613fa5565b166000908152600360205260409020805460ff19169055005b346101a25760003660031901126101a2576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a257610d78366129f6565b9060005260146020526040600020906000526020526060604060002060018060a01b0381541690600260018201549101549060405192835260208301526040820152f35b346101a257610dca366129f6565b906000526011602052604060002090600052602052610100604060002080549060018101549060028101546003820154600483015490600584015492600685015494600760018060a01b039101541695604051978852602088015260408701526060860152608085015260a084015260c083015260e0820152f35b346101a2576020806003193601126101a2576004359081600052600f8152604060002060018060a01b0380600b54169060028301549460038401918254966040516314d8039960e11b81528160048201528860248201528781604481895afa9081156103d5576000916110a9575b5042111561106e5786906044604051809781936301acb51d60e31b835260048301528b60248301525afa9384156103d55760009461103d575b50600c54604051630c9807d960e21b81526004810184905260248101989098526044880185905286908890606490829060009086165af19687156103d55760009761100e575b50600c85019660ff19966004888a5416178955845490604051916101008301938385106001600160401b03861117610bbd576005986007956040528785528385018381526040860190428252606087019283526080870193845260a08701946000865260c08801966000885260e089019b60008d5260005260118152604060002091600052526040600020965187555160018701555160028601555160038501555160048401555187830155516006820155019151166001600160601b0360a01b825416179055549101541061100457005b8154166002179055005b9096508581813d8311611036575b6110268183612b0a565b810103126101a257519587610f32565b503d61101c565b9693508587813d8311611067575b6110558183612b0a565b810103126101a2579551929585610eec565b503d61104b565b60405162461bcd60e51b815260048101889052601360248201527249736e2774207468652074696d65207965742160681b6044820152606490fd5b90508781813d83116110cf575b6110c08183612b0a565b810103126101a2575189610eb3565b503d6110b6565b346101a2576110e4366129f6565b908060005260206010815260406000208360005281526040600020600781018054611110811515613bff565b60058301546001600160a01b0393908416330361126e5760408051808701888152602081018a90529182018490526111e99387939092600b9261116081606084015b03601f198101835282612b0a565b5190209260026040519161117383612ad4565b8b83528683018d81526040840191825286600052601388526040600020935184555160018401555191015501546040519183830152604082015260016060820152606081526111c181612aef565b84600e541685600754166000604051809681958294630a30e37760e41b845260048401613ca3565b03925af180156103d55761123d575b7f28c64511bad94645265b4ac8c503dd3b588ca95f2bfb17598135c3e6cdc4be8260808686868a875491600754169260405194855284015260408301526060820152a1005b928092919493813d8311611267575b6112568183612b0a565b810103126101a257909192856111f8565b503d61124c565b60405162461bcd60e51b815260048101869052602d60248201527f4f6e6c792074686520647261772077696e6e65722063616e206372656174652060448201526c61207065726d697373696f6e2160981b6064820152608490fd5b346101a25760203660031901126101a257600435600052600f6020526101a0604060002080549060018101549060028101546003820154600483015460058401546006850154600786015491600887015493600988015495600a8901549760ff600c600b8c01549b0154169a6040519c8d5260208d015260408c015260608b015260808a015260a089015260c088015260e087015261010086015261012085015261014084015261016083015261137f81612a88565b610180820152f35b346101a257600319602036820181136101a257600435916001600160401b03908184116101a25760a09084360301126101a2576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811633036117eb576040519360a0850185811084821117610bbd5760405280600401358552602493848201359484861686036101a25781870195865260448301358581116101a25761143b9060043691860101612b46565b966040810197885260648401358681116101a25761145f9060043691870101612b46565b93606082019485526084810135908782116101a25701366023820112156101a25760048101359061148f82612b8d565b9161149d6040519384612b0a565b808352848684019160061b830101913683116101a2578501905b82821061179057505050608082015280516000558351805181019084818184019303126101a25784810151908882116101a257019080603f830112156101a25784820151611507926040016133c9565b9182519087821161177c5750806001936115218554613ff1565b601f811161170c575b508590601f831160011461168c57600092611681575b5050600019600383901b1c191690831b1782555b61155c61402b565b6060818051810103126101a25780840151879387606061157e604086016140e4565b9401519316916000526013865260406000209081546000526010875260406000209101546000528552604060002091806008840155600a8301826001600160601b0360a01b82541617905515159081611677575b50611663575b5051955116955181818051810103126101a257816115f691016140e4565b9151908151820181838203126101a257818301519586116101a25761164861165e93837fb1e312a29937cc11967b0e4a346fef1ae132424ebaba9dc6d90249dba053e87c988160409501920101613400565b9181519586951685528401526040830190612a2f565b0390a3005b600c01805460ff19166003179055886115d8565b905015158a6115d2565b015190508a80611540565b90859350601f19831691846000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b898282106116f657505084116116dd575b505050811b018255611554565b015160001960f88460031b161c191690558a80806116d0565b83850151865589979095019493840193016116bf565b909150846000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f840160051c810191878510611772575b84939291601f88920160051c01915b82811061176357505061152a565b60008155859450879101611755565b9091508190611746565b634e487b7160e01b60009081526041600452fd5b6040823603126101a25760405190604082018281108c8211176117d6576040528235908a821682036101a2578289926040945282850135838201528152019101906114b7565b87634e487b7160e01b60005260416004526000fd5b6040516335fdcccd60e21b8152336004820152602490fd5b346101a25760203660031901126101a2576001600160401b03611824612abe565b166000526002602052602060ff604060002054166040519015158152f35b346101a25760203660031901126101a2576001600160a01b03611863612a54565b166001600160601b0360a01b6007541617600755600080f35b346101a25761188a36612a6a565b928015611bce5780831115611b72578115611b1a576118f2916020846118b1600454612ba4565b8060045583600060018060a01b03600b54169260405198899586948593630a52975960e31b8552600485016040919493926060820195825260208201520152565b03925af19283156103d557600093611ae6575b50670de0b6b3a764000094858102958187041490151715611ad05761192a8186612bc6565b906119358187612bc6565b600581029080820460051490151715611ad057604051926101a08401928484106001600160401b03851117610bbd577f89c4c2329efcd15ed5ec8cc7dd2e4c2103edd8b1d7e9e17e76da38d7b83ade6798608098611a809760649660405287526020870152876040870152600160608701528886015260a085015260c08401520460e082015260006101008201526000610120820152600061014082015260006101608201526004610180820152600454600052600f602052600c6101806040600020928051845560208101516001850155604081015160028501556060810151600385015586810151600485015560a0810151600585015560c0810151600685015560e0810151600785015561010081015160088501556101208101516009850155610140810151600a850155610160810151600b850155015191611a7a83612a88565b01612be6565b6004549081600052600f602052611aa560406000206007600682015491015490612bfe565b82600052600f60205260046040600020015491604051938452602084015260408301526060820152a1005b634e487b7160e01b600052601160045260246000fd5b9092506020813d602011611b12575b81611b0260209383612b0a565b810103126101a257519185611905565b3d9150611af5565b60405162461bcd60e51b815260206004820152602a60248201527f4d7573742073657420746865206e756d626572206f6620746f74616c207061726044820152697469636970616e74732160b01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602e60248201527f4d7573742053656c6563742061206461746520746f2073746f7020746f20736560448201526d6c6c20746865207469746c65732160901b6064820152608490fd5b60405162461bcd60e51b815260206004820152602f60248201527f4d7573742053656c6563742061206461746520746f20737461727420746f207360448201526e656c6c20746865207469746c65732160881b6064820152608490fd5b346101a257610243611c3c366129f6565b90613cd3565b346101a25760603660031901126101a257600435611c5e612aa8565b81600052602090600f82526040600020906010835260406000206024356000528352604060002093600585019360018060a01b03928386541633148015612052575b15611fe757831694611cb3861515613f65565b600c87019360ff855416611cc681612a88565b60038103611f895760068901549060028a015482148015611f7c575b8015611f5f575b15611ef157505060008082600b5416602460405180948193638c83ddd360e01b83528d60048401525af19081156103d557611d3291600191600091611ecb575b50151514613473565b600980546001600160a01b031916881790556040516370a0823160e01b815230600482015283816024818b5afa9081156103d557600091611e9e575b50600189019788548092106101a257835460405163a9059cbb60e01b81529084166001600160a01b03166004820152602481019290925284908290816000816044810103925af180156103d557611e30575b50927fa15c2435fada31fa58c0eb6a516d9b0df54ed70f48f3680ba2b527955c5797c192611e2c97608093600a98979660078c015491541691549260405194855284015260408301526060820152a15b61010061ff001982541617905501916001835491015490612bfe565b9055005b9195949390928083813d8311611e97575b611e4b8183612b0a565b810103126101a257611e2c97600a977fa15c2435fada31fa58c0eb6a516d9b0df54ed70f48f3680ba2b527955c5797c195611e8760809661341a565b5093969798509350975092611dc0565b503d611e41565b90508381813d8311611ec4575b611eb58183612b0a565b810103126101a2575189611d6e565b503d611eab565b611ee891503d806000833e611ee08183612b0a565b810190613427565b9150508b611d29565b9091611e2c9850600a9796955060a09350937f09878aa34b75479da70e37bce4455679dae86d7580d3cf362e48f2abb18baacd9460088b01548160098d015416918a8d0154169260405195865285015260408401526060830152611f5481612a88565b6080820152a1611e10565b5082600a8b01541615158015611ce9575060088a01541515611ce9565b5060088a01541515611ce2565b60405162461bcd60e51b815260048101859052603060248201527f54686973207469746c6520646f6e2774206861766520746865207065726d697360448201526f73696f6e20746f20776974686472617760801b6064820152608490fd5b60405162461bcd60e51b815260048101839052603c60248201527f4d73672e73656e646572206d7573742062652074686520636f6e74726163742060448201527f4f776e6572206f72207468652070726f746f636f6c206f776e657221000000006064820152608490fd5b5083600854163314611ca0565b346101a25760403660031901126101a2576024356001600160a01b03818116918290036101a25761209581600854163314613fa5565b600435600052602090600f8252604060002060ff600c820154166120b881612a88565b600281149081156122a9575b50156101a25761210460096120f06120e56008850154600b86015490612c30565b600485015490612bb3565b920154916120fe8184612c30565b92612c30565b811161225657612115841515613f65565b60008083600b5416602460405180948193638c83ddd360e01b83528a60048401525af19081156103d557612156916001916000916122385750151514613473565b600980546001600160a01b031916851790556040516370a0823160e01b81523060048201528381602481885afa80156103d5578291600091612207575b50106101a257600b5460405163a9059cbb60e01b815292166001600160a01b0316600483015260248201529181908390816000816044810103925af180156103d5576121db57005b81813d8311612200575b6121ef8183612b0a565b810103126101a2576102439061341a565b503d6121e5565b809250858092503d8311612231575b6122208183612b0a565b810103126101a25781905186612193565b503d612216565b61224d91503d806000833e611ee08183612b0a565b91505087611d29565b60405162461bcd60e51b815260048101849052602560248201527f5f616d6f756e742063616e27742065786365656420746865207469746c652076604482015264616c75652160d81b6064820152608490fd5b90506122b481612a88565b15856120c4565b346101a25760603660031901126101a2576004356000526012602052604060002060243560005260205260406000206044356000526020526101206040600020805490600181015490600281015460018060a01b038060038401541690600484015416600584015491600685015493600860ff60078801541696015496604051988952602089015260408801526060870152608086015260a085015260c0840152151560e0830152610100820152f35b346101a257612379366129f6565b9060005260106020526040600020906000526020526101c0604060002060ff8154916001810154906002810154600382015460048301549060018060a01b0391826005860154166006860154906007870154926008880154948660098a01541696600a8a01541697600c600b8b01549a01549a60206040519e8f908152015260408d015260608c015260808b015260a08a015260c089015260e088015261010087015261012086015261014085015261016084015281811661243a81612a88565b61018084015260081c1615156101a0820152f35b346101a25761245c36612a6a565b908060009493945260209360108552604060002083600052855260406000208460005260108652604060002082600052865260406000209060078201916124a583541515613bff565b60058101546001600160a01b0391906124c19083163314613c4b565b60058301926124d4338486541614613c4b565b600181015490600b830154908183106126ad5780600360066124fb93015491015490612bb3565b918160011b9180830460021490151715611ad05782149182156126a2575b5050156125d757917f50243003e9d7ef147493229d55468984fe3256e1b1cf63b435c46d06331682a4989391600c60a0999897969401600360ff1982541617905560405161256681612ad4565b33815260028682019288845260408301908a82528b6000526014895260406000208860005289526040600020935116936001600160601b038d1b94858554161784555160018401555191015530908254161790555491604051958652850152604084015260608301526080820152a1005b60405162461bcd60e51b8152600481018a9052608b60248201527f416c6c2074686520696e7374616c6c6d656e74732066726f6d2074686520636f60448201527f6c61746572616c206d7573742068617665206265656e2070616964206f72206160648201527f74206c65617374207468652076616c75652070616964206d757374206265206760848201527f726561746572207468656e2074776f2074696d65732074686520656e7375726560a48201526a15985b1d5953995959195960aa1b60c482015260e490fd5b101590508a80612519565b60405162461bcd60e51b8152600481018d9052604760248201527f54686520636f6c61746572616c20746f74616c2076616c7565206d757374206260448201527f652067726561746572207468616e2074756520656e737572616e636556616c756064820152661953995959195960ca1b608482015260a490fd5b346101a25760203660031901126101a2576001600160a01b03612749612a54565b166000526003602052602060ff604060002054166040519015158152f35b346101a25760003660031901126101a25760005461278361402b565b906127a06040519283928352604060208401526040830190612a2f565b0390f35b346101a2576127b2366129f6565b81600052600f60209181835260406000209160016008918285019560038601925b875481101561024357886000526010908183526040600020816000528352876040600020928654938c866002968761280f600686015483612c30565b106128e157505061285b95600c918284019360ff1994858154169055600b80970161283a8154612ba4565b90558c81015415908115916128bc575b50612860575b505050505050612ba4565b6127d3565b6000526014885260406000208c60005288526040600020906001820154600052898952604060002094895260406000209101546000528752604060002001908154169055016128af8154612ba4565b90558a808080808e612850565b600a01546001600160a01b0316151590816128d9575b503861284a565b9050386128d2565b929450925050604460018060a01b03600b5416958c015460405196879384926301933c3960e61b8452600484015260248301525afa80156103d557600090612974575b61285b93504211612936575b50612ba4565b600c01600160ff198254161790557f5238eef763c91b9905201192c7b588678d655a1fec573e5434470d30d3f975be8360405160018152a18a612930565b508383813d831161299c575b61298a8183612b0a565b810103126101a25761285b9251612924565b503d612980565b346101a25760203660031901126101a2576004359063ffffffff60e01b82168092036101a2576020916385572ffb60e01b81149081156129e5575b5015158152f35b6301ffc9a760e01b149050836129de565b60409060031901126101a2576004359060243590565b60005b838110612a1f5750506000910152565b8181015183820152602001612a0f565b90602091612a4881518092818552858086019101612a0c565b601f01601f1916010190565b600435906001600160a01b03821682036101a257565b60809060031901126101a25760043590602435906044359060643590565b60051115612a9257565b634e487b7160e01b600052602160045260246000fd5b604435906001600160a01b03821682036101a257565b600435906001600160401b03821682036101a257565b606081019081106001600160401b03821117610bbd57604052565b608081019081106001600160401b03821117610bbd57604052565b90601f801991011681019081106001600160401b03821117610bbd57604052565b6001600160401b038111610bbd57601f01601f191660200190565b81601f820112156101a257803590612b5d82612b2b565b92612b6b6040519485612b0a565b828452602083830101116101a257816000926020809301838601378301015290565b6001600160401b038111610bbd5760051b60200190565b6000198114611ad05760010190565b81810292918115918404141715611ad057565b8115612bd0570490565b634e487b7160e01b600052601260045260246000fd5b90612bf081612a88565b60ff80198354169116179055565b91908201809211611ad057565b6001600160a01b039091168152604060208201819052612c2d92910190612a2f565b90565b91908203918211611ad057565b9091600090828252600f602052604082206010602052604083208584526020526040832095600160ff600c84015416612c7581612a88565b036133845760028701908382541061332b57600c88019360ff855416612c9a81612a88565b60028114908115613316575b8115613302575b50156132fe57806132b6576001915b60018060a01b03600b5416602060028701546044604051809481936301933c3960e61b835260048301528860248301525afa908115613235578891613284575b5080421160001461324057612d119042612c30565b908160065581613169575b50505b60018060a01b0360058a015416956005549660065460068c019889549260405196876101208101106001600160401b036101208a0111176131555761012088016040528d88526020880152426040880152336060880152608087015260a086015260c0850152600160e08501528061010085015260038601548091101580613149575b612f87575b5090506101006040519280516020850152602081015160408501526040810151606085015260018060a01b03606082015116608085015260018060a01b0360808201511660a085015260a081015160c085015260c081015160e085015260e0810151151582850152015161012083015261012082526101408201908282106001600160401b03831117610bbd576040829052600d54636902622f60e11b835260209083906001600160a01b0316818461013f1988612e6a81336101448201612c0b565b0301925af1908115612f7b5750612f44575b5050907fd6985739ec9552d19c3572fc03d8cc0f929e20de244eaa8d01c1786d61fd177a96849392612eee9554905414612f1b575b50600383549101541480612f04575b612ef3575b50612ed08484613b5d565b54604051938493846040919493926060820195825260208201520152565b0390a1565b805460ff1916600217905538612ec5565b50600160ff825416612f1581612a88565b14612ec0565b825460ff1916600317835560080154612f35575b38612eb1565b612f3f8686613cd3565b612f2f565b90602091829695949396903d8411612f73575b81612f6191612b0a565b810103126101a2579091923880612e7c565b3d9150612f57565b604051903d90823e3d90fd5b60018060a01b03600b5416906002870154823b1561314557906044849283604051958694859363560337d160e11b8552600485015260248401525af1801561313a5761310f575b50600b54600286015460038701546040516301acb51d60e31b815260048101929092526024820152919290602090839060449082906001600160a01b03165afa9182156131045783926130d0575b5088835260126020526040832090835260205260408220908252602052604081208251815560208301516001820155604083015160028201556003810160018060a01b03606085015116906001600160601b0360a01b9182825416179055600482019060018060a01b036080860151169082541617905560a0830151600582015560c083015160068201556007810160e0840151151560ff8019835416911617905560086101008401519101558038612da7565b9091506020813d6020116130fc575b816130ec60209383612b0a565b810103126101a25751903861301c565b3d91506130df565b6040513d85823e3d90fd5b6001600160401b0381116131265760405238612fce565b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b8380fd5b5060078b015415612da2565b634e487b7160e01b86526041600452602486fd5b600b546002870154600554604051632b18775560e01b8152600481019590955260248501919091526044840152602090839060649082908c906001600160a01b03165af180156132355788906131fb575b6131f49250806005557f57d559aaa778ae17e20a31e208d5763cb05667142a48b6098af5fb106b0ce8d96020604051838152a18a8a6134b4565b3880612d1c565b50906020813d60201161322d575b8161321660209383612b0a565b8101031261322957906131f491516131ba565b8780fd5b3d9150613209565b6040513d8a823e3d90fd5b5061327f9060038b0154806005557f57d559aaa778ae17e20a31e208d5763cb05667142a48b6098af5fb106b0ce8d96020604051838152a18a8a6134b4565b612d1f565b90506020813d6020116132ae575b8161329f60209383612b0a565b81010312613229575138612cfc565b3d9150613292565b60068901548111156132c9578091612cbc565b60405162461bcd60e51b815260206004820152600d60248201526c416c726561647920706169642160981b6044820152606490fd5b8580fd5b6003915061330f81612a88565b1438612cad565b905061332181612a88565b6001811490612ca6565b60405162461bcd60e51b815260206004820152602b60248201527f596f7520646f6e2774206861766520616e7920696e7374616c6c6d656e74206c60448201526a65667420746f207061792160a81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601760248201527f436865636b20746865207469746c6520737461747573210000000000000000006044820152606490fd5b909291926133d681612b2b565b916133e46040519384612b0a565b8294828452828201116101a25760206133fe930190612a0c565b565b9080601f830112156101a2578151612c2d926020016133c9565b519081151582036101a257565b906060828203126101a2578151906001600160401b0382116101a25761344e918301613400565b60208201519092906001600160a01b03811681036101a2576040612c2d91930161341a565b1561347a57565b60405162461bcd60e51b8152602060048201526012602482015271546f6b656e206e6f7420616c6c6f7765642160701b6044820152606490fd5b92600091848352602091601083526040918285209085528352818420958452600f8352818420908654600883015410613b075760ff600c880154166134f881612a88565b801590811591613af2575b5015613a73576001600160a01b039081168015613a37578582600b5416918551638c83ddd360e01b8152828160049584878301528160249687925af19081156139de5761355c916001918b91613a1a5750151514613473565b600980546001600160a01b0319168217905560038a015489106139e85785516370a0823160e01b8152338482015287818481855afa9081156139de57908a918a916139a9575b50106139705786604491875192838092636eb1769f60e11b8252338883015230878301525afa90811561374757908991899161393f575b50106138e05750878101546137515760098301968754976006850154988961360091612bfe565b905560095485516323b872dd60e01b80825233858301908152306020820152604081019b909b529990918891839187169082908c90829060600103925af18015613747579188918896959493613704575b5061366b906006856009541695600b541696015490612c30565b8651998a5233928a019283526001600160a01b039094166020830152604082019390935287928391829060600103925af19081156136fb57506136bf575b5050506006905b016136bb8154612ba4565b9055565b82813d83116136f4575b6136d38183612b0a565b810103126136f15750906136e860069261341a565b509038806136a9565b80fd5b503d6136c9565b513d84823e3d90fd5b8092508691939495963d8311613740575b61371f8183612b0a565b810103126132295761366b87959493926137398a9361341a565b5090613651565b503d613715565b86513d8a823e3d90fd5b61377460098401936006855491019461376c86548093612bfe565b905588612c30565b156138a757600954835485516323b872dd60e01b80825233858301908152306020820152604081019390935299929091889183918290036060019082908c9089165af18015613747579188918896959493613864575b506137e190846009541694600b5416955490612c30565b8651998a5233928a019283526001600160a01b03909416602083015260408201939093528792839182906060015b03925af19081156136fb575061382b575b5050506006906136b0565b82813d831161385d575b61383f8183612b0a565b810103126136f157509061385460069261341a565b50903880613820565b503d613835565b8092508691939495963d83116138a0575b61387f8183612b0a565b81010312613229576137e187959493926138998a9361341a565b50906137ca565b503d613875565b60095484516323b872dd60e01b81523392810192835230602084015260408301989098528593508792169082908790829060600161380f565b845162461bcd60e51b81529182018690526034908201527f596f75206d75737420617070726f76652074686520636f6e747261637420746f604482015273207472616e736665722074686520746f6b656e7360601b6064820152608490fd5b809250888092503d8311613969575b6139588183612b0a565b8101031261322957889051386135d9565b503d61394e565b855162461bcd60e51b815280840188905260148184015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b809250898092503d83116139d7575b6139c28183612b0a565b810103126139d357899051386135a2565b8880fd5b503d6139b8565b87513d8b823e3d90fd5b855162461bcd60e51b8152808401889052600d818401526c57726f6e672076616c7565212160981b6044820152606490fd5b613a2e91503d808d833e611ee08183612b0a565b91505038611d29565b835162461bcd60e51b8152600481018690526015602482015274456e746572206120746f6b656e206164647265737360581b6044820152606490fd5b825162461bcd60e51b815260048101859052604c60248201527f796f7572207469746c6520616c72656164792068617665206265656e2066696e60448201527f616c697a6564206f722063616e63656c65642e20506c6561736520636865636b60648201526b103a34329039ba30ba3ab99760a11b608482015260a490fd5b60049150613aff81612a88565b141538613503565b825162461bcd60e51b815260048101859052602960248201527f456e74657220612076616c696420636f6e747261637420496420666f722074686044820152686973205469746c652160b81b6064820152608490fd5b907f0612a8a5548125c3db9f13b41025df2c888d69f8a0351889cd94bd21a45dd34b91612eee600b6000838152600f6020526040812090601060205260408120868252602052613bba604082209260068085015491015490612bb3565b6001830154808210613bec575050828201555b0154604051938493846040919493926060820195825260208201520152565b613bf69250612c30565b82820155613bcd565b15613c0657565b60405162461bcd60e51b815260206004820152601e60248201527f596f7520686176656e2774206265656e2073656c6563746564207965742100006044820152606490fd5b15613c5257565b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c7920746865206f776e65722063616e20616464206120636f6c61746572604482015262616c2160e81b6064820152608490fd5b67ccf0a31a221f3c9b81526001600160a01b039091166020820152606060408201819052612c2d92910190612a2f565b906000908282526020906010825260409081842081855283528184209060068201546002830154148015613f0f57600c830190600160ff835460081c16151503613ead578080613e97575b15613def57505090600b849596613dac9593613d5b6007850154916111528851938492898401968791606093918352602083015260408201520190565b519020910154835191838301528382015285606082015260608152613d7f81612aef565b60018060a01b0380600e54169060075416878551809781958294630a30e37760e41b845260048401613ca3565b03925af1908115613de65750613dc157505050565b813d8311613ddf575b613dd48183612b0a565b810103126136f15750565b503d613dca565b513d85823e3d90fd5b909694939281613e89575b50613e08575b505050505050565b600593855260148352818520908552825280842093815194613e2986612ad4565b60018060a01b0393848254168752600260018301549283838a01520154918488019283528352601081528383209151835252209251169101906001600160601b0360a01b825416179055600460ff19825416179055388080808080613e00565b600891500154151538613dfa565b50600a8401546001600160a01b03161515613d1e565b845162461bcd60e51b815260048101879052603560248201527f596f752063616e27742072657472696576652074686520636f6c61746572616c604482015274206265666f7265207468652077697468647261772160581b6064820152608490fd5b835162461bcd60e51b815260048101869052602960248201527f416c6c2074686520696e7374616c6c6d656e7473206d7573742068617665206260448201526865656e20706169642160b81b6064820152608490fd5b15613f6c57565b60405162461bcd60e51b8152602060048201526011602482015270151bdad95b881b9bdd08185b1b1bddd959607a1b6044820152606490fd5b15613fac57565b60405162461bcd60e51b815260206004820152601d60248201527f5468652063616c6c6572206d75737420626520746865206f776e6572210000006044820152606490fd5b90600182811c92168015614021575b602083101461400b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691614000565b6040519060008260019182549261404184613ff1565b808452938181169081156140c25750600114614065575b506133fe92500383612b0a565b600081815291507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8483106140a757506133fe935050810160200138614058565b81935090816020925483858a0101520191019091859261408e565b9050602092506133fe94915060ff191682840152151560051b82010138614058565b51906001600160a01b03821682036101a25756fea2646970667358221220191216605b3f1eb3f87b92cb8da3061cecbb4e6efeafd666834fb5d18587fa4e64736f6c63430008140033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH3 0x126 JUMPI PUSH1 0x1F PUSH3 0x4270 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x12B JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x126 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH3 0x126 JUMPI ISZERO PUSH3 0x10D JUMPI PUSH1 0x80 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH20 0xCD24C9696F2AA4BB15170B263E72642B5600B479 DUP2 PUSH1 0xB SLOAD AND OR PUSH1 0xB SSTORE PUSH20 0xE7D98F63EFCDD443549B64205B1A1D22AF8C1007 DUP2 PUSH1 0xC SLOAD AND OR PUSH1 0xC SSTORE PUSH20 0x203FC68DED882C7B669B4711C42FB7A27E119A9 DUP2 PUSH1 0xD SLOAD AND OR PUSH1 0xD SSTORE PUSH20 0xC3E7E776227D34874F6082F2F8476DD150DEC2DE DUP2 PUSH1 0xE SLOAD AND OR PUSH1 0xE SSTORE CALLER SWAP1 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH2 0x412E SWAP1 DUP2 PUSH3 0x142 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD3B ADD MSTORE PUSH2 0x13C4 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x29A3 JUMPI POP DUP1 PUSH4 0x23478654 EQ PUSH2 0x27A4 JUMPI DUP1 PUSH4 0x263596A5 EQ PUSH2 0x2767 JUMPI DUP1 PUSH4 0x272EFC69 EQ PUSH2 0x2728 JUMPI DUP1 PUSH4 0x2D7C0B7F EQ PUSH2 0x244E JUMPI DUP1 PUSH4 0x31AE0DF6 EQ PUSH2 0x236B JUMPI DUP1 PUSH4 0x4991126D EQ PUSH2 0x22BB JUMPI DUP1 PUSH4 0x4C67469C EQ PUSH2 0x205F JUMPI DUP1 PUSH4 0x4FACBACB EQ PUSH2 0x1C42 JUMPI DUP1 PUSH4 0x58A15A2E EQ PUSH2 0x1C2B JUMPI DUP1 PUSH4 0x643233E5 EQ PUSH2 0x187C JUMPI DUP1 PUSH4 0x69D83ED1 EQ PUSH2 0x1842 JUMPI DUP1 PUSH4 0x7DC91A02 EQ PUSH2 0x1803 JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x1387 JUMPI DUP1 PUSH4 0x8A12312C EQ PUSH2 0x12C9 JUMPI DUP1 PUSH4 0x8F9FCE70 EQ PUSH2 0x10D6 JUMPI DUP1 PUSH4 0x9BEAF731 EQ PUSH2 0xE45 JUMPI DUP1 PUSH4 0xAB922631 EQ PUSH2 0xDBC JUMPI DUP1 PUSH4 0xAD3B6DA3 EQ PUSH2 0xD6A JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0xD25 JUMPI DUP1 PUSH4 0xB2F87643 EQ PUSH2 0xCD9 JUMPI DUP1 PUSH4 0xB697F531 EQ PUSH2 0xC8A JUMPI DUP1 PUSH4 0xBA658A44 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xC39622F8 EQ PUSH2 0x785 JUMPI DUP1 PUSH4 0xC5EC1C7A EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xD0ADE9D5 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xD762A160 EQ PUSH2 0x1A7 JUMPI PUSH4 0xFF46ED53 EQ PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x174 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x189 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC DUP2 ADD SWAP3 DUP4 SLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP2 PUSH2 0x1E0 DUP4 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x4 DUP4 EQ DUP1 DUP1 ISZERO PUSH2 0x45D JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x44A JUMPI JUMPDEST ISZERO PUSH2 0x405 JUMPI DUP3 SLOAD TIMESTAMP GT SWAP1 DUP2 PUSH2 0x3F4 JUMPI JUMPDEST POP ISZERO PUSH2 0x245 JUMPI POP POP POP POP PUSH32 0xB34436423C205503BB9DE249902D7E3E7FC76197D9CEC741C46E9E0DD6489F44 SWAP2 PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x3 DUP2 MSTORE LOG1 JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP3 SWAP6 SWAP5 SWAP6 ADD SLOAD TIMESTAMP GT DUP1 PUSH2 0x3E1 JUMPI JUMPDEST ISZERO PUSH2 0x26C JUMPI POP POP POP POP POP PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SWAP8 SWAP6 SWAP7 SWAP8 SHL SUB PUSH1 0xB SLOAD AND SWAP3 DUP6 PUSH1 0x3 DUP5 ADD SLOAD SWAP3 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 PUSH4 0x1ACB51D PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP7 PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x3A6 JUMPI JUMPDEST POP PUSH2 0x2BC DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x398 JUMPI JUMPDEST DUP4 ISZERO PUSH2 0x353 JUMPI JUMPDEST POP POP POP PUSH1 0x0 EQ PUSH2 0x314 JUMPI POP POP PUSH32 0xB34436423C205503BB9DE249902D7E3E7FC76197D9CEC741C46E9E0DD6489F44 SWAP3 POP PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x8 ADD SLOAD SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x322 JUMPI STOP JUMPDEST PUSH32 0x2E24ED849DF3BE5EDECCA4A9280B775D8D82B800D0EBEFAA298F3D61A0998A70 SWAP4 PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH2 0x35F SWAP2 SWAP3 SWAP4 POP PUSH2 0x2A88 JUMP JUMPDEST DUP2 PUSH2 0x37C JUMPI JUMPDEST POP DUP1 PUSH2 0x374 JUMPI JUMPDEST DUP7 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x36C JUMP JUMPDEST PUSH2 0x38C SWAP2 POP PUSH1 0xB DUP4 ADD SLOAD SWAP1 PUSH2 0x2BFE JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD LT DUP7 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD SLOAD DUP3 GT SWAP4 POP PUSH2 0x2C9 JUMP JUMPDEST SWAP1 SWAP4 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3CE JUMPI JUMPDEST PUSH2 0x3BE DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP3 DUP8 PUSH2 0x2B2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x3EB DUP4 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x3 DUP4 EQ PUSH2 0x255 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FF DUP5 PUSH2 0x2A88 JUMP JUMPDEST DUP8 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207469746C6520616C726561647920656E6465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x454 DUP5 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP5 EQ PUSH2 0x1F3 JUMP JUMPDEST POP PUSH2 0x467 DUP5 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x3 DUP5 EQ PUSH2 0x1EC JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0xF DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x11 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP5 ADD SWAP1 DUP2 SLOAD PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0xC SLOAD AND SWAP6 PUSH1 0x0 PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP11 DUP2 SWAP4 PUSH4 0xD8A4676F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 SWAP9 PUSH1 0x0 SWAP6 PUSH2 0x68C JUMPI JUMPDEST POP ISZERO PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD SWAP9 PUSH1 0x1 SWAP10 DUP11 DUP4 MSTORE PUSH1 0x60 DUP10 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE DUP9 PUSH1 0x80 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x634 JUMPI POP PUSH32 0x495707AADFDB79A8158BC4C70170204A5BD6402CE8D4F16AF9B93D19F5B864B7 PUSH1 0xA0 DUP13 DUP13 DUP16 DUP13 DUP15 SWAP2 DUP14 DUP14 DUP14 PUSH32 0x6EED17F1838C49C44631282C96EF8D77984FDA771E865BC74772B03C5DA4BDE7 DUP15 DUP1 DUP16 DUP9 PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x12 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0xC DUP2 DUP9 ADD SWAP4 DUP5 SLOAD SWAP7 DUP8 PUSH1 0x0 MSTORE DUP11 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP9 PUSH1 0x0 MSTORE DUP11 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 DUP9 PUSH1 0x5 DUP12 ADD SSTORE DUP8 SLOAD PUSH1 0x6 DUP12 ADD SSTORE PUSH1 0x4 DUP9 ADD SWAP10 PUSH1 0x7 DUP9 DUP13 SLOAD AND SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP16 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP12 PUSH1 0x0 MSTORE PUSH1 0x10 DUP12 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP9 SLOAD PUSH1 0x0 MSTORE DUP12 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH2 0x5FB DUP8 SLOAD DUP13 PUSH2 0x3B5D JUMP JUMPDEST ADD SWAP1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x610 DUP2 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 SLOAD SWAP4 SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 STOP JUMPDEST DUP3 MLOAD DUP5 MSTORE SWAP3 DUP11 ADD SWAP3 SWAP2 DUP11 ADD SWAP2 DUP13 ADD PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5652462072657175657374206E6F742066756C66696C6C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP9 POP POP SWAP3 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP10 RETURNDATACOPY PUSH2 0x6A1 DUP2 DUP10 PUSH2 0x2B0A JUMP JUMPDEST DUP8 ADD SWAP3 PUSH1 0x60 DUP9 DUP6 SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x6B7 DUP9 PUSH2 0x341A JUMP JUMPDEST SWAP8 DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI DUP2 ADD SWAP5 DUP1 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP6 MLOAD PUSH2 0x6E3 DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP7 PUSH2 0x6F1 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x2B0A JUMP JUMPDEST DUP2 DUP9 MSTORE DUP10 DUP1 DUP10 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A2 JUMPI DUP10 DUP1 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x723 JUMPI POP POP POP POP PUSH1 0x40 ADD MLOAD SWAP4 SWAP8 DUP10 PUSH2 0x4EF JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP11 SWAP2 ADD PUSH2 0x70C JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x754 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x769 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A2 JUMPI PUSH2 0x243 SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2C3D JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x7D4 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1A2 JUMPI PUSH2 0x7EA PUSH2 0x2AA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x3 PUSH1 0xFF PUSH1 0xC DUP6 ADD SLOAD AND PUSH2 0x815 DUP2 PUSH2 0x2A88 JUMP JUMPDEST SUB PUSH2 0xC28 JUMPI PUSH1 0x8 DUP4 ADD SLOAD SWAP4 PUSH1 0x5 DUP5 ADD SLOAD SWAP5 DUP6 DUP2 GT PUSH2 0xBF2 JUMPI PUSH2 0x838 PUSH1 0x1 SWAP2 PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x8 DUP8 ADD SSTORE EQ PUSH1 0x0 EQ PUSH2 0xBE7 JUMPI PUSH1 0x7 DUP5 ADD SLOAD SWAP5 PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x864 PUSH1 0x4 DUP8 ADD SLOAD SWAP8 PUSH1 0x6 DUP9 ADD SLOAD PUSH2 0x2BFE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x1C0 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1C0 DUP12 ADD GT OR PUSH2 0xBBD JUMPI PUSH2 0x1C0 DUP10 ADD PUSH1 0x40 MSTORE DUP5 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE CALLER PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP7 ADD MSTORE ADDRESS PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP7 ADD MSTORE PUSH1 0x2 PUSH2 0x180 DUP7 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 MLOAD DUP2 SSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP8 ADD MLOAD AND PUSH1 0x5 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP8 ADD MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x120 DUP10 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xA DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x140 DUP10 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x160 DUP7 ADD MLOAD PUSH1 0xB DUP3 ADD SSTORE ADD PUSH2 0x9D0 PUSH2 0x180 DUP7 ADD MLOAD PUSH2 0x9CA DUP2 PUSH2 0x2A88 JUMP JUMPDEST DUP3 PUSH2 0x2BE6 JUMP JUMPDEST PUSH2 0x1A0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0xFF00 DUP3 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x8 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD LT PUSH2 0xBD3 JUMPI JUMPDEST PUSH2 0x1A0 PUSH1 0x40 MLOAD SWAP5 DUP1 MLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x140 DUP3 ADD MLOAD AND PUSH2 0x160 DUP8 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x180 DUP8 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0xAA7 DUP2 PUSH2 0x2A88 JUMP JUMPDEST DUP3 DUP8 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x1C0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 MSTORE PUSH2 0x1E0 DUP5 ADD SWAP4 DUP1 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 DUP6 SWAP1 MSTORE PUSH1 0xD SLOAD PUSH4 0x6902622F PUSH1 0xE1 SHL DUP7 MSTORE PUSH1 0x20 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 PUSH2 0x1DF NOT DUP7 PUSH2 0xB09 DUP2 CALLER PUSH2 0x1E4 DUP3 ADD PUSH2 0x2C0B JUMP JUMPDEST SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0xB8C JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP10 DUP2 ADD SLOAD DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH32 0x5462399704F0E380DBCB381163C0A1404E8B14097242551B2494B16157FAA530 SWAP5 DUP10 SWAP3 PUSH2 0xB7C SWAP3 DUP11 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2C3D JUMP JUMPDEST ADD SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP5 DUP3 SWAP1 RETURNDATASIZE DUP5 GT PUSH2 0xBB5 JUMPI JUMPDEST DUP2 PUSH2 0xBA5 SWAP2 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI DUP3 SWAP2 DUP5 PUSH2 0xB19 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB9B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x0 SWAP5 PUSH1 0x5 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x5469746C6520736F6C646F757421 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973205469746C65206973206E6F7420617661696C61626C652E20436865 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x636B20746865205469746C652073746174757321 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xCA3 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0xCBD SWAP1 DUP4 AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xCF2 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0xD0C SWAP1 DUP4 AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0xD78 CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x60 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0xDCA CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x100 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 DUP5 ADD SLOAD SWAP3 PUSH1 0x6 DUP6 ADD SLOAD SWAP5 PUSH1 0x7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP6 PUSH1 0x40 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0xB SLOAD AND SWAP1 PUSH1 0x2 DUP4 ADD SLOAD SWAP5 PUSH1 0x3 DUP5 ADD SWAP2 DUP3 SLOAD SWAP7 PUSH1 0x40 MLOAD PUSH4 0x14D80399 PUSH1 0xE1 SHL DUP2 MSTORE DUP2 PUSH1 0x4 DUP3 ADD MSTORE DUP9 PUSH1 0x24 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x44 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10A9 JUMPI JUMPDEST POP TIMESTAMP GT ISZERO PUSH2 0x106E JUMPI DUP7 SWAP1 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 PUSH4 0x1ACB51D PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP12 PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x103D JUMPI JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xC9807D9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x44 DUP9 ADD DUP6 SWAP1 MSTORE DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 DUP7 AND GAS CALL SWAP7 DUP8 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x100E JUMPI JUMPDEST POP PUSH1 0xC DUP6 ADD SWAP7 PUSH1 0xFF NOT SWAP7 PUSH1 0x4 DUP9 DUP11 SLOAD AND OR DUP10 SSTORE DUP5 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x100 DUP4 ADD SWAP4 DUP4 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0xBBD JUMPI PUSH1 0x5 SWAP9 PUSH1 0x7 SWAP6 PUSH1 0x40 MSTORE DUP8 DUP6 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x60 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE PUSH1 0xC0 DUP9 ADD SWAP7 PUSH1 0x0 DUP9 MSTORE PUSH1 0xE0 DUP10 ADD SWAP12 PUSH1 0x0 DUP14 MSTORE PUSH1 0x0 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD DUP8 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE ADD SWAP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE SLOAD SWAP2 ADD SLOAD LT PUSH2 0x1004 JUMPI STOP JUMPDEST DUP2 SLOAD AND PUSH1 0x2 OR SWAP1 SSTORE STOP JUMPDEST SWAP1 SWAP7 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1036 JUMPI JUMPDEST PUSH2 0x1026 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP6 DUP8 PUSH2 0xF32 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x101C JUMP JUMPDEST SWAP7 SWAP4 POP DUP6 DUP8 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1067 JUMPI JUMPDEST PUSH2 0x1055 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI SWAP6 MLOAD SWAP3 SWAP6 DUP6 PUSH2 0xEEC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x49736E2774207468652074696D652079657421 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10CF JUMPI JUMPDEST PUSH2 0x10C0 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD DUP10 PUSH2 0xEB3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10B6 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x10E4 CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x10 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH2 0x1110 DUP2 ISZERO ISZERO PUSH2 0x3BFF JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 DUP5 AND CALLER SUB PUSH2 0x126E JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP11 SWAP1 MSTORE SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE PUSH2 0x11E9 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 PUSH1 0xB SWAP3 PUSH2 0x1160 DUP2 PUSH1 0x60 DUP5 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2B0A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1173 DUP4 PUSH2 0x2AD4 JUMP JUMPDEST DUP12 DUP4 MSTORE DUP7 DUP4 ADD DUP14 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE DUP7 PUSH1 0x0 MSTORE PUSH1 0x13 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 MLOAD DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ADD SLOAD PUSH1 0x40 MLOAD SWAP2 DUP4 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x11C1 DUP2 PUSH2 0x2AEF JUMP JUMPDEST DUP5 PUSH1 0xE SLOAD AND DUP6 PUSH1 0x7 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA30E377 PUSH1 0xE4 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x3CA3 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x123D JUMPI JUMPDEST PUSH32 0x28C64511BAD94645265B4AC8C503DD3B588CA95F2BFB17598135C3E6CDC4BE82 PUSH1 0x80 DUP7 DUP7 DUP7 DUP11 DUP8 SLOAD SWAP2 PUSH1 0x7 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 STOP JUMPDEST SWAP3 DUP1 SWAP3 SWAP2 SWAP5 SWAP4 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1267 JUMPI JUMPDEST PUSH2 0x1256 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI SWAP1 SWAP2 SWAP3 DUP6 PUSH2 0x11F8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520647261772077696E6E65722063616E2063726561746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x61207065726D697373696F6E21 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD SWAP2 PUSH1 0x8 DUP8 ADD SLOAD SWAP4 PUSH1 0x9 DUP9 ADD SLOAD SWAP6 PUSH1 0xA DUP10 ADD SLOAD SWAP8 PUSH1 0xFF PUSH1 0xC PUSH1 0xB DUP13 ADD SLOAD SWAP12 ADD SLOAD AND SWAP11 PUSH1 0x40 MLOAD SWAP13 DUP14 MSTORE PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x137F DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH2 0x180 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x3 NOT PUSH1 0x20 CALLDATASIZE DUP3 ADD DUP2 SGT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP5 GT PUSH2 0x1A2 JUMPI PUSH1 0xA0 SWAP1 DUP5 CALLDATASIZE SUB ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND CALLER SUB PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0xA0 DUP6 ADD DUP6 DUP2 LT DUP5 DUP3 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0x24 SWAP4 DUP5 DUP3 ADD CALLDATALOAD SWAP5 DUP5 DUP7 AND DUP7 SUB PUSH2 0x1A2 JUMPI DUP2 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x44 DUP4 ADD CALLDATALOAD DUP6 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x143B SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP7 ADD ADD PUSH2 0x2B46 JUMP JUMPDEST SWAP7 PUSH1 0x40 DUP2 ADD SWAP8 DUP9 MSTORE PUSH1 0x64 DUP5 ADD CALLDATALOAD DUP7 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x145F SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x2B46 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP8 DUP3 GT PUSH2 0x1A2 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x4 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0x148F DUP3 PUSH2 0x2B8D JUMP JUMPDEST SWAP2 PUSH2 0x149D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2B0A JUMP JUMPDEST DUP1 DUP4 MSTORE DUP5 DUP7 DUP5 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x1A2 JUMPI DUP6 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1790 JUMPI POP POP POP PUSH1 0x80 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x0 SSTORE DUP4 MLOAD DUP1 MLOAD DUP2 ADD SWAP1 DUP5 DUP2 DUP2 DUP5 ADD SWAP4 SUB SLT PUSH2 0x1A2 JUMPI DUP5 DUP2 ADD MLOAD SWAP1 DUP9 DUP3 GT PUSH2 0x1A2 JUMPI ADD SWAP1 DUP1 PUSH1 0x3F DUP4 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP5 DUP3 ADD MLOAD PUSH2 0x1507 SWAP3 PUSH1 0x40 ADD PUSH2 0x33C9 JUMP JUMPDEST SWAP2 DUP3 MLOAD SWAP1 DUP8 DUP3 GT PUSH2 0x177C JUMPI POP DUP1 PUSH1 0x1 SWAP4 PUSH2 0x1521 DUP6 SLOAD PUSH2 0x3FF1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x170C JUMPI JUMPDEST POP DUP6 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x168C JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1681 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP3 SSTORE JUMPDEST PUSH2 0x155C PUSH2 0x402B JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI DUP1 DUP5 ADD MLOAD DUP8 SWAP4 DUP8 PUSH1 0x60 PUSH2 0x157E PUSH1 0x40 DUP7 ADD PUSH2 0x40E4 JUMP JUMPDEST SWAP5 ADD MLOAD SWAP4 AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x13 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x0 MSTORE PUSH1 0x10 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 ADD SLOAD PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP1 PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0xA DUP4 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1677 JUMPI JUMPDEST POP PUSH2 0x1663 JUMPI JUMPDEST POP MLOAD SWAP6 MLOAD AND SWAP6 MLOAD DUP2 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI DUP2 PUSH2 0x15F6 SWAP2 ADD PUSH2 0x40E4 JUMP JUMPDEST SWAP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD DUP2 DUP4 DUP3 SUB SLT PUSH2 0x1A2 JUMPI DUP2 DUP4 ADD MLOAD SWAP6 DUP7 GT PUSH2 0x1A2 JUMPI PUSH2 0x1648 PUSH2 0x165E SWAP4 DUP4 PUSH32 0xB1E312A29937CC11967B0E4A346FEF1AE132424EBABA9DC6D90249DBA053E87C SWAP9 DUP2 PUSH1 0x40 SWAP6 ADD SWAP3 ADD ADD PUSH2 0x3400 JUMP JUMPDEST SWAP2 DUP2 MLOAD SWAP6 DUP7 SWAP6 AND DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2A2F JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0xC ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE DUP9 PUSH2 0x15D8 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO DUP11 PUSH2 0x15D2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH2 0x16F6 JUMPI POP POP DUP5 GT PUSH2 0x16DD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x1554 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x16D0 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP6 LT PUSH2 0x1772 JUMPI JUMPDEST DUP5 SWAP4 SWAP3 SWAP2 PUSH1 0x1F DUP9 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1763 JUMPI POP POP PUSH2 0x152A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x1755 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 DUP3 CALLDATASIZE SUB SLT PUSH2 0x1A2 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT DUP13 DUP3 GT OR PUSH2 0x17D6 JUMPI PUSH1 0x40 MSTORE DUP3 CALLDATALOAD SWAP1 DUP11 DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI DUP3 DUP10 SWAP3 PUSH1 0x40 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x14B7 JUMP JUMPDEST DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1824 PUSH2 0x2ABE JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1863 PUSH2 0x2A54 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x188A CALLDATASIZE PUSH2 0x2A6A JUMP JUMPDEST SWAP3 DUP1 ISZERO PUSH2 0x1BCE JUMPI DUP1 DUP4 GT ISZERO PUSH2 0x1B72 JUMPI DUP2 ISZERO PUSH2 0x1B1A JUMPI PUSH2 0x18F2 SWAP2 PUSH1 0x20 DUP5 PUSH2 0x18B1 PUSH1 0x4 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST DUP1 PUSH1 0x4 SSTORE DUP4 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA529759 PUSH1 0xE3 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1AE6 JUMPI JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SWAP5 DUP6 DUP2 MUL SWAP6 DUP2 DUP8 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD0 JUMPI PUSH2 0x192A DUP2 DUP7 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 PUSH2 0x1935 DUP2 DUP8 PUSH2 0x2BC6 JUMP JUMPDEST PUSH1 0x5 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD0 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1A0 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0xBBD JUMPI PUSH32 0x89C4C2329EFCD15ED5EC8CC7DD2E4C2103EDD8B1D7E9E17E76DA38D7B83ADE67 SWAP9 PUSH1 0x80 SWAP9 PUSH2 0x1A80 SWAP8 PUSH1 0x64 SWAP7 PUSH1 0x40 MSTORE DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP8 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP8 ADD MSTORE DUP9 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE DIV PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x4 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x4 SLOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0xC PUSH2 0x180 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH1 0xB DUP6 ADD SSTORE ADD MLOAD SWAP2 PUSH2 0x1A7A DUP4 PUSH2 0x2A88 JUMP JUMPDEST ADD PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x1AA5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x7 PUSH1 0x6 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x2BFE JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B12 JUMPI JUMPDEST DUP2 PUSH2 0x1B02 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP2 DUP6 PUSH2 0x1905 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073657420746865206E756D626572206F6620746F74616C20706172 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x7469636970616E747321 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742053656C6563742061206461746520746F2073746F7020746F207365 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6C6C20746865207469746C657321 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742053656C6563742061206461746520746F20737461727420746F2073 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x656C6C20746865207469746C657321 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x243 PUSH2 0x1C3C CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1C5E PUSH2 0x2AA8 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x10 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x5 DUP6 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP7 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x2052 JUMPI JUMPDEST ISZERO PUSH2 0x1FE7 JUMPI DUP4 AND SWAP5 PUSH2 0x1CB3 DUP7 ISZERO ISZERO PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0xC DUP8 ADD SWAP4 PUSH1 0xFF DUP6 SLOAD AND PUSH2 0x1CC6 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x1F89 JUMPI PUSH1 0x6 DUP10 ADD SLOAD SWAP1 PUSH1 0x2 DUP11 ADD SLOAD DUP3 EQ DUP1 ISZERO PUSH2 0x1F7C JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1F5F JUMPI JUMPDEST ISZERO PUSH2 0x1EF1 JUMPI POP POP PUSH1 0x0 DUP1 DUP3 PUSH1 0xB SLOAD AND PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x8C83DDD3 PUSH1 0xE0 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x1D32 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1ECB JUMPI JUMPDEST POP ISZERO ISZERO EQ PUSH2 0x3473 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP9 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1E9E JUMPI JUMPDEST POP PUSH1 0x1 DUP10 ADD SWAP8 DUP9 SLOAD DUP1 SWAP3 LT PUSH2 0x1A2 JUMPI DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP5 SWAP1 DUP3 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x1E30 JUMPI JUMPDEST POP SWAP3 PUSH32 0xA15C2435FADA31FA58C0EB6A516D9B0DF54ED70F48F3680BA2B527955C5797C1 SWAP3 PUSH2 0x1E2C SWAP8 PUSH1 0x80 SWAP4 PUSH1 0xA SWAP9 SWAP8 SWAP7 PUSH1 0x7 DUP13 ADD SLOAD SWAP2 SLOAD AND SWAP2 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 JUMPDEST PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP2 PUSH1 0x1 DUP4 SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST SWAP2 SWAP6 SWAP5 SWAP4 SWAP1 SWAP3 DUP1 DUP4 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1E97 JUMPI JUMPDEST PUSH2 0x1E4B DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x1E2C SWAP8 PUSH1 0xA SWAP8 PUSH32 0xA15C2435FADA31FA58C0EB6A516D9B0DF54ED70F48F3680BA2B527955C5797C1 SWAP6 PUSH2 0x1E87 PUSH1 0x80 SWAP7 PUSH2 0x341A JUMP JUMPDEST POP SWAP4 SWAP7 SWAP8 SWAP9 POP SWAP4 POP SWAP8 POP SWAP3 PUSH2 0x1DC0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1EC4 JUMPI JUMPDEST PUSH2 0x1EB5 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD DUP10 PUSH2 0x1D6E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x1EE8 SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x1EE0 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3427 JUMP JUMPDEST SWAP2 POP POP DUP12 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1E2C SWAP9 POP PUSH1 0xA SWAP8 SWAP7 SWAP6 POP PUSH1 0xA0 SWAP4 POP SWAP4 PUSH32 0x9878AA34B75479DA70E37BCE4455679DAE86D7580D3CF362E48F2ABB18BAACD SWAP5 PUSH1 0x8 DUP12 ADD SLOAD DUP2 PUSH1 0x9 DUP14 ADD SLOAD AND SWAP2 DUP11 DUP14 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F54 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE LOG1 PUSH2 0x1E10 JUMP JUMPDEST POP DUP3 PUSH1 0xA DUP12 ADD SLOAD AND ISZERO ISZERO DUP1 ISZERO PUSH2 0x1CE9 JUMPI POP PUSH1 0x8 DUP11 ADD SLOAD ISZERO ISZERO PUSH2 0x1CE9 JUMP JUMPDEST POP PUSH1 0x8 DUP11 ADD SLOAD ISZERO ISZERO PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207469746C6520646F6E2774206861766520746865207065726D6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x73696F6E20746F207769746864726177 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D73672E73656E646572206D7573742062652074686520636F6E747261637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F776E6572206F72207468652070726F746F636F6C206F776E65722100000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x1CA0 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x1A2 JUMPI PUSH2 0x2095 DUP2 PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xC DUP3 ADD SLOAD AND PUSH2 0x20B8 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x22A9 JUMPI JUMPDEST POP ISZERO PUSH2 0x1A2 JUMPI PUSH2 0x2104 PUSH1 0x9 PUSH2 0x20F0 PUSH2 0x20E5 PUSH1 0x8 DUP6 ADD SLOAD PUSH1 0xB DUP7 ADD SLOAD SWAP1 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD SLOAD SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST SWAP3 ADD SLOAD SWAP2 PUSH2 0x20FE DUP2 DUP5 PUSH2 0x2C30 JUMP JUMPDEST SWAP3 PUSH2 0x2C30 JUMP JUMPDEST DUP2 GT PUSH2 0x2256 JUMPI PUSH2 0x2115 DUP5 ISZERO ISZERO PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0xB SLOAD AND PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x8C83DDD3 PUSH1 0xE0 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x2156 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2238 JUMPI POP ISZERO ISZERO EQ PUSH2 0x3473 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2207 JUMPI JUMPDEST POP LT PUSH2 0x1A2 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 DUP2 SWAP1 DUP4 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x21DB JUMPI STOP JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2200 JUMPI JUMPDEST PUSH2 0x21EF DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x243 SWAP1 PUSH2 0x341A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21E5 JUMP JUMPDEST DUP1 SWAP3 POP DUP6 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x2231 JUMPI JUMPDEST PUSH2 0x2220 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI DUP2 SWAP1 MLOAD DUP7 PUSH2 0x2193 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x224D SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x1EE0 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST SWAP2 POP POP DUP8 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F616D6F756E742063616E27742065786365656420746865207469746C652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x616C756521 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x22B4 DUP2 PUSH2 0x2A88 JUMP JUMPDEST ISZERO DUP6 PUSH2 0x20C4 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x44 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x120 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x3 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x4 DUP5 ADD SLOAD AND PUSH1 0x5 DUP5 ADD SLOAD SWAP2 PUSH1 0x6 DUP6 ADD SLOAD SWAP4 PUSH1 0x8 PUSH1 0xFF PUSH1 0x7 DUP9 ADD SLOAD AND SWAP7 ADD SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x2379 CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1C0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x5 DUP7 ADD SLOAD AND PUSH1 0x6 DUP7 ADD SLOAD SWAP1 PUSH1 0x7 DUP8 ADD SLOAD SWAP3 PUSH1 0x8 DUP9 ADD SLOAD SWAP5 DUP7 PUSH1 0x9 DUP11 ADD SLOAD AND SWAP7 PUSH1 0xA DUP11 ADD SLOAD AND SWAP8 PUSH1 0xC PUSH1 0xB DUP12 ADD SLOAD SWAP11 ADD SLOAD SWAP11 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE DUP2 DUP2 AND PUSH2 0x243A DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x245C CALLDATASIZE PUSH2 0x2A6A JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 SWAP5 SWAP4 SWAP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x10 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x10 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 DUP3 ADD SWAP2 PUSH2 0x24A5 DUP4 SLOAD ISZERO ISZERO PUSH2 0x3BFF JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x24C1 SWAP1 DUP4 AND CALLER EQ PUSH2 0x3C4B JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SWAP3 PUSH2 0x24D4 CALLER DUP5 DUP7 SLOAD AND EQ PUSH2 0x3C4B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xB DUP4 ADD SLOAD SWAP1 DUP2 DUP4 LT PUSH2 0x26AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x6 PUSH2 0x24FB SWAP4 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD0 JUMPI DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x26A2 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x25D7 JUMPI SWAP2 PUSH32 0x50243003E9D7EF147493229D55468984FE3256E1B1CF63B435C46D06331682A4 SWAP9 SWAP4 SWAP2 PUSH1 0xC PUSH1 0xA0 SWAP10 SWAP9 SWAP8 SWAP7 SWAP5 ADD PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2566 DUP2 PUSH2 0x2AD4 JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x2 DUP7 DUP3 ADD SWAP3 DUP9 DUP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP11 DUP3 MSTORE DUP12 PUSH1 0x0 MSTORE PUSH1 0x14 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP9 PUSH1 0x0 MSTORE DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 MLOAD AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP14 SHL SWAP5 DUP6 DUP6 SLOAD AND OR DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ADDRESS SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x8B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C2074686520696E7374616C6C6D656E74732066726F6D2074686520636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C61746572616C206D7573742068617665206265656E2070616964206F722061 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x74206C65617374207468652076616C75652070616964206D7573742062652067 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x726561746572207468656E2074776F2074696D65732074686520656E73757265 PUSH1 0xA4 DUP3 ADD MSTORE PUSH11 0x15985B1D59539959591959 PUSH1 0xAA SHL PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 SWAP1 REVERT JUMPDEST LT ISZERO SWAP1 POP DUP11 DUP1 PUSH2 0x2519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6C61746572616C20746F74616C2076616C7565206D7573742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x652067726561746572207468616E2074756520656E737572616E636556616C75 PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x19539959591959 PUSH1 0xCA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2749 PUSH2 0x2A54 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 SLOAD PUSH2 0x2783 PUSH2 0x402B JUMP JUMPDEST SWAP1 PUSH2 0x27A0 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2A2F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x27B2 CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 SWAP2 DUP2 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x8 SWAP2 DUP3 DUP6 ADD SWAP6 PUSH1 0x3 DUP7 ADD SWAP3 JUMPDEST DUP8 SLOAD DUP2 LT ISZERO PUSH2 0x243 JUMPI DUP9 PUSH1 0x0 MSTORE PUSH1 0x10 SWAP1 DUP2 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE DUP4 MSTORE DUP8 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP7 SLOAD SWAP4 DUP13 DUP7 PUSH1 0x2 SWAP7 DUP8 PUSH2 0x280F PUSH1 0x6 DUP7 ADD SLOAD DUP4 PUSH2 0x2C30 JUMP JUMPDEST LT PUSH2 0x28E1 JUMPI POP POP PUSH2 0x285B SWAP6 PUSH1 0xC SWAP2 DUP3 DUP5 ADD SWAP4 PUSH1 0xFF NOT SWAP5 DUP6 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0xB DUP1 SWAP8 ADD PUSH2 0x283A DUP2 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST SWAP1 SSTORE DUP13 DUP2 ADD SLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x28BC JUMPI JUMPDEST POP PUSH2 0x2860 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x14 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP13 PUSH1 0x0 MSTORE DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x0 MSTORE DUP10 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 ADD SLOAD PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH2 0x28AF DUP2 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST SWAP1 SSTORE DUP11 DUP1 DUP1 DUP1 DUP1 DUP15 PUSH2 0x2850 JUMP JUMPDEST PUSH1 0xA ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 DUP2 PUSH2 0x28D9 JUMPI JUMPDEST POP CODESIZE PUSH2 0x284A JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x28D2 JUMP JUMPDEST SWAP3 SWAP5 POP SWAP3 POP POP PUSH1 0x44 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND SWAP6 DUP13 ADD SLOAD PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 DUP5 SWAP3 PUSH4 0x1933C39 PUSH1 0xE6 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x2974 JUMPI JUMPDEST PUSH2 0x285B SWAP4 POP TIMESTAMP GT PUSH2 0x2936 JUMPI JUMPDEST POP PUSH2 0x2BA4 JUMP JUMPDEST PUSH1 0xC ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x5238EEF763C91B9905201192C7B588678D655A1FEC573E5434470D30D3F975BE DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP11 PUSH2 0x2930 JUMP JUMPDEST POP DUP4 DUP4 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x299C JUMPI JUMPDEST PUSH2 0x298A DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x285B SWAP3 MLOAD PUSH2 0x2924 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2980 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x29E5 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x29DE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2A1F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A0F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2A48 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x2A92 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xBBD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2B5D DUP3 PUSH2 0x2B2B JUMP JUMPDEST SWAP3 PUSH2 0x2B6B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2B0A JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1A2 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xBBD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1AD0 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1AD0 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2BD0 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x2BF0 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1AD0 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2C2D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x2A2F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1AD0 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP6 PUSH1 0x1 PUSH1 0xFF PUSH1 0xC DUP5 ADD SLOAD AND PUSH2 0x2C75 DUP2 PUSH2 0x2A88 JUMP JUMPDEST SUB PUSH2 0x3384 JUMPI PUSH1 0x2 DUP8 ADD SWAP1 DUP4 DUP3 SLOAD LT PUSH2 0x332B JUMPI PUSH1 0xC DUP9 ADD SWAP4 PUSH1 0xFF DUP6 SLOAD AND PUSH2 0x2C9A DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3316 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3302 JUMPI JUMPDEST POP ISZERO PUSH2 0x32FE JUMPI DUP1 PUSH2 0x32B6 JUMPI PUSH1 0x1 SWAP2 JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND PUSH1 0x20 PUSH1 0x2 DUP8 ADD SLOAD PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1933C39 PUSH1 0xE6 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP9 PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3235 JUMPI DUP9 SWAP2 PUSH2 0x3284 JUMPI JUMPDEST POP DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0x3240 JUMPI PUSH2 0x2D11 SWAP1 TIMESTAMP PUSH2 0x2C30 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x6 SSTORE DUP2 PUSH2 0x3169 JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x5 DUP11 ADD SLOAD AND SWAP6 PUSH1 0x5 SLOAD SWAP7 PUSH1 0x6 SLOAD PUSH1 0x6 DUP13 ADD SWAP9 DUP10 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x120 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x120 DUP11 ADD GT OR PUSH2 0x3155 JUMPI PUSH2 0x120 DUP9 ADD PUSH1 0x40 MSTORE DUP14 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP9 ADD MSTORE CALLER PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP6 ADD MSTORE DUP1 PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP1 SWAP2 LT ISZERO DUP1 PUSH2 0x3149 JUMPI JUMPDEST PUSH2 0x2F87 JUMPI JUMPDEST POP SWAP1 POP PUSH2 0x100 PUSH1 0x40 MLOAD SWAP3 DUP1 MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x120 DUP3 MSTORE PUSH2 0x140 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 DUP3 SWAP1 MSTORE PUSH1 0xD SLOAD PUSH4 0x6902622F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP5 PUSH2 0x13F NOT DUP9 PUSH2 0x2E6A DUP2 CALLER PUSH2 0x144 DUP3 ADD PUSH2 0x2C0B JUMP JUMPDEST SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2F7B JUMPI POP PUSH2 0x2F44 JUMPI JUMPDEST POP POP SWAP1 PUSH32 0xD6985739EC9552D19C3572FC03D8CC0F929E20DE244EAA8D01C1786D61FD177A SWAP7 DUP5 SWAP4 SWAP3 PUSH2 0x2EEE SWAP6 SLOAD SWAP1 SLOAD EQ PUSH2 0x2F1B JUMPI JUMPDEST POP PUSH1 0x3 DUP4 SLOAD SWAP2 ADD SLOAD EQ DUP1 PUSH2 0x2F04 JUMPI JUMPDEST PUSH2 0x2EF3 JUMPI JUMPDEST POP PUSH2 0x2ED0 DUP5 DUP5 PUSH2 0x3B5D JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE CODESIZE PUSH2 0x2EC5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD AND PUSH2 0x2F15 DUP2 PUSH2 0x2A88 JUMP JUMPDEST EQ PUSH2 0x2EC0 JUMP JUMPDEST DUP3 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR DUP4 SSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x2F35 JUMPI JUMPDEST CODESIZE PUSH2 0x2EB1 JUMP JUMPDEST PUSH2 0x2F3F DUP7 DUP7 PUSH2 0x3CD3 JUMP JUMPDEST PUSH2 0x2F2F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 DUP3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP7 SWAP1 RETURNDATASIZE DUP5 GT PUSH2 0x2F73 JUMPI JUMPDEST DUP2 PUSH2 0x2F61 SWAP2 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI SWAP1 SWAP2 SWAP3 CODESIZE DUP1 PUSH2 0x2E7C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2F57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND SWAP1 PUSH1 0x2 DUP8 ADD SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3145 JUMPI SWAP1 PUSH1 0x44 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x560337D1 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x313A JUMPI PUSH2 0x310F JUMPI JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1ACB51D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3104 JUMPI DUP4 SWAP3 PUSH2 0x30D0 JUMPI JUMPDEST POP DUP9 DUP4 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP6 ADD MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP7 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 DUP2 ADD PUSH1 0xE0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x8 PUSH2 0x100 DUP5 ADD MLOAD SWAP2 ADD SSTORE DUP1 CODESIZE PUSH2 0x2DA7 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x30FC JUMPI JUMPDEST DUP2 PUSH2 0x30EC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x301C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3126 JUMPI PUSH1 0x40 MSTORE CODESIZE PUSH2 0x2FCE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH1 0x7 DUP12 ADD SLOAD ISZERO PUSH2 0x2DA2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x2 DUP8 ADD SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2B187755 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x3235 JUMPI DUP9 SWAP1 PUSH2 0x31FB JUMPI JUMPDEST PUSH2 0x31F4 SWAP3 POP DUP1 PUSH1 0x5 SSTORE PUSH32 0x57D559AAA778AE17E20A31E208D5763CB05667142A48B6098AF5FB106B0CE8D9 PUSH1 0x20 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE LOG1 DUP11 DUP11 PUSH2 0x34B4 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2D1C JUMP JUMPDEST POP SWAP1 PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x322D JUMPI JUMPDEST DUP2 PUSH2 0x3216 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI SWAP1 PUSH2 0x31F4 SWAP2 MLOAD PUSH2 0x31BA JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x327F SWAP1 PUSH1 0x3 DUP12 ADD SLOAD DUP1 PUSH1 0x5 SSTORE PUSH32 0x57D559AAA778AE17E20A31E208D5763CB05667142A48B6098AF5FB106B0CE8D9 PUSH1 0x20 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE LOG1 DUP11 DUP11 PUSH2 0x34B4 JUMP JUMPDEST PUSH2 0x2D1F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x32AE JUMPI JUMPDEST DUP2 PUSH2 0x329F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI MLOAD CODESIZE PUSH2 0x2CFC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3292 JUMP JUMPDEST PUSH1 0x6 DUP10 ADD SLOAD DUP2 GT ISZERO PUSH2 0x32C9 JUMPI DUP1 SWAP2 PUSH2 0x2CBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x416C7265616479207061696421 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x3 SWAP2 POP PUSH2 0x330F DUP2 PUSH2 0x2A88 JUMP JUMPDEST EQ CODESIZE PUSH2 0x2CAD JUMP JUMPDEST SWAP1 POP PUSH2 0x3321 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520616E7920696E7374616C6C6D656E74206C PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65667420746F2070617921 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B20746865207469746C652073746174757321000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x33D6 DUP2 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 PUSH2 0x33E4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2B0A JUMP JUMPDEST DUP3 SWAP5 DUP3 DUP5 MSTORE DUP3 DUP3 ADD GT PUSH2 0x1A2 JUMPI PUSH1 0x20 PUSH2 0x33FE SWAP4 ADD SWAP1 PUSH2 0x2A0C JUMP JUMPDEST JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP2 MLOAD PUSH2 0x2C2D SWAP3 PUSH1 0x20 ADD PUSH2 0x33C9 JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x1A2 JUMPI DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A2 JUMPI PUSH2 0x344E SWAP2 DUP4 ADD PUSH2 0x3400 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A2 JUMPI PUSH1 0x40 PUSH2 0x2C2D SWAP2 SWAP4 ADD PUSH2 0x341A JUMP JUMPDEST ISZERO PUSH2 0x347A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6B656E206E6F7420616C6C6F77656421 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP2 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x10 DUP4 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 DUP5 MSTORE PUSH1 0xF DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP7 SLOAD PUSH1 0x8 DUP4 ADD SLOAD LT PUSH2 0x3B07 JUMPI PUSH1 0xFF PUSH1 0xC DUP9 ADD SLOAD AND PUSH2 0x34F8 DUP2 PUSH2 0x2A88 JUMP JUMPDEST DUP1 ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x3AF2 JUMPI JUMPDEST POP ISZERO PUSH2 0x3A73 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0x3A37 JUMPI DUP6 DUP3 PUSH1 0xB SLOAD AND SWAP2 DUP6 MLOAD PUSH4 0x8C83DDD3 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 DUP2 PUSH1 0x4 SWAP6 DUP5 DUP8 DUP4 ADD MSTORE DUP2 PUSH1 0x24 SWAP7 DUP8 SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x39DE JUMPI PUSH2 0x355C SWAP2 PUSH1 0x1 SWAP2 DUP12 SWAP2 PUSH2 0x3A1A JUMPI POP ISZERO ISZERO EQ PUSH2 0x3473 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x3 DUP11 ADD SLOAD DUP10 LT PUSH2 0x39E8 JUMPI DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD MSTORE DUP8 DUP2 DUP5 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x39DE JUMPI SWAP1 DUP11 SWAP2 DUP11 SWAP2 PUSH2 0x39A9 JUMPI JUMPDEST POP LT PUSH2 0x3970 JUMPI DUP7 PUSH1 0x44 SWAP2 DUP8 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP3 MSTORE CALLER DUP9 DUP4 ADD MSTORE ADDRESS DUP8 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3747 JUMPI SWAP1 DUP10 SWAP2 DUP10 SWAP2 PUSH2 0x393F JUMPI JUMPDEST POP LT PUSH2 0x38E0 JUMPI POP DUP8 DUP2 ADD SLOAD PUSH2 0x3751 JUMPI PUSH1 0x9 DUP4 ADD SWAP7 DUP8 SLOAD SWAP8 PUSH1 0x6 DUP6 ADD SLOAD SWAP9 DUP10 PUSH2 0x3600 SWAP2 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x9 SLOAD DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP6 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP12 SWAP1 SWAP12 MSTORE SWAP10 SWAP1 SWAP2 DUP9 SWAP2 DUP4 SWAP2 DUP8 AND SWAP1 DUP3 SWAP1 DUP13 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3747 JUMPI SWAP2 DUP9 SWAP2 DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x3704 JUMPI JUMPDEST POP PUSH2 0x366B SWAP1 PUSH1 0x6 DUP6 PUSH1 0x9 SLOAD AND SWAP6 PUSH1 0xB SLOAD AND SWAP7 ADD SLOAD SWAP1 PUSH2 0x2C30 JUMP JUMPDEST DUP7 MLOAD SWAP10 DUP11 MSTORE CALLER SWAP3 DUP11 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP8 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x60 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x36FB JUMPI POP PUSH2 0x36BF JUMPI JUMPDEST POP POP POP PUSH1 0x6 SWAP1 JUMPDEST ADD PUSH2 0x36BB DUP2 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x36F4 JUMPI JUMPDEST PUSH2 0x36D3 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x36F1 JUMPI POP SWAP1 PUSH2 0x36E8 PUSH1 0x6 SWAP3 PUSH2 0x341A JUMP JUMPDEST POP SWAP1 CODESIZE DUP1 PUSH2 0x36A9 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x36C9 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 SWAP2 SWAP4 SWAP5 SWAP6 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x3740 JUMPI JUMPDEST PUSH2 0x371F DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI PUSH2 0x366B DUP8 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x3739 DUP11 SWAP4 PUSH2 0x341A JUMP JUMPDEST POP SWAP1 PUSH2 0x3651 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3715 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x3774 PUSH1 0x9 DUP5 ADD SWAP4 PUSH1 0x6 DUP6 SLOAD SWAP2 ADD SWAP5 PUSH2 0x376C DUP7 SLOAD DUP1 SWAP4 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 SSTORE DUP9 PUSH2 0x2C30 JUMP JUMPDEST ISZERO PUSH2 0x38A7 JUMPI PUSH1 0x9 SLOAD DUP4 SLOAD DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP6 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP10 SWAP3 SWAP1 SWAP2 DUP9 SWAP2 DUP4 SWAP2 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP13 SWAP1 DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x3747 JUMPI SWAP2 DUP9 SWAP2 DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x3864 JUMPI JUMPDEST POP PUSH2 0x37E1 SWAP1 DUP5 PUSH1 0x9 SLOAD AND SWAP5 PUSH1 0xB SLOAD AND SWAP6 SLOAD SWAP1 PUSH2 0x2C30 JUMP JUMPDEST DUP7 MLOAD SWAP10 DUP11 MSTORE CALLER SWAP3 DUP11 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP8 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x60 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x36FB JUMPI POP PUSH2 0x382B JUMPI JUMPDEST POP POP POP PUSH1 0x6 SWAP1 PUSH2 0x36B0 JUMP JUMPDEST DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x385D JUMPI JUMPDEST PUSH2 0x383F DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x36F1 JUMPI POP SWAP1 PUSH2 0x3854 PUSH1 0x6 SWAP3 PUSH2 0x341A JUMP JUMPDEST POP SWAP1 CODESIZE DUP1 PUSH2 0x3820 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3835 JUMP JUMPDEST DUP1 SWAP3 POP DUP7 SWAP2 SWAP4 SWAP5 SWAP6 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x38A0 JUMPI JUMPDEST PUSH2 0x387F DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI PUSH2 0x37E1 DUP8 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x3899 DUP11 SWAP4 PUSH2 0x341A JUMP JUMPDEST POP SWAP1 PUSH2 0x37CA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3875 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE ADDRESS PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP6 SWAP4 POP DUP8 SWAP3 AND SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD PUSH2 0x380F JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206D75737420617070726F76652074686520636F6E747261637420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x207472616E736665722074686520746F6B656E73 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x3969 JUMPI JUMPDEST PUSH2 0x3958 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI DUP9 SWAP1 MLOAD CODESIZE PUSH2 0x35D9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x394E JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x14 DUP2 DUP5 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x39D7 JUMPI JUMPDEST PUSH2 0x39C2 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x39D3 JUMPI DUP10 SWAP1 MLOAD CODESIZE PUSH2 0x35A2 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x39B8 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xD DUP2 DUP5 ADD MSTORE PUSH13 0x57726F6E672076616C75652121 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3A2E SWAP2 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x1EE0 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST SWAP2 POP POP CODESIZE PUSH2 0x1D29 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x456E746572206120746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x4C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7572207469746C6520616C72656164792068617665206265656E2066696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C697A6564206F722063616E63656C65642E20506C6561736520636865636B PUSH1 0x64 DUP3 ADD MSTORE PUSH12 0x103A34329039BA30BA3AB997 PUSH1 0xA1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST PUSH1 0x4 SWAP2 POP PUSH2 0x3AFF DUP2 PUSH2 0x2A88 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x3503 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74657220612076616C696420636F6E747261637420496420666F72207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6973205469746C6521 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH32 0x612A8A5548125C3DB9F13B41025DF2C888D69F8A0351889CD94BD21A45DD34B SWAP2 PUSH2 0x2EEE PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH2 0x3BBA PUSH1 0x40 DUP3 KECCAK256 SWAP3 PUSH1 0x6 DUP1 DUP6 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD DUP1 DUP3 LT PUSH2 0x3BEC JUMPI POP POP DUP3 DUP3 ADD SSTORE JUMPDEST ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x3BF6 SWAP3 POP PUSH2 0x2C30 JUMP JUMPDEST DUP3 DUP3 ADD SSTORE PUSH2 0x3BCD JUMP JUMPDEST ISZERO PUSH2 0x3C06 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E2774206265656E2073656C656374656420796574210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C52 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E20616464206120636F6C61746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616C21 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xCCF0A31A221F3C9B DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2C2D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x2A2F JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x3F0F JUMPI PUSH1 0xC DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xFF DUP4 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO SUB PUSH2 0x3EAD JUMPI DUP1 DUP1 PUSH2 0x3E97 JUMPI JUMPDEST ISZERO PUSH2 0x3DEF JUMPI POP POP SWAP1 PUSH1 0xB DUP5 SWAP6 SWAP7 PUSH2 0x3DAC SWAP6 SWAP4 PUSH2 0x3D5B PUSH1 0x7 DUP6 ADD SLOAD SWAP2 PUSH2 0x1152 DUP9 MLOAD SWAP4 DUP5 SWAP3 DUP10 DUP5 ADD SWAP7 DUP8 SWAP2 PUSH1 0x60 SWAP4 SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 ADD SLOAD DUP4 MLOAD SWAP2 DUP4 DUP4 ADD MSTORE DUP4 DUP3 ADD MSTORE DUP6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x3D7F DUP2 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0xE SLOAD AND SWAP1 PUSH1 0x7 SLOAD AND DUP8 DUP6 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA30E377 PUSH1 0xE4 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x3CA3 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3DE6 JUMPI POP PUSH2 0x3DC1 JUMPI POP POP POP JUMP JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3DDF JUMPI JUMPDEST PUSH2 0x3DD4 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x36F1 JUMPI POP JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3DCA JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP7 SWAP5 SWAP4 SWAP3 DUP2 PUSH2 0x3E89 JUMPI JUMPDEST POP PUSH2 0x3E08 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SWAP4 DUP6 MSTORE PUSH1 0x14 DUP4 MSTORE DUP2 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP4 DUP2 MLOAD SWAP5 PUSH2 0x3E29 DUP7 PUSH2 0x2AD4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP3 SLOAD AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 DUP4 DUP4 DUP11 ADD MSTORE ADD SLOAD SWAP2 DUP5 DUP9 ADD SWAP3 DUP4 MSTORE DUP4 MSTORE PUSH1 0x10 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 MLOAD DUP4 MSTORE MSTORE KECCAK256 SWAP3 MLOAD AND SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3E00 JUMP JUMPDEST PUSH1 0x8 SWAP2 POP ADD SLOAD ISZERO ISZERO CODESIZE PUSH2 0x3DFA JUMP JUMPDEST POP PUSH1 0xA DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x3D1E JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E27742072657472696576652074686520636F6C61746572616C PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x206265666F72652074686520776974686472617721 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C2074686520696E7374616C6C6D656E7473206D75737420686176652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x65656E207061696421 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3F6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151BDAD95B881B9BDD08185B1B1BDDD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3FAC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616C6C6572206D75737420626520746865206F776E657221000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x4021 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x400B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4000 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x1 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x4041 DUP5 PUSH2 0x3FF1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x40C2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4065 JUMPI JUMPDEST POP PUSH2 0x33FE SWAP3 POP SUB DUP4 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP5 DUP4 LT PUSH2 0x40A7 JUMPI POP PUSH2 0x33FE SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x4058 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x408E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x33FE SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x4058 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SLT AND PUSH1 0x5B EXTCODEHASH 0x1E 0xB3 0xF8 PUSH28 0x92CB8DA3061CECBB4E6EFEAFD666834FB5D18587FA4E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"793:29756:26:-:0;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;528:20:0;524:58;;588:17;;-1:-1:-1;1066:1:26;793:29756;;;;;;;5075:42;793:29756;5062:56;793:29756;;;5062:56;793:29756;5181:42;793:29756;5170:54;793:29756;;;5170:54;793:29756;5289:42;793:29756;5274:58;793:29756;;;5274:58;793:29756;5392:42;793:29756;5375:61;793:29756;;;5375:61;793:29756;6111:10;793:29756;6103:18;793:29756;;;6103:18;793:29756;;;;;;;;;588:17:0;793:29756:26;;;;;;;;;;;524:58:0;793:29756:26;;-1:-1:-1;;;557:25:0;;-1:-1:-1;557:25:0;;;793:29756:26;;;557:25:0;793:29756:26;-1:-1:-1;793:29756:26;;;;;;-1:-1:-1;793:29756:26;;;;;-1:-1:-1;793:29756:26"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10836,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_payable_fromMemory":{"entryPoint":16612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string_fromMemory":{"entryPoint":13257,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":13338,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":11078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_contract_IERC20":{"entryPoint":10920,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":13312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_contract_IERC20t_bool_fromMemory":{"entryPoint":13351,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint256t_uint256":{"entryPoint":10742,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint256t_uint256t_uint256t_uint256":{"entryPoint":10858,"id":null,"parameterSlots":1,"returnSlots":4},"abi_decode_uint64":{"entryPoint":10942,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_string":{"entryPoint":11275,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes":{"entryPoint":10799,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_rational_by_address_bytes":{"entryPoint":15523,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_array_struct_EVMTokenAmount_dyn":{"entryPoint":11149,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":11051,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":11262,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":11206,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":11187,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":11312,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_bytes":{"entryPoint":16427,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":10764,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":16369,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":11018,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_48381":{"entryPoint":10964,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_59701":{"entryPoint":10991,"id":null,"parameterSlots":1,"returnSlots":0},"fun_payInstallment":{"entryPoint":11325,"id":4791,"parameterSlots":4,"returnSlots":0},"fun_receiveInstallment":{"entryPoint":13492,"id":5020,"parameterSlots":4,"returnSlots":0},"fun_refundColateral":{"entryPoint":15571,"id":5660,"parameterSlots":2,"returnSlots":0},"fun_updateValueOfEnsurance":{"entryPoint":15197,"id":5082,"parameterSlots":2,"returnSlots":0},"increment_uint256":{"entryPoint":11172,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":13427,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3bfa":{"entryPoint":16293,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6db8":{"entryPoint":15435,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7b6d":{"entryPoint":15359,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b318":{"entryPoint":16229,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_enum_TitleStatus_to_enum_TitleStatus":{"entryPoint":11238,"id":null,"parameterSlots":2,"returnSlots":0},"validator_assert_enum_MyTitleWithdraw":{"entryPoint":10888,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"14":[{"length":32,"start":3387},{"length":32,"start":5060}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x29A3 JUMPI POP DUP1 PUSH4 0x23478654 EQ PUSH2 0x27A4 JUMPI DUP1 PUSH4 0x263596A5 EQ PUSH2 0x2767 JUMPI DUP1 PUSH4 0x272EFC69 EQ PUSH2 0x2728 JUMPI DUP1 PUSH4 0x2D7C0B7F EQ PUSH2 0x244E JUMPI DUP1 PUSH4 0x31AE0DF6 EQ PUSH2 0x236B JUMPI DUP1 PUSH4 0x4991126D EQ PUSH2 0x22BB JUMPI DUP1 PUSH4 0x4C67469C EQ PUSH2 0x205F JUMPI DUP1 PUSH4 0x4FACBACB EQ PUSH2 0x1C42 JUMPI DUP1 PUSH4 0x58A15A2E EQ PUSH2 0x1C2B JUMPI DUP1 PUSH4 0x643233E5 EQ PUSH2 0x187C JUMPI DUP1 PUSH4 0x69D83ED1 EQ PUSH2 0x1842 JUMPI DUP1 PUSH4 0x7DC91A02 EQ PUSH2 0x1803 JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x1387 JUMPI DUP1 PUSH4 0x8A12312C EQ PUSH2 0x12C9 JUMPI DUP1 PUSH4 0x8F9FCE70 EQ PUSH2 0x10D6 JUMPI DUP1 PUSH4 0x9BEAF731 EQ PUSH2 0xE45 JUMPI DUP1 PUSH4 0xAB922631 EQ PUSH2 0xDBC JUMPI DUP1 PUSH4 0xAD3B6DA3 EQ PUSH2 0xD6A JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0xD25 JUMPI DUP1 PUSH4 0xB2F87643 EQ PUSH2 0xCD9 JUMPI DUP1 PUSH4 0xB697F531 EQ PUSH2 0xC8A JUMPI DUP1 PUSH4 0xBA658A44 EQ PUSH2 0x7BB JUMPI DUP1 PUSH4 0xC39622F8 EQ PUSH2 0x785 JUMPI DUP1 PUSH4 0xC5EC1C7A EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xD0ADE9D5 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xD762A160 EQ PUSH2 0x1A7 JUMPI PUSH4 0xFF46ED53 EQ PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x174 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x189 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC DUP2 ADD SWAP3 DUP4 SLOAD SWAP2 PUSH1 0xFF DUP4 AND SWAP2 PUSH2 0x1E0 DUP4 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x4 DUP4 EQ DUP1 DUP1 ISZERO PUSH2 0x45D JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x44A JUMPI JUMPDEST ISZERO PUSH2 0x405 JUMPI DUP3 SLOAD TIMESTAMP GT SWAP1 DUP2 PUSH2 0x3F4 JUMPI JUMPDEST POP ISZERO PUSH2 0x245 JUMPI POP POP POP POP PUSH32 0xB34436423C205503BB9DE249902D7E3E7FC76197D9CEC741C46E9E0DD6489F44 SWAP2 PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x3 DUP2 MSTORE LOG1 JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP3 SWAP6 SWAP5 SWAP6 ADD SLOAD TIMESTAMP GT DUP1 PUSH2 0x3E1 JUMPI JUMPDEST ISZERO PUSH2 0x26C JUMPI POP POP POP POP POP PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SWAP8 SWAP6 SWAP7 SWAP8 SHL SUB PUSH1 0xB SLOAD AND SWAP3 DUP6 PUSH1 0x3 DUP5 ADD SLOAD SWAP3 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 PUSH4 0x1ACB51D PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP7 PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x3A6 JUMPI JUMPDEST POP PUSH2 0x2BC DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x398 JUMPI JUMPDEST DUP4 ISZERO PUSH2 0x353 JUMPI JUMPDEST POP POP POP PUSH1 0x0 EQ PUSH2 0x314 JUMPI POP POP PUSH32 0xB34436423C205503BB9DE249902D7E3E7FC76197D9CEC741C46E9E0DD6489F44 SWAP3 POP PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x8 ADD SLOAD SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x322 JUMPI STOP JUMPDEST PUSH32 0x2E24ED849DF3BE5EDECCA4A9280B775D8D82B800D0EBEFAA298F3D61A0998A70 SWAP4 PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH2 0x35F SWAP2 SWAP3 SWAP4 POP PUSH2 0x2A88 JUMP JUMPDEST DUP2 PUSH2 0x37C JUMPI JUMPDEST POP DUP1 PUSH2 0x374 JUMPI JUMPDEST DUP7 DUP1 DUP1 PUSH2 0x2D0 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x36C JUMP JUMPDEST PUSH2 0x38C SWAP2 POP PUSH1 0xB DUP4 ADD SLOAD SWAP1 PUSH2 0x2BFE JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD LT DUP7 PUSH2 0x365 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD SLOAD DUP3 GT SWAP4 POP PUSH2 0x2C9 JUMP JUMPDEST SWAP1 SWAP4 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3CE JUMPI JUMPDEST PUSH2 0x3BE DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP3 DUP8 PUSH2 0x2B2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x3EB DUP4 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x3 DUP4 EQ PUSH2 0x255 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FF DUP5 PUSH2 0x2A88 JUMP JUMPDEST DUP8 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207469746C6520616C726561647920656E6465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x454 DUP5 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP5 EQ PUSH2 0x1F3 JUMP JUMPDEST POP PUSH2 0x467 DUP5 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x3 DUP5 EQ PUSH2 0x1EC JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0xF DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x11 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP5 ADD SWAP1 DUP2 SLOAD PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0xC SLOAD AND SWAP6 PUSH1 0x0 PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP11 DUP2 SWAP4 PUSH4 0xD8A4676F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 SWAP9 PUSH1 0x0 SWAP6 PUSH2 0x68C JUMPI JUMPDEST POP ISZERO PUSH2 0x647 JUMPI PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD SWAP9 PUSH1 0x1 SWAP10 DUP11 DUP4 MSTORE PUSH1 0x60 DUP10 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE DUP9 PUSH1 0x80 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x634 JUMPI POP PUSH32 0x495707AADFDB79A8158BC4C70170204A5BD6402CE8D4F16AF9B93D19F5B864B7 PUSH1 0xA0 DUP13 DUP13 DUP16 DUP13 DUP15 SWAP2 DUP14 DUP14 DUP14 PUSH32 0x6EED17F1838C49C44631282C96EF8D77984FDA771E865BC74772B03C5DA4BDE7 DUP15 DUP1 DUP16 DUP9 PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP8 PUSH1 0x0 MSTORE PUSH1 0x12 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0xC DUP2 DUP9 ADD SWAP4 DUP5 SLOAD SWAP7 DUP8 PUSH1 0x0 MSTORE DUP11 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP9 PUSH1 0x0 MSTORE DUP11 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 DUP9 PUSH1 0x5 DUP12 ADD SSTORE DUP8 SLOAD PUSH1 0x6 DUP12 ADD SSTORE PUSH1 0x4 DUP9 ADD SWAP10 PUSH1 0x7 DUP9 DUP13 SLOAD AND SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP16 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP12 PUSH1 0x0 MSTORE PUSH1 0x10 DUP12 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP9 SLOAD PUSH1 0x0 MSTORE DUP12 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH2 0x5FB DUP8 SLOAD DUP13 PUSH2 0x3B5D JUMP JUMPDEST ADD SWAP1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x610 DUP2 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 SLOAD SWAP4 SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 STOP JUMPDEST DUP3 MLOAD DUP5 MSTORE SWAP3 DUP11 ADD SWAP3 SWAP2 DUP11 ADD SWAP2 DUP13 ADD PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5652462072657175657374206E6F742066756C66696C6C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP9 POP POP SWAP3 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP10 RETURNDATACOPY PUSH2 0x6A1 DUP2 DUP10 PUSH2 0x2B0A JUMP JUMPDEST DUP8 ADD SWAP3 PUSH1 0x60 DUP9 DUP6 SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x6B7 DUP9 PUSH2 0x341A JUMP JUMPDEST SWAP8 DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI DUP2 ADD SWAP5 DUP1 PUSH1 0x1F DUP8 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP6 MLOAD PUSH2 0x6E3 DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP7 PUSH2 0x6F1 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x2B0A JUMP JUMPDEST DUP2 DUP9 MSTORE DUP10 DUP1 DUP10 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A2 JUMPI DUP10 DUP1 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x723 JUMPI POP POP POP POP PUSH1 0x40 ADD MLOAD SWAP4 SWAP8 DUP10 PUSH2 0x4EF JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP11 SWAP2 ADD PUSH2 0x70C JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x754 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0x769 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A2 JUMPI PUSH2 0x243 SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x2C3D JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x7D4 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x1A2 JUMPI PUSH2 0x7EA PUSH2 0x2AA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x3 PUSH1 0xFF PUSH1 0xC DUP6 ADD SLOAD AND PUSH2 0x815 DUP2 PUSH2 0x2A88 JUMP JUMPDEST SUB PUSH2 0xC28 JUMPI PUSH1 0x8 DUP4 ADD SLOAD SWAP4 PUSH1 0x5 DUP5 ADD SLOAD SWAP5 DUP6 DUP2 GT PUSH2 0xBF2 JUMPI PUSH2 0x838 PUSH1 0x1 SWAP2 PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x8 DUP8 ADD SSTORE EQ PUSH1 0x0 EQ PUSH2 0xBE7 JUMPI PUSH1 0x7 DUP5 ADD SLOAD SWAP5 PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x864 PUSH1 0x4 DUP8 ADD SLOAD SWAP8 PUSH1 0x6 DUP9 ADD SLOAD PUSH2 0x2BFE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x1C0 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1C0 DUP12 ADD GT OR PUSH2 0xBBD JUMPI PUSH2 0x1C0 DUP10 ADD PUSH1 0x40 MSTORE DUP5 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE CALLER PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP7 ADD MSTORE ADDRESS PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP7 ADD MSTORE PUSH1 0x2 PUSH2 0x180 DUP7 ADD MSTORE PUSH1 0x0 PUSH2 0x1A0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xC PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 MLOAD DUP2 SSTORE PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP8 ADD MLOAD AND PUSH1 0x5 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP8 ADD MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x120 DUP10 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xA DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x140 DUP10 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x160 DUP7 ADD MLOAD PUSH1 0xB DUP3 ADD SSTORE ADD PUSH2 0x9D0 PUSH2 0x180 DUP7 ADD MLOAD PUSH2 0x9CA DUP2 PUSH2 0x2A88 JUMP JUMPDEST DUP3 PUSH2 0x2BE6 JUMP JUMPDEST PUSH2 0x1A0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0xFF00 DUP3 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x8 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD LT PUSH2 0xBD3 JUMPI JUMPDEST PUSH2 0x1A0 PUSH1 0x40 MLOAD SWAP5 DUP1 MLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP8 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x140 DUP3 ADD MLOAD AND PUSH2 0x160 DUP8 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x180 DUP8 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0xAA7 DUP2 PUSH2 0x2A88 JUMP JUMPDEST DUP3 DUP8 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x1C0 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 MSTORE PUSH2 0x1E0 DUP5 ADD SWAP4 DUP1 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 DUP6 SWAP1 MSTORE PUSH1 0xD SLOAD PUSH4 0x6902622F PUSH1 0xE1 SHL DUP7 MSTORE PUSH1 0x20 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 PUSH2 0x1DF NOT DUP7 PUSH2 0xB09 DUP2 CALLER PUSH2 0x1E4 DUP3 ADD PUSH2 0x2C0B JUMP JUMPDEST SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0xB8C JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP10 DUP2 ADD SLOAD DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH32 0x5462399704F0E380DBCB381163C0A1404E8B14097242551B2494B16157FAA530 SWAP5 DUP10 SWAP3 PUSH2 0xB7C SWAP3 DUP11 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x2C3D JUMP JUMPDEST ADD SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP5 DUP3 SWAP1 RETURNDATASIZE DUP5 GT PUSH2 0xBB5 JUMPI JUMPDEST DUP2 PUSH2 0xBA5 SWAP2 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI DUP3 SWAP2 DUP5 PUSH2 0xB19 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xB9B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x0 SWAP5 PUSH1 0x5 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x5469746C6520736F6C646F757421 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973205469746C65206973206E6F7420617661696C61626C652E20436865 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x636B20746865205469746C652073746174757321 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xCA3 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0xCBD SWAP1 DUP4 AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xCF2 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0xD0C SWAP1 DUP4 AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0xD78 CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x60 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0xDCA CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x100 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 DUP5 ADD SLOAD SWAP3 PUSH1 0x6 DUP6 ADD SLOAD SWAP5 PUSH1 0x7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP6 PUSH1 0x40 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0xB SLOAD AND SWAP1 PUSH1 0x2 DUP4 ADD SLOAD SWAP5 PUSH1 0x3 DUP5 ADD SWAP2 DUP3 SLOAD SWAP7 PUSH1 0x40 MLOAD PUSH4 0x14D80399 PUSH1 0xE1 SHL DUP2 MSTORE DUP2 PUSH1 0x4 DUP3 ADD MSTORE DUP9 PUSH1 0x24 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x44 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10A9 JUMPI JUMPDEST POP TIMESTAMP GT ISZERO PUSH2 0x106E JUMPI DUP7 SWAP1 PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP4 PUSH4 0x1ACB51D PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP12 PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP5 PUSH2 0x103D JUMPI JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xC9807D9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x44 DUP9 ADD DUP6 SWAP1 MSTORE DUP7 SWAP1 DUP9 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 DUP7 AND GAS CALL SWAP7 DUP8 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x100E JUMPI JUMPDEST POP PUSH1 0xC DUP6 ADD SWAP7 PUSH1 0xFF NOT SWAP7 PUSH1 0x4 DUP9 DUP11 SLOAD AND OR DUP10 SSTORE DUP5 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x100 DUP4 ADD SWAP4 DUP4 DUP6 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT OR PUSH2 0xBBD JUMPI PUSH1 0x5 SWAP9 PUSH1 0x7 SWAP6 PUSH1 0x40 MSTORE DUP8 DUP6 MSTORE DUP4 DUP6 ADD DUP4 DUP2 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x60 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP5 PUSH1 0x0 DUP7 MSTORE PUSH1 0xC0 DUP9 ADD SWAP7 PUSH1 0x0 DUP9 MSTORE PUSH1 0xE0 DUP10 ADD SWAP12 PUSH1 0x0 DUP14 MSTORE PUSH1 0x0 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE MLOAD PUSH1 0x2 DUP7 ADD SSTORE MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD DUP8 DUP4 ADD SSTORE MLOAD PUSH1 0x6 DUP3 ADD SSTORE ADD SWAP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE SLOAD SWAP2 ADD SLOAD LT PUSH2 0x1004 JUMPI STOP JUMPDEST DUP2 SLOAD AND PUSH1 0x2 OR SWAP1 SSTORE STOP JUMPDEST SWAP1 SWAP7 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1036 JUMPI JUMPDEST PUSH2 0x1026 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP6 DUP8 PUSH2 0xF32 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x101C JUMP JUMPDEST SWAP7 SWAP4 POP DUP6 DUP8 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1067 JUMPI JUMPDEST PUSH2 0x1055 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI SWAP6 MLOAD SWAP3 SWAP6 DUP6 PUSH2 0xEEC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x104B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x49736E2774207468652074696D652079657421 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10CF JUMPI JUMPDEST PUSH2 0x10C0 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD DUP10 PUSH2 0xEB3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10B6 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x10E4 CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x10 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH2 0x1110 DUP2 ISZERO ISZERO PUSH2 0x3BFF JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 DUP5 AND CALLER SUB PUSH2 0x126E JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP11 SWAP1 MSTORE SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE PUSH2 0x11E9 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 PUSH1 0xB SWAP3 PUSH2 0x1160 DUP2 PUSH1 0x60 DUP5 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2B0A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1173 DUP4 PUSH2 0x2AD4 JUMP JUMPDEST DUP12 DUP4 MSTORE DUP7 DUP4 ADD DUP14 DUP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE DUP7 PUSH1 0x0 MSTORE PUSH1 0x13 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 MLOAD DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ADD SLOAD PUSH1 0x40 MLOAD SWAP2 DUP4 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x11C1 DUP2 PUSH2 0x2AEF JUMP JUMPDEST DUP5 PUSH1 0xE SLOAD AND DUP6 PUSH1 0x7 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA30E377 PUSH1 0xE4 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x3CA3 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x123D JUMPI JUMPDEST PUSH32 0x28C64511BAD94645265B4AC8C503DD3B588CA95F2BFB17598135C3E6CDC4BE82 PUSH1 0x80 DUP7 DUP7 DUP7 DUP11 DUP8 SLOAD SWAP2 PUSH1 0x7 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 STOP JUMPDEST SWAP3 DUP1 SWAP3 SWAP2 SWAP5 SWAP4 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1267 JUMPI JUMPDEST PUSH2 0x1256 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI SWAP1 SWAP2 SWAP3 DUP6 PUSH2 0x11F8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520647261772077696E6E65722063616E2063726561746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x61207065726D697373696F6E21 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x1A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x7 DUP7 ADD SLOAD SWAP2 PUSH1 0x8 DUP8 ADD SLOAD SWAP4 PUSH1 0x9 DUP9 ADD SLOAD SWAP6 PUSH1 0xA DUP10 ADD SLOAD SWAP8 PUSH1 0xFF PUSH1 0xC PUSH1 0xB DUP13 ADD SLOAD SWAP12 ADD SLOAD AND SWAP11 PUSH1 0x40 MLOAD SWAP13 DUP14 MSTORE PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x137F DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH2 0x180 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x3 NOT PUSH1 0x20 CALLDATASIZE DUP3 ADD DUP2 SGT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP5 GT PUSH2 0x1A2 JUMPI PUSH1 0xA0 SWAP1 DUP5 CALLDATASIZE SUB ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND CALLER SUB PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0xA0 DUP6 ADD DUP6 DUP2 LT DUP5 DUP3 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0x24 SWAP4 DUP5 DUP3 ADD CALLDATALOAD SWAP5 DUP5 DUP7 AND DUP7 SUB PUSH2 0x1A2 JUMPI DUP2 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x44 DUP4 ADD CALLDATALOAD DUP6 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x143B SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP7 ADD ADD PUSH2 0x2B46 JUMP JUMPDEST SWAP7 PUSH1 0x40 DUP2 ADD SWAP8 DUP9 MSTORE PUSH1 0x64 DUP5 ADD CALLDATALOAD DUP7 DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x145F SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x2B46 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP8 DUP3 GT PUSH2 0x1A2 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x4 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0x148F DUP3 PUSH2 0x2B8D JUMP JUMPDEST SWAP2 PUSH2 0x149D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2B0A JUMP JUMPDEST DUP1 DUP4 MSTORE DUP5 DUP7 DUP5 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x1A2 JUMPI DUP6 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1790 JUMPI POP POP POP PUSH1 0x80 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x0 SSTORE DUP4 MLOAD DUP1 MLOAD DUP2 ADD SWAP1 DUP5 DUP2 DUP2 DUP5 ADD SWAP4 SUB SLT PUSH2 0x1A2 JUMPI DUP5 DUP2 ADD MLOAD SWAP1 DUP9 DUP3 GT PUSH2 0x1A2 JUMPI ADD SWAP1 DUP1 PUSH1 0x3F DUP4 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP5 DUP3 ADD MLOAD PUSH2 0x1507 SWAP3 PUSH1 0x40 ADD PUSH2 0x33C9 JUMP JUMPDEST SWAP2 DUP3 MLOAD SWAP1 DUP8 DUP3 GT PUSH2 0x177C JUMPI POP DUP1 PUSH1 0x1 SWAP4 PUSH2 0x1521 DUP6 SLOAD PUSH2 0x3FF1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x170C JUMPI JUMPDEST POP DUP6 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x168C JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1681 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP3 SSTORE JUMPDEST PUSH2 0x155C PUSH2 0x402B JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI DUP1 DUP5 ADD MLOAD DUP8 SWAP4 DUP8 PUSH1 0x60 PUSH2 0x157E PUSH1 0x40 DUP7 ADD PUSH2 0x40E4 JUMP JUMPDEST SWAP5 ADD MLOAD SWAP4 AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x13 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x0 MSTORE PUSH1 0x10 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 ADD SLOAD PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP1 PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0xA DUP4 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1677 JUMPI JUMPDEST POP PUSH2 0x1663 JUMPI JUMPDEST POP MLOAD SWAP6 MLOAD AND SWAP6 MLOAD DUP2 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI DUP2 PUSH2 0x15F6 SWAP2 ADD PUSH2 0x40E4 JUMP JUMPDEST SWAP2 MLOAD SWAP1 DUP2 MLOAD DUP3 ADD DUP2 DUP4 DUP3 SUB SLT PUSH2 0x1A2 JUMPI DUP2 DUP4 ADD MLOAD SWAP6 DUP7 GT PUSH2 0x1A2 JUMPI PUSH2 0x1648 PUSH2 0x165E SWAP4 DUP4 PUSH32 0xB1E312A29937CC11967B0E4A346FEF1AE132424EBABA9DC6D90249DBA053E87C SWAP9 DUP2 PUSH1 0x40 SWAP6 ADD SWAP3 ADD ADD PUSH2 0x3400 JUMP JUMPDEST SWAP2 DUP2 MLOAD SWAP6 DUP7 SWAP6 AND DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2A2F JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0xC ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE DUP9 PUSH2 0x15D8 JUMP JUMPDEST SWAP1 POP ISZERO ISZERO DUP11 PUSH2 0x15D2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 PUSH1 0x0 JUMPDEST DUP10 DUP3 DUP3 LT PUSH2 0x16F6 JUMPI POP POP DUP5 GT PUSH2 0x16DD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x1554 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x16D0 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP6 LT PUSH2 0x1772 JUMPI JUMPDEST DUP5 SWAP4 SWAP3 SWAP2 PUSH1 0x1F DUP9 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1763 JUMPI POP POP PUSH2 0x152A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x1755 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 DUP3 CALLDATASIZE SUB SLT PUSH2 0x1A2 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT DUP13 DUP3 GT OR PUSH2 0x17D6 JUMPI PUSH1 0x40 MSTORE DUP3 CALLDATALOAD SWAP1 DUP11 DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI DUP3 DUP10 SWAP3 PUSH1 0x40 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x14B7 JUMP JUMPDEST DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1824 PUSH2 0x2ABE JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1863 PUSH2 0x2A54 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x188A CALLDATASIZE PUSH2 0x2A6A JUMP JUMPDEST SWAP3 DUP1 ISZERO PUSH2 0x1BCE JUMPI DUP1 DUP4 GT ISZERO PUSH2 0x1B72 JUMPI DUP2 ISZERO PUSH2 0x1B1A JUMPI PUSH2 0x18F2 SWAP2 PUSH1 0x20 DUP5 PUSH2 0x18B1 PUSH1 0x4 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST DUP1 PUSH1 0x4 SSTORE DUP4 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA529759 PUSH1 0xE3 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1AE6 JUMPI JUMPDEST POP PUSH8 0xDE0B6B3A7640000 SWAP5 DUP6 DUP2 MUL SWAP6 DUP2 DUP8 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD0 JUMPI PUSH2 0x192A DUP2 DUP7 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 PUSH2 0x1935 DUP2 DUP8 PUSH2 0x2BC6 JUMP JUMPDEST PUSH1 0x5 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x5 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD0 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1A0 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT OR PUSH2 0xBBD JUMPI PUSH32 0x89C4C2329EFCD15ED5EC8CC7DD2E4C2103EDD8B1D7E9E17E76DA38D7B83ADE67 SWAP9 PUSH1 0x80 SWAP9 PUSH2 0x1A80 SWAP8 PUSH1 0x64 SWAP7 PUSH1 0x40 MSTORE DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP8 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP8 ADD MSTORE DUP9 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE DIV PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x4 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x4 SLOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0xC PUSH2 0x180 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH1 0xB DUP6 ADD SSTORE ADD MLOAD SWAP2 PUSH2 0x1A7A DUP4 PUSH2 0x2A88 JUMP JUMPDEST ADD PUSH2 0x2BE6 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH2 0x1AA5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x7 PUSH1 0x6 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x2BFE JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B12 JUMPI JUMPDEST DUP2 PUSH2 0x1B02 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP2 DUP6 PUSH2 0x1905 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073657420746865206E756D626572206F6620746F74616C20706172 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x7469636970616E747321 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742053656C6563742061206461746520746F2073746F7020746F207365 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6C6C20746865207469746C657321 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742053656C6563742061206461746520746F20737461727420746F2073 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x656C6C20746865207469746C657321 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x243 PUSH2 0x1C3C CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1C5E PUSH2 0x2AA8 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x10 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x5 DUP6 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP7 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x2052 JUMPI JUMPDEST ISZERO PUSH2 0x1FE7 JUMPI DUP4 AND SWAP5 PUSH2 0x1CB3 DUP7 ISZERO ISZERO PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0xC DUP8 ADD SWAP4 PUSH1 0xFF DUP6 SLOAD AND PUSH2 0x1CC6 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x1F89 JUMPI PUSH1 0x6 DUP10 ADD SLOAD SWAP1 PUSH1 0x2 DUP11 ADD SLOAD DUP3 EQ DUP1 ISZERO PUSH2 0x1F7C JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1F5F JUMPI JUMPDEST ISZERO PUSH2 0x1EF1 JUMPI POP POP PUSH1 0x0 DUP1 DUP3 PUSH1 0xB SLOAD AND PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x8C83DDD3 PUSH1 0xE0 SHL DUP4 MSTORE DUP14 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x1D32 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1ECB JUMPI JUMPDEST POP ISZERO ISZERO EQ PUSH2 0x3473 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP9 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1E9E JUMPI JUMPDEST POP PUSH1 0x1 DUP10 ADD SWAP8 DUP9 SLOAD DUP1 SWAP3 LT PUSH2 0x1A2 JUMPI DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP5 SWAP1 DUP3 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x1E30 JUMPI JUMPDEST POP SWAP3 PUSH32 0xA15C2435FADA31FA58C0EB6A516D9B0DF54ED70F48F3680BA2B527955C5797C1 SWAP3 PUSH2 0x1E2C SWAP8 PUSH1 0x80 SWAP4 PUSH1 0xA SWAP9 SWAP8 SWAP7 PUSH1 0x7 DUP13 ADD SLOAD SWAP2 SLOAD AND SWAP2 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 JUMPDEST PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD SWAP2 PUSH1 0x1 DUP4 SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST SWAP2 SWAP6 SWAP5 SWAP4 SWAP1 SWAP3 DUP1 DUP4 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1E97 JUMPI JUMPDEST PUSH2 0x1E4B DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x1E2C SWAP8 PUSH1 0xA SWAP8 PUSH32 0xA15C2435FADA31FA58C0EB6A516D9B0DF54ED70F48F3680BA2B527955C5797C1 SWAP6 PUSH2 0x1E87 PUSH1 0x80 SWAP7 PUSH2 0x341A JUMP JUMPDEST POP SWAP4 SWAP7 SWAP8 SWAP9 POP SWAP4 POP SWAP8 POP SWAP3 PUSH2 0x1DC0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1EC4 JUMPI JUMPDEST PUSH2 0x1EB5 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD DUP10 PUSH2 0x1D6E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0x1EE8 SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x1EE0 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3427 JUMP JUMPDEST SWAP2 POP POP DUP12 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1E2C SWAP9 POP PUSH1 0xA SWAP8 SWAP7 SWAP6 POP PUSH1 0xA0 SWAP4 POP SWAP4 PUSH32 0x9878AA34B75479DA70E37BCE4455679DAE86D7580D3CF362E48F2ABB18BAACD SWAP5 PUSH1 0x8 DUP12 ADD SLOAD DUP2 PUSH1 0x9 DUP14 ADD SLOAD AND SWAP2 DUP11 DUP14 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F54 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE LOG1 PUSH2 0x1E10 JUMP JUMPDEST POP DUP3 PUSH1 0xA DUP12 ADD SLOAD AND ISZERO ISZERO DUP1 ISZERO PUSH2 0x1CE9 JUMPI POP PUSH1 0x8 DUP11 ADD SLOAD ISZERO ISZERO PUSH2 0x1CE9 JUMP JUMPDEST POP PUSH1 0x8 DUP11 ADD SLOAD ISZERO ISZERO PUSH2 0x1CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207469746C6520646F6E2774206861766520746865207065726D6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x73696F6E20746F207769746864726177 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D73672E73656E646572206D7573742062652074686520636F6E747261637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F776E6572206F72207468652070726F746F636F6C206F776E65722100000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x1CA0 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x1A2 JUMPI PUSH2 0x2095 DUP2 PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x3FA5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0xC DUP3 ADD SLOAD AND PUSH2 0x20B8 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x22A9 JUMPI JUMPDEST POP ISZERO PUSH2 0x1A2 JUMPI PUSH2 0x2104 PUSH1 0x9 PUSH2 0x20F0 PUSH2 0x20E5 PUSH1 0x8 DUP6 ADD SLOAD PUSH1 0xB DUP7 ADD SLOAD SWAP1 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD SLOAD SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST SWAP3 ADD SLOAD SWAP2 PUSH2 0x20FE DUP2 DUP5 PUSH2 0x2C30 JUMP JUMPDEST SWAP3 PUSH2 0x2C30 JUMP JUMPDEST DUP2 GT PUSH2 0x2256 JUMPI PUSH2 0x2115 DUP5 ISZERO ISZERO PUSH2 0x3F65 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0xB SLOAD AND PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x8C83DDD3 PUSH1 0xE0 SHL DUP4 MSTORE DUP11 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x2156 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2238 JUMPI POP ISZERO ISZERO EQ PUSH2 0x3473 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2207 JUMPI JUMPDEST POP LT PUSH2 0x1A2 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 DUP2 SWAP1 DUP4 SWAP1 DUP2 PUSH1 0x0 DUP2 PUSH1 0x44 DUP2 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x21DB JUMPI STOP JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2200 JUMPI JUMPDEST PUSH2 0x21EF DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x243 SWAP1 PUSH2 0x341A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21E5 JUMP JUMPDEST DUP1 SWAP3 POP DUP6 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x2231 JUMPI JUMPDEST PUSH2 0x2220 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI DUP2 SWAP1 MLOAD DUP7 PUSH2 0x2193 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x224D SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x1EE0 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST SWAP2 POP POP DUP8 PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F616D6F756E742063616E27742065786365656420746865207469746C652076 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x616C756521 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH2 0x22B4 DUP2 PUSH2 0x2A88 JUMP JUMPDEST ISZERO DUP6 PUSH2 0x20C4 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x44 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x120 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x3 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x4 DUP5 ADD SLOAD AND PUSH1 0x5 DUP5 ADD SLOAD SWAP2 PUSH1 0x6 DUP6 ADD SLOAD SWAP4 PUSH1 0x8 PUSH1 0xFF PUSH1 0x7 DUP9 ADD SLOAD AND SWAP7 ADD SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x2379 CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1C0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x5 DUP7 ADD SLOAD AND PUSH1 0x6 DUP7 ADD SLOAD SWAP1 PUSH1 0x7 DUP8 ADD SLOAD SWAP3 PUSH1 0x8 DUP9 ADD SLOAD SWAP5 DUP7 PUSH1 0x9 DUP11 ADD SLOAD AND SWAP7 PUSH1 0xA DUP11 ADD SLOAD AND SWAP8 PUSH1 0xC PUSH1 0xB DUP12 ADD SLOAD SWAP11 ADD SLOAD SWAP11 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE DUP2 DUP2 AND PUSH2 0x243A DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x245C CALLDATASIZE PUSH2 0x2A6A JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 SWAP5 SWAP4 SWAP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x10 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x10 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 DUP3 ADD SWAP2 PUSH2 0x24A5 DUP4 SLOAD ISZERO ISZERO PUSH2 0x3BFF JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x24C1 SWAP1 DUP4 AND CALLER EQ PUSH2 0x3C4B JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SWAP3 PUSH2 0x24D4 CALLER DUP5 DUP7 SLOAD AND EQ PUSH2 0x3C4B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xB DUP4 ADD SLOAD SWAP1 DUP2 DUP4 LT PUSH2 0x26AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x6 PUSH2 0x24FB SWAP4 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1AD0 JUMPI DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x26A2 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x25D7 JUMPI SWAP2 PUSH32 0x50243003E9D7EF147493229D55468984FE3256E1B1CF63B435C46D06331682A4 SWAP9 SWAP4 SWAP2 PUSH1 0xC PUSH1 0xA0 SWAP10 SWAP9 SWAP8 SWAP7 SWAP5 ADD PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2566 DUP2 PUSH2 0x2AD4 JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x2 DUP7 DUP3 ADD SWAP3 DUP9 DUP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 DUP11 DUP3 MSTORE DUP12 PUSH1 0x0 MSTORE PUSH1 0x14 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP9 PUSH1 0x0 MSTORE DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 MLOAD AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP14 SHL SWAP5 DUP6 DUP6 SLOAD AND OR DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE ADDRESS SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x8B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C2074686520696E7374616C6C6D656E74732066726F6D2074686520636F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C61746572616C206D7573742068617665206265656E2070616964206F722061 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x74206C65617374207468652076616C75652070616964206D7573742062652067 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x726561746572207468656E2074776F2074696D65732074686520656E73757265 PUSH1 0xA4 DUP3 ADD MSTORE PUSH11 0x15985B1D59539959591959 PUSH1 0xAA SHL PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0xE4 SWAP1 REVERT JUMPDEST LT ISZERO SWAP1 POP DUP11 DUP1 PUSH2 0x2519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636F6C61746572616C20746F74616C2076616C7565206D7573742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x652067726561746572207468616E2074756520656E737572616E636556616C75 PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x19539959591959 PUSH1 0xCA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2749 PUSH2 0x2A54 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 SLOAD PUSH2 0x2783 PUSH2 0x402B JUMP JUMPDEST SWAP1 PUSH2 0x27A0 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2A2F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH2 0x27B2 CALLDATASIZE PUSH2 0x29F6 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 SWAP2 DUP2 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 PUSH1 0x8 SWAP2 DUP3 DUP6 ADD SWAP6 PUSH1 0x3 DUP7 ADD SWAP3 JUMPDEST DUP8 SLOAD DUP2 LT ISZERO PUSH2 0x243 JUMPI DUP9 PUSH1 0x0 MSTORE PUSH1 0x10 SWAP1 DUP2 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE DUP4 MSTORE DUP8 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP7 SLOAD SWAP4 DUP13 DUP7 PUSH1 0x2 SWAP7 DUP8 PUSH2 0x280F PUSH1 0x6 DUP7 ADD SLOAD DUP4 PUSH2 0x2C30 JUMP JUMPDEST LT PUSH2 0x28E1 JUMPI POP POP PUSH2 0x285B SWAP6 PUSH1 0xC SWAP2 DUP3 DUP5 ADD SWAP4 PUSH1 0xFF NOT SWAP5 DUP6 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0xB DUP1 SWAP8 ADD PUSH2 0x283A DUP2 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST SWAP1 SSTORE DUP13 DUP2 ADD SLOAD ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x28BC JUMPI JUMPDEST POP PUSH2 0x2860 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x14 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP13 PUSH1 0x0 MSTORE DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x0 MSTORE DUP10 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 ADD SLOAD PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH2 0x28AF DUP2 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST SWAP1 SSTORE DUP11 DUP1 DUP1 DUP1 DUP1 DUP15 PUSH2 0x2850 JUMP JUMPDEST PUSH1 0xA ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 DUP2 PUSH2 0x28D9 JUMPI JUMPDEST POP CODESIZE PUSH2 0x284A JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x28D2 JUMP JUMPDEST SWAP3 SWAP5 POP SWAP3 POP POP PUSH1 0x44 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND SWAP6 DUP13 ADD SLOAD PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP4 DUP5 SWAP3 PUSH4 0x1933C39 PUSH1 0xE6 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x2974 JUMPI JUMPDEST PUSH2 0x285B SWAP4 POP TIMESTAMP GT PUSH2 0x2936 JUMPI JUMPDEST POP PUSH2 0x2BA4 JUMP JUMPDEST PUSH1 0xC ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x5238EEF763C91B9905201192C7B588678D655A1FEC573E5434470D30D3F975BE DUP4 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP11 PUSH2 0x2930 JUMP JUMPDEST POP DUP4 DUP4 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x299C JUMPI JUMPDEST PUSH2 0x298A DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x285B SWAP3 MLOAD PUSH2 0x2924 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2980 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x29E5 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x29DE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2A1F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A0F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2A48 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x2A92 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xBBD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x2B5D DUP3 PUSH2 0x2B2B JUMP JUMPDEST SWAP3 PUSH2 0x2B6B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2B0A JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1A2 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xBBD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1AD0 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1AD0 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2BD0 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x2BF0 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1AD0 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2C2D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x2A2F JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1AD0 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP6 PUSH1 0x1 PUSH1 0xFF PUSH1 0xC DUP5 ADD SLOAD AND PUSH2 0x2C75 DUP2 PUSH2 0x2A88 JUMP JUMPDEST SUB PUSH2 0x3384 JUMPI PUSH1 0x2 DUP8 ADD SWAP1 DUP4 DUP3 SLOAD LT PUSH2 0x332B JUMPI PUSH1 0xC DUP9 ADD SWAP4 PUSH1 0xFF DUP6 SLOAD AND PUSH2 0x2C9A DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3316 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3302 JUMPI JUMPDEST POP ISZERO PUSH2 0x32FE JUMPI DUP1 PUSH2 0x32B6 JUMPI PUSH1 0x1 SWAP2 JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND PUSH1 0x20 PUSH1 0x2 DUP8 ADD SLOAD PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1933C39 PUSH1 0xE6 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP9 PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3235 JUMPI DUP9 SWAP2 PUSH2 0x3284 JUMPI JUMPDEST POP DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0x3240 JUMPI PUSH2 0x2D11 SWAP1 TIMESTAMP PUSH2 0x2C30 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x6 SSTORE DUP2 PUSH2 0x3169 JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x5 DUP11 ADD SLOAD AND SWAP6 PUSH1 0x5 SLOAD SWAP7 PUSH1 0x6 SLOAD PUSH1 0x6 DUP13 ADD SWAP9 DUP10 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x120 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x120 DUP11 ADD GT OR PUSH2 0x3155 JUMPI PUSH2 0x120 DUP9 ADD PUSH1 0x40 MSTORE DUP14 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP9 ADD MSTORE CALLER PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP6 ADD MSTORE DUP1 PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP1 SWAP2 LT ISZERO DUP1 PUSH2 0x3149 JUMPI JUMPDEST PUSH2 0x2F87 JUMPI JUMPDEST POP SWAP1 POP PUSH2 0x100 PUSH1 0x40 MLOAD SWAP3 DUP1 MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD ISZERO ISZERO DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x120 DUP3 MSTORE PUSH2 0x140 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0xBBD JUMPI PUSH1 0x40 DUP3 SWAP1 MSTORE PUSH1 0xD SLOAD PUSH4 0x6902622F PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP5 PUSH2 0x13F NOT DUP9 PUSH2 0x2E6A DUP2 CALLER PUSH2 0x144 DUP3 ADD PUSH2 0x2C0B JUMP JUMPDEST SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2F7B JUMPI POP PUSH2 0x2F44 JUMPI JUMPDEST POP POP SWAP1 PUSH32 0xD6985739EC9552D19C3572FC03D8CC0F929E20DE244EAA8D01C1786D61FD177A SWAP7 DUP5 SWAP4 SWAP3 PUSH2 0x2EEE SWAP6 SLOAD SWAP1 SLOAD EQ PUSH2 0x2F1B JUMPI JUMPDEST POP PUSH1 0x3 DUP4 SLOAD SWAP2 ADD SLOAD EQ DUP1 PUSH2 0x2F04 JUMPI JUMPDEST PUSH2 0x2EF3 JUMPI JUMPDEST POP PUSH2 0x2ED0 DUP5 DUP5 PUSH2 0x3B5D JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE CODESIZE PUSH2 0x2EC5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD AND PUSH2 0x2F15 DUP2 PUSH2 0x2A88 JUMP JUMPDEST EQ PUSH2 0x2EC0 JUMP JUMPDEST DUP3 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR DUP4 SSTORE PUSH1 0x8 ADD SLOAD PUSH2 0x2F35 JUMPI JUMPDEST CODESIZE PUSH2 0x2EB1 JUMP JUMPDEST PUSH2 0x2F3F DUP7 DUP7 PUSH2 0x3CD3 JUMP JUMPDEST PUSH2 0x2F2F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 DUP3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP7 SWAP1 RETURNDATASIZE DUP5 GT PUSH2 0x2F73 JUMPI JUMPDEST DUP2 PUSH2 0x2F61 SWAP2 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI SWAP1 SWAP2 SWAP3 CODESIZE DUP1 PUSH2 0x2E7C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2F57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xB SLOAD AND SWAP1 PUSH1 0x2 DUP8 ADD SLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x3145 JUMPI SWAP1 PUSH1 0x44 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x560337D1 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x313A JUMPI PUSH2 0x310F JUMPI JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1ACB51D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 SWAP1 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3104 JUMPI DUP4 SWAP3 PUSH2 0x30D0 JUMPI JUMPDEST POP DUP9 DUP4 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP6 ADD MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP7 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 DUP2 ADD PUSH1 0xE0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x8 PUSH2 0x100 DUP5 ADD MLOAD SWAP2 ADD SSTORE DUP1 CODESIZE PUSH2 0x2DA7 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x30FC JUMPI JUMPDEST DUP2 PUSH2 0x30EC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x301C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3126 JUMPI PUSH1 0x40 MSTORE CODESIZE PUSH2 0x2FCE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH1 0x7 DUP12 ADD SLOAD ISZERO PUSH2 0x2DA2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x2 DUP8 ADD SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2B187755 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x3235 JUMPI DUP9 SWAP1 PUSH2 0x31FB JUMPI JUMPDEST PUSH2 0x31F4 SWAP3 POP DUP1 PUSH1 0x5 SSTORE PUSH32 0x57D559AAA778AE17E20A31E208D5763CB05667142A48B6098AF5FB106B0CE8D9 PUSH1 0x20 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE LOG1 DUP11 DUP11 PUSH2 0x34B4 JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2D1C JUMP JUMPDEST POP SWAP1 PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x322D JUMPI JUMPDEST DUP2 PUSH2 0x3216 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI SWAP1 PUSH2 0x31F4 SWAP2 MLOAD PUSH2 0x31BA JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3209 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x327F SWAP1 PUSH1 0x3 DUP12 ADD SLOAD DUP1 PUSH1 0x5 SSTORE PUSH32 0x57D559AAA778AE17E20A31E208D5763CB05667142A48B6098AF5FB106B0CE8D9 PUSH1 0x20 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE LOG1 DUP11 DUP11 PUSH2 0x34B4 JUMP JUMPDEST PUSH2 0x2D1F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x32AE JUMPI JUMPDEST DUP2 PUSH2 0x329F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI MLOAD CODESIZE PUSH2 0x2CFC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x3292 JUMP JUMPDEST PUSH1 0x6 DUP10 ADD SLOAD DUP2 GT ISZERO PUSH2 0x32C9 JUMPI DUP1 SWAP2 PUSH2 0x2CBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x416C7265616479207061696421 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x3 SWAP2 POP PUSH2 0x330F DUP2 PUSH2 0x2A88 JUMP JUMPDEST EQ CODESIZE PUSH2 0x2CAD JUMP JUMPDEST SWAP1 POP PUSH2 0x3321 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520616E7920696E7374616C6C6D656E74206C PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65667420746F2070617921 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436865636B20746865207469746C652073746174757321000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x33D6 DUP2 PUSH2 0x2B2B JUMP JUMPDEST SWAP2 PUSH2 0x33E4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2B0A JUMP JUMPDEST DUP3 SWAP5 DUP3 DUP5 MSTORE DUP3 DUP3 ADD GT PUSH2 0x1A2 JUMPI PUSH1 0x20 PUSH2 0x33FE SWAP4 ADD SWAP1 PUSH2 0x2A0C JUMP JUMPDEST JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP2 MLOAD PUSH2 0x2C2D SWAP3 PUSH1 0x20 ADD PUSH2 0x33C9 JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x1A2 JUMPI DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A2 JUMPI PUSH2 0x344E SWAP2 DUP4 ADD PUSH2 0x3400 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1A2 JUMPI PUSH1 0x40 PUSH2 0x2C2D SWAP2 SWAP4 ADD PUSH2 0x341A JUMP JUMPDEST ISZERO PUSH2 0x347A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6B656E206E6F7420616C6C6F77656421 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 PUSH1 0x0 SWAP2 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x10 DUP4 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP6 DUP5 MSTORE PUSH1 0xF DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP7 SLOAD PUSH1 0x8 DUP4 ADD SLOAD LT PUSH2 0x3B07 JUMPI PUSH1 0xFF PUSH1 0xC DUP9 ADD SLOAD AND PUSH2 0x34F8 DUP2 PUSH2 0x2A88 JUMP JUMPDEST DUP1 ISZERO SWAP1 DUP2 ISZERO SWAP2 PUSH2 0x3AF2 JUMPI JUMPDEST POP ISZERO PUSH2 0x3A73 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0x3A37 JUMPI DUP6 DUP3 PUSH1 0xB SLOAD AND SWAP2 DUP6 MLOAD PUSH4 0x8C83DDD3 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 DUP2 PUSH1 0x4 SWAP6 DUP5 DUP8 DUP4 ADD MSTORE DUP2 PUSH1 0x24 SWAP7 DUP8 SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x39DE JUMPI PUSH2 0x355C SWAP2 PUSH1 0x1 SWAP2 DUP12 SWAP2 PUSH2 0x3A1A JUMPI POP ISZERO ISZERO EQ PUSH2 0x3473 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x3 DUP11 ADD SLOAD DUP10 LT PUSH2 0x39E8 JUMPI DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD MSTORE DUP8 DUP2 DUP5 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x39DE JUMPI SWAP1 DUP11 SWAP2 DUP11 SWAP2 PUSH2 0x39A9 JUMPI JUMPDEST POP LT PUSH2 0x3970 JUMPI DUP7 PUSH1 0x44 SWAP2 DUP8 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP3 MSTORE CALLER DUP9 DUP4 ADD MSTORE ADDRESS DUP8 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3747 JUMPI SWAP1 DUP10 SWAP2 DUP10 SWAP2 PUSH2 0x393F JUMPI JUMPDEST POP LT PUSH2 0x38E0 JUMPI POP DUP8 DUP2 ADD SLOAD PUSH2 0x3751 JUMPI PUSH1 0x9 DUP4 ADD SWAP7 DUP8 SLOAD SWAP8 PUSH1 0x6 DUP6 ADD SLOAD SWAP9 DUP10 PUSH2 0x3600 SWAP2 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x9 SLOAD DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP6 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP12 SWAP1 SWAP12 MSTORE SWAP10 SWAP1 SWAP2 DUP9 SWAP2 DUP4 SWAP2 DUP8 AND SWAP1 DUP3 SWAP1 DUP13 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3747 JUMPI SWAP2 DUP9 SWAP2 DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x3704 JUMPI JUMPDEST POP PUSH2 0x366B SWAP1 PUSH1 0x6 DUP6 PUSH1 0x9 SLOAD AND SWAP6 PUSH1 0xB SLOAD AND SWAP7 ADD SLOAD SWAP1 PUSH2 0x2C30 JUMP JUMPDEST DUP7 MLOAD SWAP10 DUP11 MSTORE CALLER SWAP3 DUP11 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP8 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x60 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x36FB JUMPI POP PUSH2 0x36BF JUMPI JUMPDEST POP POP POP PUSH1 0x6 SWAP1 JUMPDEST ADD PUSH2 0x36BB DUP2 SLOAD PUSH2 0x2BA4 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x36F4 JUMPI JUMPDEST PUSH2 0x36D3 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x36F1 JUMPI POP SWAP1 PUSH2 0x36E8 PUSH1 0x6 SWAP3 PUSH2 0x341A JUMP JUMPDEST POP SWAP1 CODESIZE DUP1 PUSH2 0x36A9 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x36C9 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 SWAP2 SWAP4 SWAP5 SWAP6 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x3740 JUMPI JUMPDEST PUSH2 0x371F DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI PUSH2 0x366B DUP8 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x3739 DUP11 SWAP4 PUSH2 0x341A JUMP JUMPDEST POP SWAP1 PUSH2 0x3651 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3715 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x3774 PUSH1 0x9 DUP5 ADD SWAP4 PUSH1 0x6 DUP6 SLOAD SWAP2 ADD SWAP5 PUSH2 0x376C DUP7 SLOAD DUP1 SWAP4 PUSH2 0x2BFE JUMP JUMPDEST SWAP1 SSTORE DUP9 PUSH2 0x2C30 JUMP JUMPDEST ISZERO PUSH2 0x38A7 JUMPI PUSH1 0x9 SLOAD DUP4 SLOAD DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP6 DUP4 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP10 SWAP3 SWAP1 SWAP2 DUP9 SWAP2 DUP4 SWAP2 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP13 SWAP1 DUP10 AND GAS CALL DUP1 ISZERO PUSH2 0x3747 JUMPI SWAP2 DUP9 SWAP2 DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x3864 JUMPI JUMPDEST POP PUSH2 0x37E1 SWAP1 DUP5 PUSH1 0x9 SLOAD AND SWAP5 PUSH1 0xB SLOAD AND SWAP6 SLOAD SWAP1 PUSH2 0x2C30 JUMP JUMPDEST DUP7 MLOAD SWAP10 DUP11 MSTORE CALLER SWAP3 DUP11 ADD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP8 SWAP3 DUP4 SWAP2 DUP3 SWAP1 PUSH1 0x60 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x36FB JUMPI POP PUSH2 0x382B JUMPI JUMPDEST POP POP POP PUSH1 0x6 SWAP1 PUSH2 0x36B0 JUMP JUMPDEST DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x385D JUMPI JUMPDEST PUSH2 0x383F DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x36F1 JUMPI POP SWAP1 PUSH2 0x3854 PUSH1 0x6 SWAP3 PUSH2 0x341A JUMP JUMPDEST POP SWAP1 CODESIZE DUP1 PUSH2 0x3820 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3835 JUMP JUMPDEST DUP1 SWAP3 POP DUP7 SWAP2 SWAP4 SWAP5 SWAP6 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x38A0 JUMPI JUMPDEST PUSH2 0x387F DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI PUSH2 0x37E1 DUP8 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x3899 DUP11 SWAP4 PUSH2 0x341A JUMP JUMPDEST POP SWAP1 PUSH2 0x37CA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3875 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE ADDRESS PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP6 SWAP4 POP DUP8 SWAP3 AND SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD PUSH2 0x380F JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206D75737420617070726F76652074686520636F6E747261637420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x207472616E736665722074686520746F6B656E73 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x3969 JUMPI JUMPDEST PUSH2 0x3958 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3229 JUMPI DUP9 SWAP1 MLOAD CODESIZE PUSH2 0x35D9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x394E JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x14 DUP2 DUP5 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x39D7 JUMPI JUMPDEST PUSH2 0x39C2 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x39D3 JUMPI DUP10 SWAP1 MLOAD CODESIZE PUSH2 0x35A2 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x39B8 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0xD DUP2 DUP5 ADD MSTORE PUSH13 0x57726F6E672076616C75652121 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3A2E SWAP2 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x1EE0 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST SWAP2 POP POP CODESIZE PUSH2 0x1D29 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x456E746572206120746F6B656E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x4C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F7572207469746C6520616C72656164792068617665206265656E2066696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C697A6564206F722063616E63656C65642E20506C6561736520636865636B PUSH1 0x64 DUP3 ADD MSTORE PUSH12 0x103A34329039BA30BA3AB997 PUSH1 0xA1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST PUSH1 0x4 SWAP2 POP PUSH2 0x3AFF DUP2 PUSH2 0x2A88 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x3503 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74657220612076616C696420636F6E747261637420496420666F72207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6973205469746C6521 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH32 0x612A8A5548125C3DB9F13B41025DF2C888D69F8A0351889CD94BD21A45DD34B SWAP2 PUSH2 0x2EEE PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH2 0x3BBA PUSH1 0x40 DUP3 KECCAK256 SWAP3 PUSH1 0x6 DUP1 DUP6 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x2BB3 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD DUP1 DUP3 LT PUSH2 0x3BEC JUMPI POP POP DUP3 DUP3 ADD SSTORE JUMPDEST ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x3BF6 SWAP3 POP PUSH2 0x2C30 JUMP JUMPDEST DUP3 DUP3 ADD SSTORE PUSH2 0x3BCD JUMP JUMPDEST ISZERO PUSH2 0x3C06 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E2774206265656E2073656C656374656420796574210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C52 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E20616464206120636F6C61746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x616C21 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xCCF0A31A221F3C9B DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2C2D SWAP3 SWAP2 ADD SWAP1 PUSH2 0x2A2F JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x3F0F JUMPI PUSH1 0xC DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xFF DUP4 SLOAD PUSH1 0x8 SHR AND ISZERO ISZERO SUB PUSH2 0x3EAD JUMPI DUP1 DUP1 PUSH2 0x3E97 JUMPI JUMPDEST ISZERO PUSH2 0x3DEF JUMPI POP POP SWAP1 PUSH1 0xB DUP5 SWAP6 SWAP7 PUSH2 0x3DAC SWAP6 SWAP4 PUSH2 0x3D5B PUSH1 0x7 DUP6 ADD SLOAD SWAP2 PUSH2 0x1152 DUP9 MLOAD SWAP4 DUP5 SWAP3 DUP10 DUP5 ADD SWAP7 DUP8 SWAP2 PUSH1 0x60 SWAP4 SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 ADD SLOAD DUP4 MLOAD SWAP2 DUP4 DUP4 ADD MSTORE DUP4 DUP3 ADD MSTORE DUP6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x3D7F DUP2 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0xE SLOAD AND SWAP1 PUSH1 0x7 SLOAD AND DUP8 DUP6 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA30E377 PUSH1 0xE4 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x3CA3 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3DE6 JUMPI POP PUSH2 0x3DC1 JUMPI POP POP POP JUMP JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3DDF JUMPI JUMPDEST PUSH2 0x3DD4 DUP2 DUP4 PUSH2 0x2B0A JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x36F1 JUMPI POP JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3DCA JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP7 SWAP5 SWAP4 SWAP3 DUP2 PUSH2 0x3E89 JUMPI JUMPDEST POP PUSH2 0x3E08 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SWAP4 DUP6 MSTORE PUSH1 0x14 DUP4 MSTORE DUP2 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP4 DUP2 MLOAD SWAP5 PUSH2 0x3E29 DUP7 PUSH2 0x2AD4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP3 SLOAD AND DUP8 MSTORE PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 DUP4 DUP4 DUP11 ADD MSTORE ADD SLOAD SWAP2 DUP5 DUP9 ADD SWAP3 DUP4 MSTORE DUP4 MSTORE PUSH1 0x10 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 MLOAD DUP4 MSTORE MSTORE KECCAK256 SWAP3 MLOAD AND SWAP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3E00 JUMP JUMPDEST PUSH1 0x8 SWAP2 POP ADD SLOAD ISZERO ISZERO CODESIZE PUSH2 0x3DFA JUMP JUMPDEST POP PUSH1 0xA DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x3D1E JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E27742072657472696576652074686520636F6C61746572616C PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x206265666F72652074686520776974686472617721 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C2074686520696E7374616C6C6D656E7473206D75737420686176652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x65656E207061696421 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3F6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151BDAD95B881B9BDD08185B1B1BDDD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3FAC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616C6C6572206D75737420626520746865206F776E657221000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x4021 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x400B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4000 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x1 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x4041 DUP5 PUSH2 0x3FF1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x40C2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4065 JUMPI JUMPDEST POP PUSH2 0x33FE SWAP3 POP SUB DUP4 PUSH2 0x2B0A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP5 DUP4 LT PUSH2 0x40A7 JUMPI POP PUSH2 0x33FE SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x4058 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x408E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x33FE SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x4058 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SLT AND PUSH1 0x5B EXTCODEHASH 0x1E 0xB3 0xF8 PUSH28 0x92CB8DA3061CECBB4E6EFEAFD666834FB5D18587FA4E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"793:29756:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;-1:-1:-1;;;;;793:29756:26;;:::i;:::-;30465:61;793:29756;;;;;30487:5;793:29756;;30473:10;:19;30465:61;:::i;:::-;793:29756;;;;;28169:23;793:29756;;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;7600:9;793:29756;;;;;7640:12;;;793:29756;;;;;;;;;;;:::i;:::-;;7640:35;;:71;;;;;793:29756;7640:109;;;;793:29756;;;;;;7794:15;:39;:78;;;;793:29756;-1:-1:-1;7791:1148:26;;;793:29756;;;;7941:32;793:29756;;;;;;;;;;;;;;;7941:32;7791:1148;793:29756;7791:1148;793:29756;8025:22;;;;;793:29756;7794:15;8007:40;:76;;;7791:1148;8004:924;;;793:29756;;;;;;;;;;;;;;;8004:924;793:29756;;;;;;;;;8205:5;793:29756;;8244:20;;793:29756;8244:20;;793:29756;;;;;;;;;;;;8205:60;;793:29756;8205:60;;793:29756;;;;;;8205:60;;;;;;;793:29756;8205:60;;;8004:924;793:29756;;;;:::i;:::-;;8290:34;;:79;;;;;;8004:924;8290:236;;;;8004:924;8286:627;;;;;;;793:29756;;8616:32;793:29756;;8565:21;793:29756;;;;;;;;;;8565:21;793:29756;;8616:32;793:29756;8286:627;8698:24;;793:29756;8698:24;;;:29;8695:199;;8286:627;8695:199;8824:46;793:29756;;;;;;;;;;;8824:46;8695:199;8290:236;793:29756;;;;;;:::i;:::-;8394:103;;;8290:236;8394:132;;;;8290:236;;;;;;8394:132;8501:25;;;8394:132;;:103;8432:44;8456:19;;8205:5;8456:19;;793:29756;8432:44;;:::i;:::-;8479:18;;;793:29756;-1:-1:-1;8394:103:26;;;8290:79;8351:18;;;793:29756;8328:41;;;-1:-1:-1;8290:79:26;;8205:60;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;8205:60;;;;;;;;;;793:29756;;;;;;;;;8007:76;793:29756;;;;:::i;:::-;;8051:32;;8007:76;;7794:78;793:29756;;;;;:::i;:::-;7794:78;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;7640:109;793:29756;;;;:::i;:::-;;7715:34;;7640:109;;:71;793:29756;;;;:::i;:::-;;7679:32;;7640:71;;793:29756;;;;;;;;;;;;;;;;;;18263:9;793:29756;;;;;;18313:9;793:29756;;;;;;18333:20;;793:29756;;;;;;;;;;;;;;;;;18437:13;793:29756;;18468:14;793:29756;;18468:14;;793:29756;;;;;;;;;;;18437:46;;793:29756;18437:46;;793:29756;18437:46;;;;;;;793:29756;;;;18437:46;;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19179:107;793:29756;;;;;;;;;;18569:46;793:29756;;;;;;;;18569:46;;;793:29756;;;18664:11;793:29756;;;;;18686:15;18437:13;18686:15;;;793:29756;;;;;;;;;;;;;;;;;;;;18728:20;;;;;793:29756;;;18773:23;;;793:29756;;18848:18;;793:29756;18834:11;793:29756;;;;18834:11;;793:29756;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;18908:14;793:29756;;;;;;;;;;;18834:11;793:29756;;;18971:20;793:29756;19055:24;793:29756;;19055:24;;:::i;:::-;19093:12;793:29756;;;;;;;;;19139:22;793:29756;;19139:22;:::i;:::-;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19179:107;793:29756;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;18437:46;;;;;;;;793:29756;18437:46;;;;;;:::i;:::-;;;793:29756;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;793:29756:26;;;18437:46;;;;;793:29756;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;-1:-1:-1;;;;;793:29756:26;;:::i;:::-;30465:61;793:29756;;;;;30487:5;793:29756;;30473:10;:19;30465:61;:::i;:::-;793:29756;;;;;27981:23;793:29756;;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;793:29756:26;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;793:29756:26;;;;9078:9;793:29756;;;;;9118:12;793:29756;;9118:12;;;793:29756;;;;;:::i;:::-;9118:32;793:29756;;9225:24;;;793:29756;9253:18;;;;793:29756;9225:46;;;;793:29756;;9303:26;9509:4;9303:26;;:::i;:::-;9225:24;;;;;793:29756;9491:22;9488:174;9509:4;;;9535:17;;;793:29756;9567:14;793:29756;9488:174;;9884:34;793:29756;9791:16;;793:29756;9885:24;;;;793:29756;9884:34;:::i;:::-;793:29756;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;9702:617;;793:29756;;9702:617;;793:29756;;9702:617;;793:29756;9702:617;;;793:29756;9985:10;9702:617;;;793:29756;;9702:617;;;793:29756;;;9702:617;;793:29756;;9702:617;;;793:29756;10134:4;9702:617;;;793:29756;;9702:617;;;793:29756;;9702:617;;;793:29756;10255:26;9702:617;;;793:29756;;9702:617;;;793:29756;-1:-1:-1;;;;;793:29756:26;;;;10332:14;793:29756;;;;;;;;;;9118:12;793:29756;;;;;;;;9702:617;;793:29756;9509:4;793:29756;;;;9702:617;;793:29756;10255:26;793:29756;;;;9702:617;;793:29756;;;;;9702:617;;;793:29756;;;;;;;;;;9702:617;;;793:29756;;9253:18;793:29756;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;9702:617;;;793:29756;9885:24;793:29756;;;;9702:617;;793:29756;;;;;9702:617;;;793:29756;9225:24;793:29756;;;;;;;;;;;9702:617;;;793:29756;;;;;;;;;;;;;;;;;;9702:617;;;793:29756;;;;;;;;;9702:617;;;793:29756;;;;;;;9702:617;;;793:29756;;;;:::i;:::-;;;:::i;:::-;9702:617;;;793:29756;;;;;;;9225:24;793:29756;;;;;;;;;9225:24;;;793:29756;9253:18;;;793:29756;-1:-1:-1;10405:109:26;;9488:174;9702:617;793:29756;;;;;;10564:19;;793:29756;;9702:617;;793:29756;;;;;;9702:617;;793:29756;;;;;;9702:617;;793:29756;9702:617;793:29756;;;9702:617;;;793:29756;9702:617;793:29756;;;;;;;;9702:617;;;793:29756;;9702:617;793:29756;;;9702:617;;;793:29756;;;;;;9702:617;;793:29756;9702:617;793:29756;;;9702:617;;;793:29756;9702:617;793:29756;;;;;;;;9702:617;;;793:29756;;9702:617;793:29756;;;;;;;;9702:617;;;793:29756;;9702:617;793:29756;;;9702:617;;;793:29756;9702:617;793:29756;;;9702:617;;;793:29756;;;;:::i;:::-;;;;;9702:617;793:29756;;;;;;;;10564:19;;793:29756;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;10620:7;793:29756;-1:-1:-1;;;10620:52:26;;793:29756;;;;-1:-1:-1;;;;;793:29756:26;;;-1:-1:-1;;9985:10:26;10620:52;9985:10;;10620:52;;;;:::i;:::-;;;;;;;;;;;;9488:174;-1:-1:-1;;;;;793:29756:26;;;;;;10332:14;793:29756;;;;;;;;9225:24;;;;793:29756;;;;;;;;;;;9885:24;10773:67;;;793:29756;10874:50;;9225:24;;10685:171;;793:29756;;;;;10685:171;:::i;:::-;9225:24;793:29756;;;;;;9985:10;793:29756;;;;10874:50;793:29756;10620:52;793:29756;10620:52;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;10620:52;;;;;;;;-1:-1:-1;10620:52:26;;793:29756;;;;;;;;;;;;10405:109;9118:12;;;793:29756;;-1:-1:-1;;793:29756:26;9509:4;793:29756;;;10405:109;;9488:174;793:29756;9636:14;9253:18;9488:174;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;;:::i;:::-;30487:5;793:29756;-1:-1:-1;;;;;793:29756:26;;30465:61;;793:29756;;30473:10;:19;30465:61;:::i;:::-;793:29756;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;;:::i;:::-;30487:5;793:29756;-1:-1:-1;;;;;793:29756:26;;30465:61;;793:29756;;30473:10;:19;30465:61;:::i;:::-;793:29756;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;;1622:8:0;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;:::i;:::-;;;;5893:90;793:29756;;;;;;;;;;;;;;;;;;;;;;5893:90;;793:29756;5893:90;;793:29756;5893:90;;793:29756;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;5620:74;793:29756;;;;;;;;;;;;;;;;5620:74;;;;793:29756;5620:74;;;;793:29756;5620:74;;;793:29756;;5620:74;;793:29756;5620:74;;;;793:29756;5620:74;;;;793:29756;;5620:74;793:29756;;;;;5620:74;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17140:9;793:29756;;;;;;;;;;;17192:5;793:29756;;17213:21;;;;793:29756;17236:20;793:29756;17236:20;;793:29756;;;;;;;;;17192:65;;;793:29756;17192:65;;793:29756;;;;;;17192:65;;793:29756;17192:65;;;;;;;;;793:29756;17192:65;;;793:29756;17278:15;;:30;793:29756;;;;;;;;;;;;;;;17373:73;;793:29756;17373:73;;793:29756;;;;;;17373:73;;;;;;;793:29756;17373:73;;;793:29756;-1:-1:-1;17479:13:26;793:29756;;;-1:-1:-1;;;17479:86:26;;793:29756;17479:86;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;17479:86;;;;;;;793:29756;17479:86;;;793:29756;17578:12;17479:13;17578:12;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;17644:327;;;793:29756;;;;17644:327;;17278:15;;793:29756;;17644:327;;;793:29756;;;17644:327;;;793:29756;;;;17644:327;;793:29756;;;;17644:327;;;793:29756;;;;;17644:327;;793:29756;;;;;;17984:9;793:29756;;;;;;;;;;;;;;;;;;;;;;17213:21;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;18071:18;;793:29756;-1:-1:-1;18045:108:26;;793:29756;18045:108;793:29756;;;17213:21;793:29756;;;;17479:86;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;17479:86;;;;;;;;;17373:73;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;;17373:73;;793:29756;17373:73;;;;;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;17192:65;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;17192:65;;;;;;;;793:29756;;;;;;;:::i;:::-;;;;;;21143:14;793:29756;;;;;;;;;;;;;21201:20;;;793:29756;;21193:68;21201:25;;;21193:68;:::i;:::-;21296:18;;;793:29756;-1:-1:-1;;;;;793:29756:26;21296:18;793:29756;;21282:10;:32;793:29756;;;;;21412:61;;;793:29756;;;;;;;;;;;;;;;21881:74;;793:29756;;;;21747:30;;21412:61;793:29756;;;;21412:61;;793:29756;;21412:61;;;;;;:::i;:::-;793:29756;21402:72;;793:29756;;;;;;;;:::i;:::-;;;;21517:145;;;793:29756;;;;21517:145;;793:29756;;;;;;21675:14;793:29756;;;;;;;;;;;;;;;;;;21747:30;793:29756;;;21816:48;;;;793:29756;;;;;;;;;;;21816:48;;;;;:::i;:::-;793:29756;21881:6;793:29756;;;21201:20;793:29756;;;;;;;;;;;;;;21881:74;;793:29756;21881:74;;;:::i;:::-;;;;;;;;;;;793:29756;22004:77;793:29756;;;;;;;;21201:20;793:29756;;;;;;;;;;;;;;;;;;;22004:77;793:29756;21881:74;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;21881:74;;;;;;;;;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;5463:48;793:29756;;;;;;;;5463:48;793:29756;5463:48;;793:29756;5463:48;;;;793:29756;;5463:48;;793:29756;;5463:48;;793:29756;5463:48;;;793:29756;5463:48;;;793:29756;5463:48;;;793:29756;5463:48;;;;793:29756;5463:48;;;;793:29756;5463:48;;;;793:29756;5463:48;793:29756;5463:48;;;;793:29756;5463:48;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;-1:-1:-1;793:29756:26;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;1790:8:0;793:29756:26;;1768:10:0;:31;1764:69;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28995:19;;793:29756;;28984:40;;;;;;;;793:29756;;;;;28984:40;;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;793:29756:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;29178:54;;793:29756;;;;29178:54;;;793:29756;29178:54;;793:29756;;;;;;;:::i;:::-;;;;;;;;;29282:14;793:29756;;;;;;;;;;29353:14;793:29756;;;;;29388:21;;793:29756;;;;;;;;29423:19;;;;;793:29756;29462:27;;;793:29756;-1:-1:-1;;;;;793:29756:26;;;;;;;;29525:24;;:69;;;;793:29756;29522:149;;;793:29756;;;;;;29778:21;;793:29756;;;;29767:44;;793:29756;;;;29767:44;793:29756;29767:44;;793:29756;:::i;:::-;29824:19;;793:29756;;;29813:41;;793:29756;;;;;;;29813:41;;;793:29756;;;;;;;;29813:41;;29688:167;29813:41;;793:29756;29813:41;;793:29756;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;29688:167;;;793:29756;29522:149;29611:21;;793:29756;;-1:-1:-1;;793:29756:26;;;;;29522:149;;;29525:69;29553:41;;;;29525:69;;;793:29756;;;;-1:-1:-1;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;793:29756:26;;;;;;;;-1:-1:-1;793:29756:26;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:69:0;793:29756:26;;-1:-1:-1;;;1808:25:0;;1768:10;793:29756:26;1808:25:0;;793:29756:26;;;1808:25:0;793:29756:26;;;;;;-1:-1:-1;;793:29756:26;;;;-1:-1:-1;;;;;793:29756:26;;:::i;:::-;;;;931:54;793:29756;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;-1:-1:-1;;;;;793:29756:26;;:::i;:::-;;-1:-1:-1;;;;;793:29756:26;;28590:31;793:29756;;;28590:31;793:29756;;;;;;;;;;;:::i;:::-;6330:13;;;793:29756;;6414:19;;;793:29756;;;6503:18;;793:29756;;6621:55;793:29756;6621:55;793:29756;6581:9;793:29756;;6581:9;:::i;:::-;793:29756;;;;;;;;;;6621:5;793:29756;;;;;;;;;;;;;;;6621:55;;793:29756;6621:55;;793:29756;;;;;;;;;;;;;;;;;;6621:55;;;;;;;;;;793:29756;6621:55;;;793:29756;6892:8;;793:29756;;;;;;;;;;;;;;;6969:37;;;;:::i;:::-;7032:35;;;;;:::i;:::-;7071:1;793:29756;;;;;;7071:1;793:29756;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;7415:81;793:29756;6714:534;793:29756;;;7076:3;793:29756;;;;;6621:55;6714:534;;793:29756;6714:534;793:29756;6714:534;;793:29756;;6714:534;;;793:29756;6714:534;;;793:29756;;6714:534;;793:29756;6714:534;;;793:29756;;;6714:534;;793:29756;;6714:534;;;793:29756;;6714:534;;;793:29756;;6714:534;;;793:29756;;6714:534;;;793:29756;;6714:534;;;793:29756;;;;;7261:9;6621:55;793:29756;;6714:534;793:29756;;;;;;;;6621:55;6714:534;;793:29756;;;;;;6714:534;;793:29756;;;;;6714:534;;;793:29756;;;;;6714:534;;;793:29756;;;;;;6714:534;;793:29756;7071:1;793:29756;;;6714:534;;;793:29756;;;;;;6714:534;;793:29756;;;;;6714:534;;;793:29756;;;;;6714:534;;;793:29756;;;;;6714:534;;;793:29756;;;;;6714:534;;;793:29756;6621:5;793:29756;;;6714:534;793:29756;;;;;:::i;:::-;;;:::i;:::-;;;;;;;7261:9;6621:55;793:29756;7324:72;793:29756;;;;;7324:37;;793:29756;7365:30;;793:29756;7324:72;;:::i;:::-;793:29756;;;7261:9;6621:55;793:29756;;;;;7466:29;793:29756;;;;;;;6621:55;793:29756;;;;;;;6714:534;793:29756;;;7415:81;793:29756;;;;;;;;;;;;;6621:55;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;6621:55;;;;;;;-1:-1:-1;6621:55:26;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;:::i;:::-;;;;;;23612:9;793:29756;;;;;;23671:14;793:29756;;;;;;;;;;;;;;23751:18;;;;793:29756;;;;;;;;;;;23737:10;:32;:55;;;;793:29756;;;;;;23876:34;23868:64;23876:34;;;23868:64;:::i;:::-;23951:21;;;793:29756;;;;;;;;:::i;:::-;;23951:49;;793:29756;;24070:24;;;793:29756;24098:20;;;;793:29756;24070:48;;:88;;;;793:29756;24070:161;;;;793:29756;24067:1134;;;793:29756;;;;;24272:5;793:29756;;;;;;;;;;;;24272:44;;;793:29756;24272:44;;793:29756;24272:44;;;;;;;24333:48;793:29756;;;;24272:44;;;24067:1134;793:29756;;;24341:16;24333:48;:::i;:::-;24398:24;793:29756;;-1:-1:-1;;;;;;793:29756:26;;;;;;;-1:-1:-1;;;24520:35:26;;24549:4;793:29756;24520:35;;793:29756;24520:35;793:29756;;;;24520:35;;;;;;;793:29756;24520:35;;;24067:1134;24558:18;793:29756;24558:18;;793:29756;;;24520:56;;;793:29756;;;;;;-1:-1:-1;;;24667:59:26;;793:29756;;;-1:-1:-1;;;;;793:29756:26;;24667:59;;793:29756;;;;;;;;;;;;;-1:-1:-1;793:29756:26;;;;24667:59;;;;;;;;;;24067:1134;24776:20;;24748:89;24776:20;25264:41;24776:20;793:29756;24776:20;25264;24776;;;;;;793:29756;;;;;;;;;;;;;;;;;;;;;;;24748:89;24067:1134;793:29756;;;;;;;;;25264:20;793:29756;;;;25287:18;;793:29756;25264:41;;:::i;:::-;793:29756;;;24667:59;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;25264:41;793:29756;25264:20;793:29756;24748:89;793:29756;;;;;:::i;:::-;;24667:59;;;;;;;;;;;;;;;;;24520:35;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;24520:35;;;;;;;;24272:44;;;;;;793:29756;24272:44;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;24067:1134;24963:19;;25264:41;24963:19;;25264:20;24963:19;;;;793:29756;24963:19;;;24873:316;24963:19;;;;793:29756;25025:29;;;;793:29756;;25097:27;;;;793:29756;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;24873:316;24067:1134;;24070:161;24162:27;;;;;793:29756;;24162:41;;:69;;24070:161;24162:69;24207:19;;;;793:29756;24207:24;;24070:161;;:88;24134:19;;;;793:29756;24134:24;;24070:88;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;23737:55;793:29756;;23787:5;793:29756;;23737:10;23773:19;23737:55;;793:29756;;;;;;-1:-1:-1;;793:29756:26;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;30465:61;793:29756;30487:5;793:29756;;30473:10;:19;30465:61;:::i;:::-;793:29756;;;;;;27010:9;793:29756;;;;;;27050:12;;;793:29756;;;;;:::i;:::-;27066:21;27050:37;;:77;;;;;793:29756;;;;;27366:39;27296:24;27239:30;27160:46;30487:5;27160:24;;793:29756;27187:19;;;793:29756;27160:46;;:::i;:::-;793:29756;27253:16;;793:29756;27239:30;;:::i;:::-;27296:24;;793:29756;27296:39;;;;;:::i;:::-;27366;;:::i;:::-;27356:49;;793:29756;;27459:66;27467:36;;;27459:66;:::i;:::-;793:29756;;;27187:19;793:29756;;;;;;;;;;;;27560:46;;;793:29756;27560:46;;793:29756;27560:46;;;;;;;27619:48;793:29756;;;;27560:46;;;793:29756;;;27627:16;27619:48;:::i;:::-;27296:24;793:29756;;-1:-1:-1;;;;;;793:29756:26;;;;;;;-1:-1:-1;;;27727:35:26;;27756:4;793:29756;27727:35;;793:29756;27727:35;793:29756;;;;27727:35;;;;;;;;793:29756;27727:35;;;793:29756;27727:44;;793:29756;;27187:19;793:29756;;;-1:-1:-1;;;27783:43:26;;793:29756;;-1:-1:-1;;;;;793:29756:26;;27783:43;;793:29756;;;;;;;;;;;-1:-1:-1;793:29756:26;;;;27783:43;;;;;;;;;;793:29756;27783:43;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;;;:::i;27783:43::-;;;;;27727:35;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;;;27727:35;;;;;;;;27560:46;;;;;;793:29756;27560:46;;;;;;:::i;:::-;;;;;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;27050:77;793:29756;;;;;:::i;:::-;27091:36;27050:77;;;793:29756;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;5701:113;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;5701:113;793:29756;5701:113;;793:29756;5701:113;;;;793:29756;;;;;;5701:113;793:29756;5701:113;;793:29756;;5701:113;793:29756;5701:113;;793:29756;;5701:113;;;793:29756;5701:113;;;;793:29756;5701:113;;793:29756;5701:113;;;793:29756;;5701:113;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;5523:85;793:29756;;;;;;;;;;;;;;;;;5523:85;;;;793:29756;5523:85;;;;793:29756;5523:85;;;793:29756;;5523:85;;793:29756;;;;;;;5523:85;;;;;793:29756;;5523:85;;;793:29756;5523:85;;;;793:29756;5523:85;;;;793:29756;5523:85;;;;;793:29756;;5523:85;;;;793:29756;;5523:85;;;;;793:29756;5523:85;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5523:85;793:29756;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;19479:14;793:29756;;;;;;;;;;;;;;;;19479:14;793:29756;;;;;;;;;;;;;19637:20;;;;793:29756;19629:68;793:29756;;19637:25;;19629:68;:::i;:::-;19716:18;;;793:29756;-1:-1:-1;;;;;793:29756:26;19716:18;19708:80;;793:29756;;19738:10;19716:32;19708:80;:::i;:::-;19716:18;19807:27;;19738:10;19799:89;19738:10;793:29756;;;;19807:41;19799:89;:::i;:::-;793:29756;19907:27;;793:29756;19938:30;;;;793:29756;19907:61;;;;793:29756;;20091:33;20127:29;20091:33;:65;:33;;793:29756;20127:29;;793:29756;20091:65;;:::i;:::-;793:29756;;;;;;;;20223:1;793:29756;;;;;;;20245:49;;:90;;;;;793:29756;;;;;;20492:21;20908:109;20492:21;;;;793:29756;20492:21;;;;;;20127:29;793:29756;;;;;;;;;;;;;:::i;:::-;19738:10;793:29756;;20223:1;20588:184;;;793:29756;;;;;20588:184;;793:29756;;;;;;;20785:14;793:29756;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;;;;20885:4;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20908:109;793:29756;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;20245:90;20298:37;;;-1:-1:-1;20245:90:26;;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;-1:-1:-1;;;;;793:29756:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;25499:9;793:29756;;;;;;;;25535:10;25544:1;25551:24;;;;;25678:20;;;;25531:1346;25577:3;793:29756;;25547:28;;;;;793:29756;;;25631:14;793:29756;;;;;;;;;;;;;;;;;;;25733:1;;;;25701:28;;25678:51;25701:28;;;793:29756;25678:51;;:::i;:::-;:56;25733:1;;25754:25;;25577:3;25754:25;;;;;;793:29756;;;;;;;;;;25825:19;;;;:21;793:29756;;25825:21;:::i;:::-;793:29756;;25870:23;;;793:29756;25870:28;;;;:109;;;25675:1187;25867:628;;;25675:1187;;;;;;;25577:3;:::i;:::-;25535:10;;25867:628;793:29756;;26069:14;793:29756;;;;;;;;;;;;;26171:28;25544:1;26171:28;;793:29756;;;;;;;;;;;;;;;26307:31;;793:29756;;;;;;;;26364:31;793:29756;;;;;;26445:28;:30;793:29756;;26445:30;:::i;:::-;793:29756;;25867:628;;;;;;;;25870:109;25902:31;;793:29756;-1:-1:-1;;;;;793:29756:26;25902:45;;;;:77;;25870:109;;;;;25902:77;;;;;;25675:1187;793:29756;;;;;;;;;;;;26552:5;793:29756;;26580:21;;;793:29756;;;;;;;;;;;26552:72;;793:29756;26552:72;;793:29756;;;;;26552:72;;;;;;793:29756;26552:72;;;25675:1187;25577:3;26646:15;;;:29;26643:204;;25675:1187;;25577:3;:::i;26643:204::-;26700:25;;25544:1;793:29756;;;;;;;;26778:47;793:29756;;;25544:1;793:29756;;26778:47;26643:204;;;26552:72;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;25577:3;793:29756;;26552:72;;;;;;;793:29756;;;;;;-1:-1:-1;;793:29756:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;857:56:0;;;:100;;;;793:29756:26;;;;;;;857:100:0;-1:-1:-1;;;917:40:0;;-1:-1:-1;857:100:0;;;793:29756:26;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;793:29756:26;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;793:29756:26;;;;:::o;:::-;;;;-1:-1:-1;;;;;793:29756:26;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;793:29756:26;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;793:29756:26;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;:::o;:::-;-1:-1:-1;;;;;793:29756:26;;;;;;-1:-1:-1;;793:29756:26;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;793:29756:26;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;793:29756:26;;;;;;;;;:::o;:::-;-1:-1:-1;;793:29756:26;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::o;10940:3249::-;;;-1:-1:-1;793:29756:26;;;;11177:9;793:29756;;;;;11236:14;793:29756;;;;;;;;;;;;;11292:12;11308:18;793:29756;11292:12;;;793:29756;;;;;:::i;:::-;11292:34;793:29756;;11373:20;;;793:29756;;;;11373:42;793:29756;;11292:12;11482:21;;793:29756;;;;;;;;:::i;:::-;11373:20;11482:51;;:100;;;;;10940:3249;11482:153;;;;10940:3249;793:29756;;;;11683:23;;;11308:18;11680:221;;793:29756;;;;;11932:5;793:29756;;;11373:20;11960:21;;793:29756;;;;;;;;;;;11932:64;;;;;793:29756;;;;;;11932:64;;;;;;;;;;;11680:221;12012:15;;;:29;12009:621;12012:29;;;12073;12012:15;;12073:29;:::i;:::-;793:29756;;12057:46;793:29756;12123:16;12120:290;;12009:621;;;;793:29756;;;;;12869:18;;;793:29756;;;12869:18;793:29756;;12950:12;793:29756;12950:12;13020:24;;793:29756;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;12670:386;;793:29756;12012:15;793:29756;12670:386;;793:29756;12838:10;12670:386;;;793:29756;12670:386;;;793:29756;;12670:386;;793:29756;12670:386;;;793:29756;11308:18;793:29756;12670:386;;793:29756;12670:386;;;;793:29756;13100:20;;;793:29756;13072:48;;;;:77;;;12009:621;13069:401;;12009:621;793:29756;;;12670:386;793:29756;;;;;;13512:18;;793:29756;;12670:386;;793:29756;;;;;;12670:386;;793:29756;12670:386;793:29756;;;;;;;;12670:386;;;793:29756;;12670:386;793:29756;;;;;;;;12670:386;;;793:29756;;;;;;;12670:386;;793:29756;12670:386;793:29756;;;12670:386;;;793:29756;;;;;;12670:386;;793:29756;;;;;;;12670:386;793:29756;;;;;;13512:18;;793:29756;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;13543:7;793:29756;-1:-1:-1;;;13543:52:26;;793:29756;;;;-1:-1:-1;;;;;793:29756:26;;13543:52;-1:-1:-1;;12838:10:26;13543:52;12838:10;;13543:52;;;;:::i;:::-;;;;;;;;;;;;;;12009:621;793:29756;;;14117:64;793:29756;;;;14117:64;793:29756;;;;13611:48;13608:245;;12009:621;793:29756;13100:20;793:29756;;13100:20;;793:29756;13866:48;:98;;;12009:621;13863:179;;12009:621;14087:11;;;;;:::i;:::-;793:29756;;;14117:64;;;;793:29756;;;;;;;;;;;;;;;;;;14117:64;;;;10940:3249::o;13863:179::-;793:29756;;-1:-1:-1;;793:29756:26;11373:20;793:29756;;;13863:179;;;13866:98;793:29756;11308:18;793:29756;;;;;;;:::i;:::-;13919:45;13866:98;;13608:245;793:29756;;-1:-1:-1;;793:29756:26;13100:20;793:29756;;;13743:19;;793:29756;13740:102;;13608:245;;;;13740:102;13814:11;;;;:::i;:::-;13740:102;;13543:52;;793:29756;13543:52;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;13543:52;;;;;;;;;;-1:-1:-1;13543:52:26;;;793:29756;;;;;;;;;;13069:401;793:29756;;;;;11932:5;793:29756;;11960:21;11373:20;11960:21;;793:29756;13179:72;;;;;793:29756;;;;;;;;;;;;;;;13179:72;;11932:64;13179:72;;793:29756;;;;;13179:72;;;;;;;;13069:401;-1:-1:-1;11932:5:26;793:29756;11373:20;11960:21;;793:29756;13100:20;;;793:29756;;;-1:-1:-1;;;13296:73:26;;11932:64;13296:73;;793:29756;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;13296:73;;;;;;;;;;;13069:401;793:29756;;;;13386:11;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;12670:386;;793:29756;11308:18;793:29756;;;;12670:386;;793:29756;11373:20;793:29756;;;13100:20;793:29756;;;;;;;12670:386;;;793:29756;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;11932:64;793:29756;;;;;;;;12670:386;;;793:29756;;;;;;;;;;12670:386;;793:29756;12869:18;793:29756;;;12670:386;;;793:29756;12950:12;793:29756;;;;;;;12670:386;;793:29756;;;;;;;;;;;;;;;12670:386;;;793:29756;;;;13069:401;;;;13296:73;;;;793:29756;13296:73;;793:29756;13296:73;;;;;;793:29756;13296:73;;;:::i;:::-;;;793:29756;;;;;13296:73;;;;;;;-1:-1:-1;13296:73:26;;;793:29756;;;;;;;;;13179:72;-1:-1:-1;;;;;793:29756:26;;;;;;13179:72;;;793:29756;-1:-1:-1;;;793:29756:26;;;11932:64;793:29756;;;;13179:72;793:29756;;;;;;;;;13179:72;793:29756;;;13072:77;13124:20;;;;793:29756;13124:25;13072:77;;793:29756;-1:-1:-1;;;793:29756:26;;;11932:64;793:29756;;;;12120:290;11932:5;793:29756;11373:20;11960:21;;793:29756;12242:11;793:29756;;;-1:-1:-1;;;12175:79:26;;11932:64;12175:79;;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;12175:79;;;;;;;;;;12120:290;12380:13;793:29756;;;12242:11;793:29756;12280:24;793:29756;;;;;;12280:24;12380:13;;;:::i;:::-;12120:290;;;;12175:79;;;793:29756;12175:79;;793:29756;12175:79;;;;;;793:29756;12175:79;;;:::i;:::-;;;793:29756;;;;;12380:13;793:29756;;12175:79;;793:29756;;;;12175:79;;;-1:-1:-1;12175:79:26;;;793:29756;;;;;;;;;12009:621;12454:20;12604:13;12454:20;;;;793:29756;;12440:34;793:29756;12508:24;793:29756;;;;;;12508:24;12604:13;;;:::i;:::-;12009:621;;11932:64;;;793:29756;11932:64;;793:29756;11932:64;;;;;;793:29756;11932:64;;;:::i;:::-;;;793:29756;;;;;11932:64;;;;;;-1:-1:-1;11932:64:26;;11680:221;11799:24;;;793:29756;11778:45;;793:29756;;;11856:33;11680:221;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;11482:153;11611:24;793:29756;;;;;:::i;:::-;11586:49;11482:153;;;:100;793:29756;;;;;:::i;:::-;11308:18;11537:45;;11482:100;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;14197:2216;;-1:-1:-1;793:29756:26;;;;;;14352:14;793:29756;;;;;;;;;;;;;;;;;;14423:9;793:29756;;;;;;;;14483:24;;;793:29756;-1:-1:-1;793:29756:26;;;14572:21;;;793:29756;;;;;:::i;:::-;14572:49;;;;;:103;;;14197:2216;793:29756;;;;-1:-1:-1;;;;;793:29756:26;;;14775:36;;793:29756;;;;14872:5;793:29756;;;;;;;;14872:46;;;;;;;;;;793:29756;;;14872:46;;;;;;;;;;14931:48;793:29756;;;;14872:46;;;793:29756;;;14939:16;14931:48;:::i;:::-;14992:26;793:29756;;-1:-1:-1;;;;;;793:29756:26;;;;;15055:20;;;793:29756;15039:36;;793:29756;;;;-1:-1:-1;;;15183:32:26;;15204:10;15183:32;;;793:29756;15183:32;793:29756;15183:32;793:29756;15183:32;;;;;;;;;;;;;;;14197:2216;15183:47;;793:29756;;;;;;;;;;;;;;15371:47;;15204:10;15371:47;;;793:29756;15412:4;793:29756;;;;15371:47;;;;;;;;;;;;;;14197:2216;15371:63;;793:29756;;-1:-1:-1;15507:20:26;;;793:29756;14872:46;;14992:26;15575:24;;793:29756;;;15602:24;;;;793:29756;15575:51;;;;;:::i;:::-;793:29756;;14992:26;793:29756;;;-1:-1:-1;;;15655:76:26;;;15204:10;15655:76;;;793:29756;;;15412:4;793:29756;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15655:76;;;;;;;;;;;;;;;;;;15504:863;793:29756;15799:39;793:29756;15602:24;793:29756;14992:26;793:29756;;;14872:5;793:29756;;15602:24;;793:29756;15799:39;;:::i;:::-;793:29756;;15746:94;;;15204:10;15746:94;;;793:29756;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;15746:94;;;;;;;;;;;;15504:863;;;;16379:24;15504:863;;16379:24;:26;793:29756;;16379:26;:::i;:::-;793:29756;;14197:2216::o;15746:94::-;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;;;16379:24;793:29756;;:::i;:::-;;15746:94;;;;;793:29756;;;15746:94;;;;;;793:29756;;;;;;;;15655:76;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;15799:39;793:29756;;;;;;;;;:::i;:::-;;15655:76;;;;;;;;;793:29756;;;;;;;;;15504:863;15970:39;14992:26;15899:24;;793:29756;15926:24;793:29756;;15926:24;;793:29756;15899:51;793:29756;;15899:51;;;:::i;:::-;793:29756;;15970:39;;:::i;:::-;:43;793:29756;;14992:26;793:29756;;;;;-1:-1:-1;;;16047:76:26;;;15204:10;16047:76;;;793:29756;;;15412:4;793:29756;;;;;;;;;;;;;;;;;;;16047:76;;;793:29756;16047:76;;793:29756;;;;;;16047:76;;;;;;;;;;;;;;;;15967:389;793:29756;16195:39;793:29756;;14992:26;793:29756;;;14872:5;793:29756;;;;16195:39;;:::i;:::-;793:29756;;16142:94;;;15204:10;16142:94;;;793:29756;;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;16142:94;;;;;;;;;;;;;15967:389;;;;16379:24;15967:389;15504:863;;16142:94;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;;;16379:24;793:29756;;:::i;:::-;;16142:94;;;;;;;;;;16047:76;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;16195:39;793:29756;;;;;;;;;:::i;:::-;;16047:76;;;;;;;;15967:389;14992:26;793:29756;;;-1:-1:-1;;;16276:64:26;;15204:10;16276:64;;;793:29756;;;15412:4;793:29756;;;;;;;;;;;;;-1:-1:-1;793:29756:26;;;;;;;;;;;;16276:64;793:29756;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;15371:47;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;;;15371:47;;;;;;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;15183:32;;;;;;;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;;;;15183:32;;;793:29756;;;;15183:32;;;;;;793:29756;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;14872:46;;;;;;;;;;;;;:::i;:::-;;;;;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;14572:103;14650:25;793:29756;;;;;:::i;:::-;14625:50;;14572:103;;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;16421:624;;16956:81;16421:624;16956:81;17006:30;-1:-1:-1;793:29756:26;;;16535:9;793:29756;;;;;;16594:14;793:29756;;;;;;;;;;16669:52;793:29756;;;16669:24;;;;;793:29756;16696:25;;793:29756;16669:52;;:::i;:::-;16758:18;;;793:29756;16738:38;;;;;16792:30;;;;;793:29756;16735:204;17006:30;793:29756;;;16956:81;;;;793:29756;;;;;;;;;;;;;;;;;;16735:204;16890:37;;;;:::i;:::-;16857:30;;;793:29756;16735:204;;793:29756;;;;:::o;:::-;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;21907:20;793:29756;;-1:-1:-1;;;;;793:29756:26;;;;;;;;;;;;;;;;;;;;:::i;22097:1384::-;;-1:-1:-1;793:29756:26;;;;;;22207:14;793:29756;;;;;;;;;;;;;;;22273:24;;;;793:29756;22301:20;;;793:29756;22273:48;793:29756;;;;22386:12;;;793:29756;22402:4;793:29756;;;;;;;;22386:20;793:29756;;22480:93;;;;22097:1384;22477:997;;;22666:20;;;22764:30;22666:20;;;22819:79;22666:20;;22626:61;22666:20;;;793:29756;;22626:61;793:29756;;22626:61;;;;;;;;793:29756;;;;;;;;;;;;;;;;;22626:61;793:29756;22616:72;;22764:30;;793:29756;;;22737:65;;;;793:29756;;;;;;;;;;;22737:65;;;;;:::i;:::-;793:29756;;;;;;22819:6;793:29756;;;22666:20;793:29756;;;;;;;;;;;;;;22819:79;;;;;;:::i;:::-;;;;;;;;;;;;;22477:997;;;22097:1384::o;22819:79::-;;;;;;;;;;;;:::i;:::-;;;793:29756;;;;22477:997;22097:1384::o;22819:79::-;;;;;;793:29756;;;;;;;;22477:997;22964:76;;;;;;;;22477:997;22961:502;;;22477:997;;;;;;;22097:1384::o;22961:502::-;23323:27;793:29756;;;23113:14;793:29756;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;22301:20;22402:4;793:29756;;;;;;;;;;;;;;;;;;;;22207:14;793:29756;;;;;;;;;;;;;;23323:27;;793:29756;-1:-1:-1;;;;;793:29756:26;;;;;;;;23422:25;793:29756;;;;;;;;22961:502;;;;;;;;22964:76;793:29756;23016:19;;;793:29756;23016:24;;22964:76;;;22480:93;-1:-1:-1;22532:27:26;;;793:29756;-1:-1:-1;;;;;793:29756:26;22532:41;;22480:93;;793:29756;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30015:16:26;;793:29756;;;;;;;:::i;:::-;;;;;;;;;30015:16;;;;793:29756;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;793:29756:26;;;-1:-1:-1;;793:29756:26;;;;;;;-1:-1:-1;793:29756:26;;-1:-1:-1;;793:29756:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:29756:26;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3337200","executionCost":"infinite","totalCost":"infinite"},"external":{"addRWAColateral(uint256,uint256)":"infinite","addReceiver(address)":"24703","addSender(address)":"27137","addSourceChain(uint64)":"27206","addTitleAsColateral(uint256,uint256,uint256,uint256)":"infinite","allTitles(uint256)":"28206","buyTitle(uint64,bool,address)":"infinite","ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"infinite","colateralInfos(uint256,uint256)":"7100","createTitle(uint256,uint256,uint256,uint256)":"infinite","drawInfos(uint256,uint256)":"17710","getLastReceivedMessageDetails()":"infinite","getRouter()":"infinite","monthlyVRFWinner(uint256)":"infinite","payInstallment(uint256,uint256,uint256,address)":"infinite","protocolWithdraw(uint256,address)":"infinite","receiveVRFRandomNumber(uint256)":"infinite","refundColateral(uint256,uint256)":"infinite","removeSender(address)":"27109","removelistSourceChain(uint64)":"27263","selectorVRF(uint256,uint256,uint256)":"19637","supportsInterface(bytes4)":"271","titleSoldInfos(uint256,uint256)":"28184","updateTitleStatus(uint256)":"infinite","verifyLatePayments(uint256,uint256)":"infinite","whitelistedSenders(address)":"2487","whitelistedSourceChains(uint64)":"2685","winnerWithdraw(uint256,uint256,address)":"infinite"},"internal":{"_ccipReceive(struct Client.Any2EVMMessage memory)":"infinite","receiveInstallment(uint256,uint256,uint256,contract IERC20)":"infinite","updateValueOfEnsurance(uint256,uint256)":"infinite"}},"methodIdentifiers":{"addRWAColateral(uint256,uint256)":"8f9fce70","addReceiver(address)":"69d83ed1","addSender(address)":"b697f531","addSourceChain(uint64)":"c5ec1c7a","addTitleAsColateral(uint256,uint256,uint256,uint256)":"2d7c0b7f","allTitles(uint256)":"8a12312c","buyTitle(uint64,bool,address)":"ba658a44","ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"85572ffb","colateralInfos(uint256,uint256)":"ad3b6da3","createTitle(uint256,uint256,uint256,uint256)":"643233e5","drawInfos(uint256,uint256)":"ab922631","getLastReceivedMessageDetails()":"263596a5","getRouter()":"b0f479a1","monthlyVRFWinner(uint256)":"9beaf731","payInstallment(uint256,uint256,uint256,address)":"c39622f8","protocolWithdraw(uint256,address)":"4c67469c","receiveVRFRandomNumber(uint256)":"d0ade9d5","refundColateral(uint256,uint256)":"58a15a2e","removeSender(address)":"b2f87643","removelistSourceChain(uint64)":"ff46ed53","selectorVRF(uint256,uint256,uint256)":"4991126d","supportsInterface(bytes4)":"01ffc9a7","titleSoldInfos(uint256,uint256)":"31ae0df6","updateTitleStatus(uint256)":"d762a160","verifyLatePayments(uint256,uint256)":"23478654","whitelistedSenders(address)":"272efc69","whitelistedSourceChains(uint64)":"7dc91a02","winnerWithdraw(uint256,uint256,address)":"4facbacb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmountLate\",\"type\":\"uint256\"}],\"name\":\"AmountLateWithInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithInterests\",\"type\":\"uint256\"}],\"name\":\"AmountToPay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_drawNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_idOfColateralTitle\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_idOfColateralContract\",\"type\":\"uint256\"}],\"name\":\"ColateralTitleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_drawSelected\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_fujiReceiver\",\"type\":\"address\"}],\"name\":\"CreatingPermission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_temporaryEnsurance\",\"type\":\"address\"}],\"name\":\"EnsuranceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_valueOfEnsurance\",\"type\":\"uint256\"}],\"name\":\"EnsuranceValueNeededUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_installmentsPaid\",\"type\":\"uint256\"}],\"name\":\"InstallmentPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_installmentsPaid\",\"type\":\"uint256\"}],\"name\":\"LastInstallmentPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"}],\"name\":\"MessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_drawNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_titleValue\",\"type\":\"uint256\"}],\"name\":\"MonthlyWinnerPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_drawNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_randomValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_selectedContractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_winner\",\"type\":\"address\"}],\"name\":\"MonthlyWinnerSelected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Horizon.MyTitleWithdraw\",\"name\":\"myTitleStatus\",\"type\":\"uint8\"}],\"name\":\"MyTitleStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_investmentValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_protocolAddress\",\"type\":\"address\"}],\"name\":\"NewInvestmentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_titleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_scheduleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_monthlyValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_titleValue\",\"type\":\"uint256\"}],\"name\":\"NewTitleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"NewTitleSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nextDraw\",\"type\":\"uint256\"}],\"name\":\"NextDraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lateInstallments\",\"type\":\"uint256\"}],\"name\":\"PaymentIsLate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"PaymentLateNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_installmentsPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_colateralTitleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_colateralReceiptAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Horizon.MyTitleWithdraw\",\"name\":\"myTitleStatus\",\"type\":\"uint8\"}],\"name\":\"ThereAreSomePendencies\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_titlesAvailableForNextDraw\",\"type\":\"uint256\"}],\"name\":\"ThisTitleHasBeenCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Horizon.TitleStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"TitleStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomValue\",\"type\":\"uint256\"}],\"name\":\"VRFAnswer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"addRWAColateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiverAddress\",\"type\":\"address\"}],\"name\":\"addReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"addSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_sourceChainSelector\",\"type\":\"uint64\"}],\"name\":\"addSourceChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_idOfColateralTitle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_idOfColateralContract\",\"type\":\"uint256\"}],\"name\":\"addTitleAsColateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"titleId\",\"type\":\"uint256\"}],\"name\":\"allTitles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"openSellingDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeSellingDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentSchedule\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextDrawNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"titleValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"installments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"monthlyInvestiment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfTitlesSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValueReceived\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValuePaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"titleCanceled\",\"type\":\"uint256\"},{\"internalType\":\"enum Horizon.TitleStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_titleId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"withdrawPeriod\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"buyTitle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"colateralInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"colateralOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"titleIdOfColateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractIdOfColateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_opening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_closing\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_participants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createTitle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drawNumber\",\"type\":\"uint256\"}],\"name\":\"drawInfos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"idTitle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drawNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drawDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randomNumberVRF\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"selectedContractID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastReceivedMessageDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"text\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"}],\"name\":\"monthlyVRFWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_installmentNumber\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"payInstallment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"protocolWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"}],\"name\":\"receiveVRFRandomNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"refundColateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"removeSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_sourceChainSelector\",\"type\":\"uint64\"}],\"name\":\"removelistSourceChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drawNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentOrder\",\"type\":\"uint256\"}],\"name\":\"selectorVRF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"installmentNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentDelay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"installmentsPaid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"}],\"name\":\"titleSoldInfos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"contractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"titleValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"installments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"monthlyValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodLocked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"titleOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"installmentsPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drawSelected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"colateralId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"colateralTitleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colateralRWAAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"valueOfEnsuranceNeeded\",\"type\":\"uint256\"},{\"internalType\":\"enum Horizon.MyTitleWithdraw\",\"name\":\"myTitleStatus\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"paid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_titleId\",\"type\":\"uint256\"}],\"name\":\"updateTitleStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"}],\"name\":\"verifyLatePayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedSenders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"whitelistedSourceChains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idTitle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contractId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"}],\"name\":\"winnerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Horizon.sol\":\"Horizon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IAny2EVMMessageReceiver} from \\\"../interfaces/IAny2EVMMessageReceiver.sol\\\";\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\nimport {IERC165} from \\\"../../vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\\\";\\n\\n/// @title CCIPReceiver - Base contract for CCIP applications that can receive messages.\\nabstract contract CCIPReceiver is IAny2EVMMessageReceiver, IERC165 {\\n  address internal immutable i_router;\\n\\n  constructor(address router) {\\n    if (router == address(0)) revert InvalidRouter(address(0));\\n    i_router = router;\\n  }\\n\\n  /// @notice IERC165 supports an interfaceId\\n  /// @param interfaceId The interfaceId to check\\n  /// @return true if the interfaceId is supported\\n  function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\\n    return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId;\\n  }\\n\\n  /// @inheritdoc IAny2EVMMessageReceiver\\n  function ccipReceive(Client.Any2EVMMessage calldata message) external virtual override onlyRouter {\\n    _ccipReceive(message);\\n  }\\n\\n  /// @notice Override this function in your implementation.\\n  /// @param message Any2EVMMessage\\n  function _ccipReceive(Client.Any2EVMMessage memory message) internal virtual;\\n\\n  /////////////////////////////////////////////////////////////////////\\n  // Plumbing\\n  /////////////////////////////////////////////////////////////////////\\n\\n  /// @notice Return the current router\\n  /// @return i_router address\\n  function getRouter() public view returns (address) {\\n    return address(i_router);\\n  }\\n\\n  error InvalidRouter(address router);\\n\\n  /// @dev only calls from the set router are accepted.\\n  modifier onlyRouter() {\\n    if (msg.sender != address(i_router)) revert InvalidRouter(msg.sender);\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xcf5d0a5cd6ed0f6a9ed721b3e532c0504ed1ba3ab6d3567165876ceb4f23b084\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\n/// @notice Application contracts that intend to receive messages from\\n/// the router should implement this interface.\\ninterface IAny2EVMMessageReceiver {\\n  /// @notice Called by the Router to deliver a message.\\n  /// If this reverts, any token transfers also revert. The message\\n  /// will move to a FAILED state and become available for manual execution.\\n  /// @param message CCIP Message\\n  /// @dev Note ensure you check the msg.sender is the OffRampRouter\\n  function ccipReceive(Client.Any2EVMMessage calldata message) external;\\n}\\n\",\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\ninterface IRouterClient {\\n  error UnsupportedDestinationChain(uint64 destChainSelector);\\n  error InsufficientFeeTokenAmount();\\n  error InvalidMsgValue();\\n\\n  /// @notice Checks if the given chain ID is supported for sending/receiving.\\n  /// @param chainSelector The chain to check.\\n  /// @return supported is true if it is supported, false if not.\\n  function isChainSupported(uint64 chainSelector) external view returns (bool supported);\\n\\n  /// @notice Gets a list of all supported tokens which can be sent or received\\n  /// to/from a given chain id.\\n  /// @param chainSelector The chainSelector.\\n  /// @return tokens The addresses of all tokens that are supported.\\n  function getSupportedTokens(uint64 chainSelector) external view returns (address[] memory tokens);\\n\\n  /// @param destinationChainSelector The destination chainSelector\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return fee returns guaranteed execution fee for the specified message\\n  /// delivery to destination chain\\n  /// @dev returns 0 fee on invalid message.\\n  function getFee(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage memory message\\n  ) external view returns (uint256 fee);\\n\\n  /// @notice Request a message to be sent to the destination chain\\n  /// @param destinationChainSelector The destination chain ID\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return messageId The message ID\\n  /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\\n  /// the overpayment with no refund.\\n  function ccipSend(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage calldata message\\n  ) external payable returns (bytes32);\\n}\\n\",\"keccak256\":\"0x9899fab6a40f68408ddf153612c553f2441ea27770176bf71ccce22c40393286\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// End consumer library.\\nlibrary Client {\\n  struct EVMTokenAmount {\\n    address token; // token address on the local chain.\\n    uint256 amount; // Amount of tokens.\\n  }\\n\\n  struct Any2EVMMessage {\\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\\n    uint64 sourceChainSelector; // Source chain selector.\\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\\n    bytes data; // payload sent in original message.\\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\\n  }\\n\\n  // If extraArgs is empty bytes, the default is 200k gas limit and strict = false.\\n  struct EVM2AnyMessage {\\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\\n    bytes data; // Data payload\\n    EVMTokenAmount[] tokenAmounts; // Token transfers\\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\\n  }\\n\\n  // extraArgs will evolve to support new features\\n  // bytes4(keccak256(\\\"CCIP EVMExtraArgsV1\\\"));\\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\\n  struct EVMExtraArgsV1 {\\n    uint256 gasLimit; // ATTENTION!!! MAX GAS LIMIT 4M FOR BETA TESTING\\n    bool strict; // See strict sequencing details below.\\n  }\\n\\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `to`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `from` to `to` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\",\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n  /**\\n    * @dev Returns true if this contract implements the interface defined by\\n    * `interfaceId`. See the corresponding\\n    * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n    * to learn more about how these ids are created.\\n    *\\n    * This function call must use less than 30 000 gas.\\n    */\\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\",\"keccak256\":\"0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        _update(address(0), tokenId, _msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Strings} from \\\"../../../utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"../../../interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"../../../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 tokenId => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        _tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"contracts/Horizon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.9 <=0.8.20;\\r\\n\\r\\nimport {IRouterClient} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\\\";\\r\\nimport {CCIPReceiver} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\\\";\\r\\nimport {Client} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\\\";\\r\\nimport {HorizonS} from \\\"./HorizonS.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"./HorizonStaff.sol\\\";\\r\\nimport \\\"./HorizonVRF.sol\\\";\\r\\nimport \\\"./HorizonReceipt.sol\\\";\\r\\n\\r\\nerror SourceChainNotWhitelisted(uint64 sourceChainSelector);\\r\\nerror FailedToWithdrawEth(address owner, address target, uint256 value);\\r\\nerror SenderNotWhitelisted(address sender);\\r\\n\\r\\ncontract Horizon is CCIPReceiver{\\r\\n\\r\\n    /* CCIP */\\r\\n    bytes32 private lastReceivedMessageId;\\r\\n    bytes private lastReceivedText;\\r\\n    mapping(uint64 => bool) public whitelistedSourceChains;\\r\\n    mapping(address => bool) public whitelistedSenders;\\r\\n\\r\\n    uint titleId = 0;\\r\\n    uint amountToPay;\\r\\n    uint paymentDelay;\\r\\n    address fujiReceiver;\\r\\n    address owner;\\r\\n\\r\\n    event NewTitleCreated(uint _titleId, uint _scheduleId, uint _monthlyValue, uint _titleValue);\\r\\n    event TitleStatusUpdated(TitleStatus status);\\r\\n    event NewTitleSold(uint _contractId, address _owner);\\r\\n    event AmountToPay(uint amountWithInterests);\\r\\n    event InstallmentPaid(uint _idTitle, uint _contractId, uint _installmentsPaid);\\r\\n    event EnsuranceValueNeededUpdate(uint _idTitle, uint _contractId, uint _valueOfEnsurance);\\r\\n    event EnsuranceUpdated(address _temporaryEnsurance);\\r\\n    event NextDraw(uint _nextDraw);\\r\\n    event VRFAnswer(bool fulfilled, uint256[] randomWords, uint randomValue);\\r\\n    event MonthlyWinnerSelected(uint _idTitle, uint _drawNumber, uint _randomValue, uint _selectedContractId, address _winner);\\r\\n    event ColateralTitleAdded(uint _idTitle, uint _contractId, uint _drawNumber, uint _idOfColateralTitle, uint _idOfColateralContract);\\r\\n    event CreatingPermission(uint _idTitle, uint _contractId, uint _drawSelected, address _fujiReceiver);\\r\\n    event MonthlyWinnerPaid(uint _idTitle, uint _drawNumber, address _winner, uint _titleValue);\\r\\n    event MyTitleStatusUpdated(MyTitleWithdraw myTitleStatus);\\r\\n    event PaymentLateNumber(uint _i);\\r\\n    event AmountLateWithInterest(uint totalAmountLate);\\r\\n    event PaymentIsLate(uint lateInstallments);\\r\\n    event ThereAreSomePendencies(uint _installmentsPaid, uint _colateralTitleId, address _colateralReceiptAddress, address _nftAddress, MyTitleWithdraw myTitleStatus);\\r\\n    event LastInstallmentPaid(uint _installmentsPaid);\\r\\n    event NewInvestmentCreated(uint _investmentValue, address _protocolAddress);\\r\\n    event ThisTitleHasBeenCanceled(uint _titlesAvailableForNextDraw);\\r\\n    event MessageReceived( bytes32 indexed messageId, uint64 indexed sourceChainSelector, address sender, string text);\\r\\n\\r\\n    enum TitleStatus{\\r\\n        Canceled, //0\\r\\n        Closed, //1\\r\\n        Finalized, //2\\r\\n        Open, //3\\r\\n        Waiting //4\\r\\n    }\\r\\n\\r\\n    TitleStatus status;\\r\\n\\r\\n    enum MyTitleWithdraw{\\r\\n        Canceled, //0\\r\\n        Late, //1\\r\\n        OnSchedule, //2\\r\\n        Withdraw,\\r\\n        Finalized //3\\r\\n    }\\r\\n\\r\\n    MyTitleWithdraw myTitleStatus;\\r\\n\\r\\n    struct Titles {\\r\\n        uint openSellingDate;\\r\\n        uint closeSellingDate;\\r\\n        uint paymentSchedule;\\r\\n        uint nextDrawNumber;\\r\\n        uint titleValue;\\r\\n        uint installments;\\r\\n        uint monthlyInvestiment;\\r\\n        uint protocolFee;\\r\\n        uint numberOfTitlesSold;\\r\\n        uint totalValueReceived;\\r\\n        uint totalValuePaid;\\r\\n        uint titleCanceled;\\r\\n        TitleStatus status;\\r\\n    }\\r\\n\\r\\n    struct TitlesSold {\\r\\n        uint contractId;\\r\\n        uint titleValue;\\r\\n        uint installments;\\r\\n        uint monthlyValue;\\r\\n        uint periodLocked;\\r\\n        address titleOwner;\\r\\n        uint installmentsPaid;\\r\\n        uint drawSelected;\\r\\n        uint colateralId;\\r\\n        address colateralTitleAddress;\\r\\n        address colateralRWAAddress;\\r\\n        uint valueOfEnsuranceNeeded;\\r\\n        MyTitleWithdraw myTitleStatus;\\r\\n        bool paid;\\r\\n    }\\r\\n\\r\\n    struct TitleRecord {\\r\\n        uint contractId;\\r\\n        uint256 installmentNumber;\\r\\n        uint paymentDate;\\r\\n        address payerAddress;\\r\\n        address user;\\r\\n        uint amount;\\r\\n        uint paymentDelay;\\r\\n        bool paid;\\r\\n        uint installmentsPaid;\\r\\n    }\\r\\n\\r\\n    struct Draw {\\r\\n        uint idTitle;\\r\\n        uint drawNumber;\\r\\n        uint drawDate;\\r\\n        uint totalParticipants;\\r\\n        uint requestId;\\r\\n        uint randomNumberVRF;\\r\\n        uint selectedContractID;\\r\\n        address winner;\\r\\n    }\\r\\n\\r\\n    struct ColateralTitles {\\r\\n        address colateralOwner;\\r\\n        uint titleIdOfColateral;\\r\\n        uint contractIdOfColateral;\\r\\n    }\\r\\n\\r\\n    struct FujiPermissions{\\r\\n        uint idTitle;\\r\\n        uint contractId;\\r\\n        uint drawNumber;\\r\\n    }\\r\\n    \\r\\n    IERC20 stablecoin;\\r\\n    IERC721 nftToken;\\r\\n\\r\\n    HorizonStaff staff = HorizonStaff(0xCd24c9696f2aA4bB15170B263E72642b5600B479); //FALTA ENDERE\\u00c7O\\r\\n    HorizonVRF vrfv2consumer = HorizonVRF(0xE7d98f63EFCDD443549b64205B1A1d22Af8c1007); //FALTA ENDERE\\u00c7O\\r\\n    HorizonReceipt receipt = HorizonReceipt(0x0203fc68dED882C7B669b4711C42fb7A27E119a9); //FALTA ENDERE\\u00c7O\\r\\n    HorizonS sender = HorizonS(payable(0xC3e7E776227D34874f6082f2F8476DD150DEC2de)); //FALTA ENDERE\\u00c7O\\r\\n\\r\\n    mapping(uint titleId => Titles) public allTitles; //ok\\r\\n    mapping(uint titleId => mapping(uint contractId => TitlesSold)) public titleSoldInfos; //OK\\r\\n    mapping(uint titleId => mapping(uint drawNumber => Draw)) public drawInfos;\\r\\n    mapping(uint titleId => mapping(uint drawNumber => mapping(uint paymentOrder => TitleRecord))) public selectorVRF;\\r\\n    mapping(bytes32 permissionHash => FujiPermissions) permissionInfo;\\r\\n    mapping(uint titleId => mapping(uint contractId => ColateralTitles)) public colateralInfos; //OK\\r\\n\\r\\n    constructor(address _router) CCIPReceiver(_router){ //0x70499c328e1e2a3c41108bd3730f6670a44595d1\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function createTitle(uint _opening, //OK\\r\\n                         uint _closing,\\r\\n                         uint _participants,\\r\\n                         uint _value) public {\\r\\n        require(_opening != 0, \\\"Must Select a date to start to sell the titles!\\\");\\r\\n        require(_closing > _opening, \\\"Must Select a date to stop to sell the titles!\\\");\\r\\n        require(_participants != 0, \\\"Must set the number of total participants!\\\");\\r\\n\\r\\n        titleId++;\\r\\n\\r\\n        uint scheduleId = staff.createSchedule( titleId, _participants, _closing);\\r\\n\\r\\n        Titles memory newTitle = Titles ({\\r\\n        openSellingDate:_opening,\\r\\n        closeSellingDate: _closing,\\r\\n        paymentSchedule: scheduleId,\\r\\n        nextDrawNumber: 1,\\r\\n        titleValue: _value * 10 ** 18,\\r\\n        installments: _participants,\\r\\n        monthlyInvestiment: (_value * 10 ** 18) / (_participants),\\r\\n        protocolFee: (((_value * 10 ** 18) / _participants) * 5) / 100,\\r\\n        numberOfTitlesSold: 0,\\r\\n        totalValueReceived: 0,\\r\\n        totalValuePaid: 0,\\r\\n        titleCanceled: 0,\\r\\n        status: TitleStatus.Waiting\\r\\n        });\\r\\n\\r\\n        allTitles[titleId] = newTitle;\\r\\n\\r\\n        uint monthlyValue = (allTitles[titleId].monthlyInvestiment + (allTitles[titleId].protocolFee));\\r\\n\\r\\n        emit NewTitleCreated(titleId, scheduleId, monthlyValue, allTitles[titleId].titleValue);\\r\\n    }\\r\\n\\r\\n    function updateTitleStatus(uint _titleId) public { //OK\\r\\n        Titles storage title = allTitles[_titleId];\\r\\n\\r\\n        require(title.status == TitleStatus.Waiting || title.status == TitleStatus.Open || title.status == TitleStatus.Closed, \\\"This title already ended\\\");\\r\\n\\r\\n        if(block.timestamp > title.openSellingDate && title.status == TitleStatus.Waiting){\\r\\n            title.status = TitleStatus.Open;\\r\\n\\r\\n            emit TitleStatusUpdated(title.status);\\r\\n        }else{\\r\\n            if(block.timestamp > title.closeSellingDate && title.status == TitleStatus.Open){\\r\\n                title.status = TitleStatus.Closed;\\r\\n\\r\\n            }else{\\r\\n                uint nextDrawParticipants = staff.returnDrawParticipants(_titleId, title.nextDrawNumber);\\r\\n\\r\\n                if( title.status == TitleStatus.Closed && title.nextDrawNumber > title.installments ||\\r\\n                    title.status == TitleStatus.Closed && title.nextDrawNumber + (title.titleCanceled) > title.installments && nextDrawParticipants == 0){\\r\\n                    title.status = TitleStatus.Finalized;\\r\\n\\r\\n                    emit TitleStatusUpdated(title.status);\\r\\n                }else{\\r\\n                    if(title.numberOfTitlesSold == 0){\\r\\n                        title.status = TitleStatus.Canceled;\\r\\n\\r\\n                        emit ThisTitleHasBeenCanceled(nextDrawParticipants);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function buyTitle(uint64 _titleId, bool withdrawPeriod, IERC20 _tokenAddress) public { //OK\\r\\n        Titles storage title = allTitles[_titleId];\\r\\n\\r\\n        require(title.status == TitleStatus.Open,\\\"This Title is not available. Check the Title status!\\\");\\r\\n        require(title.numberOfTitlesSold <= title.installments, \\\"Title soldout!\\\");\\r\\n\\r\\n        title.numberOfTitlesSold++;\\r\\n        //Se voc\\u00ea deseja sacar o valor do titulo em menos de 5 meses, se sorteado. Marque como true.\\r\\n        uint fee;\\r\\n        uint lockPeriod;\\r\\n        if(withdrawPeriod == true){\\r\\n            fee = title.protocolFee;\\r\\n            lockPeriod = 0;\\r\\n        } else {\\r\\n            fee = 0;\\r\\n            lockPeriod = 5;\\r\\n        }\\r\\n\\r\\n        TitlesSold memory myTitle = TitlesSold({\\r\\n            contractId: title.numberOfTitlesSold,\\r\\n            titleValue: title.titleValue,\\r\\n            installments: title.installments,\\r\\n            monthlyValue: ((title.monthlyInvestiment) + (fee)),\\r\\n            periodLocked: lockPeriod,\\r\\n            titleOwner: msg.sender,\\r\\n            installmentsPaid: 0,\\r\\n            drawSelected: 0,\\r\\n            colateralId: 0,\\r\\n            colateralTitleAddress: address(this),\\r\\n            colateralRWAAddress: address(0),\\r\\n            valueOfEnsuranceNeeded: 0,\\r\\n            myTitleStatus: MyTitleWithdraw.OnSchedule,\\r\\n            paid: false\\r\\n        });\\r\\n\\r\\n        titleSoldInfos[_titleId][title.numberOfTitlesSold] = myTitle;\\r\\n\\r\\n        if(title.numberOfTitlesSold > title.installments){\\r\\n            title.status = TitleStatus.Closed;\\r\\n        }\\r\\n        \\r\\n        bytes memory myTitleReceipt = abi.encode(myTitle);\\r\\n\\r\\n        uint myTitleReceiptId = receipt.safeMint(msg.sender, string(myTitleReceipt));\\r\\n\\r\\n        payInstallment(_titleId, titleSoldInfos[_titleId][title.numberOfTitlesSold].contractId, titleSoldInfos[_titleId][title.numberOfTitlesSold].installmentsPaid, _tokenAddress);\\r\\n\\r\\n        emit NewTitleSold(title.numberOfTitlesSold, msg.sender);\\r\\n    }\\r\\n\\r\\n    function payInstallment(uint _idTitle, //OK\\r\\n                            uint _contractId,\\r\\n                            uint _installmentNumber,\\r\\n                            IERC20 _tokenAddress) public {\\r\\n        Titles storage title = allTitles[_idTitle];\\r\\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\\r\\n        require(title.status == TitleStatus.Closed, \\\"Check the title status!\\\");\\r\\n        require(myTitle.installments >= _installmentNumber, \\\"You don't have any installment left to pay!\\\");\\r\\n        require(myTitle.myTitleStatus == MyTitleWithdraw.OnSchedule || myTitle.myTitleStatus == MyTitleWithdraw.Late || myTitle.myTitleStatus == MyTitleWithdraw.Withdraw );\\r\\n\\r\\n        uint _installment;\\r\\n\\r\\n        if(_installmentNumber == 0){\\r\\n            _installment = 1;\\r\\n        } else{\\r\\n            require(_installmentNumber > myTitle.installmentsPaid, \\\"Already paid!\\\");\\r\\n            _installment = _installmentNumber;\\r\\n        }\\r\\n\\r\\n        uint paymentDate = staff.returnPaymentDeadline(title.paymentSchedule, _installment);\\r\\n\\r\\n        if(block.timestamp > paymentDate){\\r\\n            paymentDelay = (block.timestamp - paymentDate);\\r\\n\\r\\n            if(paymentDelay > 0){\\r\\n\\r\\n                amountToPay = staff.calculateDelayedPayment(paymentDelay, title.paymentSchedule, amountToPay);\\r\\n\\r\\n                emit AmountToPay(amountToPay);\\r\\n\\r\\n                receiveInstallment(_idTitle, _contractId, amountToPay, _tokenAddress);\\r\\n            }\\r\\n        }else{\\r\\n            amountToPay = myTitle.monthlyValue;\\r\\n            \\r\\n            emit AmountToPay(amountToPay);\\r\\n\\r\\n            receiveInstallment(_idTitle, _contractId, amountToPay, _tokenAddress);\\r\\n        }\\r\\n\\r\\n        TitleRecord memory record = TitleRecord({\\r\\n            contractId: _contractId,\\r\\n            installmentNumber: _installment,\\r\\n            paymentDate: block.timestamp,\\r\\n            payerAddress: msg.sender,\\r\\n            user: myTitle.titleOwner,\\r\\n            amount: amountToPay,\\r\\n            paymentDelay: paymentDelay,\\r\\n            paid: true,\\r\\n            installmentsPaid: myTitle.installmentsPaid\\r\\n        });\\r\\n\\r\\n        if(myTitle.installmentsPaid >= title.nextDrawNumber && myTitle.drawSelected == 0){\\r\\n            \\r\\n            staff.addParticipantsToDraw(title.paymentSchedule, title.nextDrawNumber);\\r\\n\\r\\n            uint nextDrawParticipants = staff.returnDrawParticipants(title.paymentSchedule, title.nextDrawNumber);\\r\\n\\r\\n            selectorVRF[_idTitle][_installmentNumber][nextDrawParticipants] = record;\\r\\n        }\\r\\n\\r\\n        bytes memory paymentReceipt = abi.encode(record);\\r\\n\\r\\n        receipt.safeMint(msg.sender, string(paymentReceipt));\\r\\n\\r\\n        if(myTitle.installmentsPaid == myTitle.installments){\\r\\n            myTitle.myTitleStatus = MyTitleWithdraw.Withdraw;\\r\\n\\r\\n            if(myTitle.colateralId != 0 ){\\r\\n                refundColateral(_idTitle, _contractId);\\r\\n            }\\r\\n        }\\r\\n        if(myTitle.installmentsPaid == title.nextDrawNumber &&  myTitle.myTitleStatus == MyTitleWithdraw.Late){\\r\\n            myTitle.myTitleStatus = MyTitleWithdraw.OnSchedule;\\r\\n        }\\r\\n\\r\\n        updateValueOfEnsurance(_idTitle, _contractId);\\r\\n\\r\\n        emit InstallmentPaid(_idTitle, _contractId, myTitle.installmentsPaid);\\r\\n    }\\r\\n\\r\\n    function receiveInstallment(uint _idTitle, uint _contractId, uint _amountToPay, IERC20 _tokenAddress) internal{ //OK\\r\\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\\r\\n        Titles storage title = allTitles[_idTitle];\\r\\n        require(myTitle.contractId <= title.numberOfTitlesSold, \\\"Enter a valid contract Id for this Title!\\\");\\r\\n        require(myTitle.myTitleStatus != MyTitleWithdraw.Canceled || myTitle.myTitleStatus != MyTitleWithdraw.Finalized, \\\"your title already have been finalized or canceled. Please check the status.\\\");\\r\\n        require(address(_tokenAddress) != address(0), \\\"Enter a token address\\\");\\r\\n\\r\\n        (, , bool isStable) = staff.returnAvailableStablecoin(_tokenAddress);\\r\\n\\r\\n        require(isStable == true , \\\"Token not allowed!\\\");\\r\\n\\r\\n        stablecoin = _tokenAddress;\\r\\n\\r\\n        require(_amountToPay >= myTitle.monthlyValue, \\\"Wrong value!!\\\");\\r\\n\\r\\n        //Valida se o endere\\u00e7o tem o valor da parcela na carteira.\\r\\n        require(stablecoin.balanceOf(msg.sender)>= _amountToPay, \\\"Insufficient balance\\\");\\r\\n\\r\\n        //Valida se o contrato(esse), tem permiss\\u00e3o para realizar a transfer\\u00eancia do valor.\\r\\n        require(stablecoin.allowance(msg.sender, address(this)) >= _amountToPay, \\\"You must approve the contract to transfer the tokens\\\");\\r\\n\\r\\n        if(myTitle.periodLocked == 0){\\r\\n            title.totalValueReceived = title.totalValueReceived + title.monthlyInvestiment;\\r\\n            \\r\\n            stablecoin.transferFrom(msg.sender, address(this), title.monthlyInvestiment);\\r\\n            stablecoin.transferFrom(msg.sender, address(staff), (_amountToPay - title.monthlyInvestiment));\\r\\n        } else{\\r\\n            title.totalValueReceived = title.totalValueReceived + title.monthlyInvestiment;\\r\\n\\r\\n            if(_amountToPay - title.monthlyInvestiment > 0){\\r\\n            \\r\\n                stablecoin.transferFrom(msg.sender, address(this), title.monthlyInvestiment);\\r\\n                stablecoin.transferFrom(msg.sender, address(staff), (_amountToPay - title.monthlyInvestiment));\\r\\n            } else{\\r\\n                stablecoin.transferFrom(msg.sender, address(this), _amountToPay);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        myTitle.installmentsPaid++;\\r\\n    }\\r\\n\\r\\n    function updateValueOfEnsurance(uint _idTitle, uint _contractId) internal { //OK\\r\\n        Titles storage titles = allTitles[_idTitle];\\r\\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\\r\\n\\r\\n        uint valueAlreadyPaid = (myTitle.installmentsPaid * titles.monthlyInvestiment);\\r\\n\\r\\n        if(valueAlreadyPaid >= myTitle.titleValue){\\r\\n            myTitle.valueOfEnsuranceNeeded = 0;\\r\\n        }else{\\r\\n            myTitle.valueOfEnsuranceNeeded = myTitle.titleValue - valueAlreadyPaid;\\r\\n        }\\r\\n\\r\\n        emit EnsuranceValueNeededUpdate(_idTitle, _contractId, myTitle.valueOfEnsuranceNeeded);\\r\\n    }\\r\\n\\r\\n    function monthlyVRFWinner(uint _idTitle) public { //OK\\r\\n        Titles storage title = allTitles[_idTitle];\\r\\n\\r\\n        uint thisDrawDate = staff.returnDrawDate(title.paymentSchedule, title.nextDrawNumber);\\r\\n\\r\\n        require(block.timestamp > thisDrawDate, \\\"Isn't the time yet!\\\");\\r\\n\\r\\n        uint nextDrawParticipants = staff.returnDrawParticipants(title.paymentSchedule, title.nextDrawNumber);\\r\\n\\r\\n        uint256 requestId = vrfv2consumer.requestRandomWords(_idTitle, title.nextDrawNumber, nextDrawParticipants);\\r\\n\\r\\n        title.status = TitleStatus.Waiting;\\r\\n\\r\\n        Draw memory draw = Draw({\\r\\n            idTitle: _idTitle,\\r\\n            drawNumber: title.nextDrawNumber,\\r\\n            drawDate: block.timestamp,\\r\\n            totalParticipants: nextDrawParticipants,\\r\\n            requestId: requestId,\\r\\n            randomNumberVRF: 0,\\r\\n            selectedContractID: 0,\\r\\n            winner: address(0)\\r\\n        });\\r\\n\\r\\n        drawInfos[_idTitle][title.nextDrawNumber] = draw;\\r\\n\\r\\n        if(title.nextDrawNumber > title.installments){\\r\\n            title.status = TitleStatus.Finalized;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function receiveVRFRandomNumber(uint256 _idTitle) public{ //OK\\r\\n        Titles storage title = allTitles[_idTitle];\\r\\n        Draw storage draw = drawInfos[_idTitle][title.nextDrawNumber];\\r\\n\\r\\n        (bool fulfilled, uint256[] memory randomWords, uint256 randomValue) = vrfv2consumer.getRequestStatus(draw.requestId);\\r\\n\\r\\n        require(fulfilled, \\\"VRF request not fulfilled\\\");\\r\\n        \\r\\n        emit VRFAnswer(fulfilled, randomWords, randomValue);\\r\\n\\r\\n        TitleRecord storage winningTicket = selectorVRF[_idTitle][draw.drawNumber][randomValue];\\r\\n\\r\\n        draw.randomNumberVRF = randomValue;\\r\\n        draw.selectedContractID = winningTicket.contractId;\\r\\n        draw.winner = winningTicket.user;\\r\\n\\r\\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][winningTicket.contractId];\\r\\n\\r\\n        myTitle.drawSelected = draw.drawNumber;\\r\\n\\r\\n        updateValueOfEnsurance(_idTitle, winningTicket.contractId);\\r\\n\\r\\n        title.status = TitleStatus.Closed;\\r\\n\\r\\n        title.nextDrawNumber++;\\r\\n\\r\\n        emit MonthlyWinnerSelected(_idTitle, draw.drawNumber, randomValue, winningTicket.contractId, winningTicket.user);\\r\\n    }\\r\\n\\r\\n    function addTitleAsColateral(uint _titleId, uint _contractId, uint _idOfColateralTitle, uint _idOfColateralContract) public{ //OK\\r\\n        TitlesSold storage myColateralTitle = titleSoldInfos[_idOfColateralTitle][_idOfColateralContract];\\r\\n        TitlesSold storage myTitle = titleSoldInfos[_titleId][_contractId]; \\r\\n\\r\\n        require(myTitle.drawSelected != 0, \\\"You haven't been selected yet!\\\");\\r\\n        require(myTitle.titleOwner == msg.sender, \\\"Only the owner can add a colateral!\\\");\\r\\n        require(myColateralTitle.titleOwner == msg.sender, \\\"Only the owner can add a colateral!\\\");\\r\\n        require(myColateralTitle.titleValue >= myTitle.valueOfEnsuranceNeeded, \\\"The colateral total value must be greater than tue ensuranceValueNeeded\\\");\\r\\n        \\r\\n        uint colateralValuePaid = myColateralTitle.installmentsPaid * myColateralTitle.monthlyValue;\\r\\n        uint ensuranceNeeded = myTitle.valueOfEnsuranceNeeded * 2;\\r\\n\\r\\n        require(myColateralTitle.titleValue == colateralValuePaid || colateralValuePaid >= ensuranceNeeded, \\\"All the installments from the colateral must have been paid or at least the value paid must be greater then two times the ensureValueNeeded\\\");\\r\\n\\r\\n        myTitle.myTitleStatus = MyTitleWithdraw.Withdraw;\\r\\n\\r\\n        ColateralTitles memory colateral = ColateralTitles ({\\r\\n            colateralOwner: msg.sender,\\r\\n            titleIdOfColateral: _idOfColateralTitle,\\r\\n            contractIdOfColateral: _idOfColateralContract\\r\\n        });\\r\\n\\r\\n        colateralInfos[_titleId][_contractId] = colateral;\\r\\n\\r\\n        myColateralTitle.titleOwner = address(this);\\r\\n\\r\\n        emit ColateralTitleAdded(_titleId, _contractId, myTitle.drawSelected, _idOfColateralTitle, _idOfColateralContract);\\r\\n    }\\r\\n\\r\\n    function addRWAColateral(uint _idTitle, uint _contractId) public { //OK\\r\\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\\r\\n\\r\\n        require(myTitle.drawSelected != 0, \\\"You haven't been selected yet!\\\");\\r\\n\\r\\n        require(msg.sender == myTitle.titleOwner, \\\"Only the draw winner can create a permission!\\\");\\r\\n\\r\\n        bytes32 permissionHash = keccak256(abi.encodePacked(_idTitle, _contractId, myTitle.drawSelected));\\r\\n\\r\\n        FujiPermissions memory fuji = FujiPermissions({\\r\\n            idTitle: _idTitle,\\r\\n            contractId: _contractId,\\r\\n            drawNumber: myTitle.drawSelected\\r\\n        });\\r\\n\\r\\n        permissionInfo[permissionHash] = fuji;\\r\\n\\r\\n        uint rwaValueNeeded = myTitle.valueOfEnsuranceNeeded;\\r\\n\\r\\n        bytes memory permission = abi.encode(permissionHash, rwaValueNeeded, true);\\r\\n    \\r\\n        sender.sendMessagePayLINK(14767482510784806043, fujiReceiver,  permission); // CHAIN -14767482510784806043\\r\\n\\r\\n        emit CreatingPermission(_idTitle, _contractId, myTitle.drawSelected, fujiReceiver);\\r\\n    }\\r\\n\\r\\n    function refundColateral(uint _idTitle, uint _contractId) public { //OK\\r\\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\\r\\n        \\r\\n        require(myTitle.installmentsPaid == myTitle.installments, \\\"All the installments must have been paid!\\\");\\r\\n        require(myTitle.paid == true, \\\"You can't retrieve the colateral before the withdraw!\\\");\\r\\n\\r\\n        if(myTitle.installmentsPaid == myTitle.installments && myTitle.colateralRWAAddress != address(0)){\\r\\n\\r\\n            bytes32 permissionHash = keccak256(abi.encodePacked(_idTitle, _contractId, myTitle.drawSelected));\\r\\n\\r\\n            bytes memory updatePermission = abi.encode(permissionHash, myTitle.valueOfEnsuranceNeeded, false);\\r\\n\\r\\n            sender.sendMessagePayLINK(14767482510784806043, fujiReceiver, updatePermission); // Chain - 14767482510784806043\\r\\n        }else{\\r\\n            if(myTitle.installmentsPaid == myTitle.installments && myTitle.colateralId != 0){\\r\\n                \\r\\n                ColateralTitles memory colateral = colateralInfos[_idTitle][_contractId];\\r\\n                \\r\\n                TitlesSold storage myColateralTitle = titleSoldInfos[colateral.titleIdOfColateral][colateral.contractIdOfColateral];\\r\\n\\r\\n                myColateralTitle.titleOwner = colateral.colateralOwner;\\r\\n\\r\\n                myTitle.myTitleStatus = MyTitleWithdraw.Finalized;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function winnerWithdraw(uint _idTitle, uint _contractId, IERC20 _stablecoin) public { //OK\\r\\n        Titles storage title = allTitles[_idTitle];\\r\\n        TitlesSold storage myTitle = titleSoldInfos[_idTitle][_contractId];\\r\\n        \\r\\n        require(msg.sender == myTitle.titleOwner || msg.sender == owner, \\\"Msg.sender must be the contract Owner or the protocol owner!\\\");\\r\\n        require(address(_stablecoin) != address(0), \\\"Token not allowed\\\");\\r\\n        require(myTitle.myTitleStatus == MyTitleWithdraw.Withdraw, \\\"This title don't have the permission to withdraw\\\");\\r\\n \\r\\n        if(myTitle.installmentsPaid == myTitle.installments ||\\r\\n           myTitle.colateralId != 0 || myTitle.colateralRWAAddress != address(0) && myTitle.colateralId != 0) {\\r\\n\\r\\n            (, , bool isStable) = staff.returnAvailableStablecoin(_stablecoin);\\r\\n\\r\\n            require(isStable == true , \\\"Token not allowed!\\\");\\r\\n\\r\\n            stablecoin = _stablecoin;\\r\\n\\r\\n            //Valida se o endere\\u00e7o tem o valor da parcela na carteira.\\r\\n            require(stablecoin.balanceOf(address(this))>= myTitle.titleValue);\\r\\n            //Transfere o valor correspondente a parcela para o contrato.\\r\\n            stablecoin.transfer(myTitle.titleOwner, myTitle.titleValue);\\r\\n\\r\\n            emit MonthlyWinnerPaid(_idTitle, myTitle.drawSelected, myTitle.titleOwner, myTitle.titleValue);\\r\\n        }else{\\r\\n            emit ThereAreSomePendencies(myTitle.installmentsPaid,\\r\\n                                        myTitle.colateralId,\\r\\n                                        myTitle.colateralTitleAddress,\\r\\n                                        myTitle.colateralRWAAddress,\\r\\n                                        myTitle.myTitleStatus);\\r\\n        }\\r\\n        myTitle.paid = true;\\r\\n        title.totalValuePaid = title.totalValuePaid + myTitle.titleValue;\\r\\n    }\\r\\n\\r\\n    // Function to check titles with overdue payments and apply rules\\r\\n    function verifyLatePayments(uint _titleId, uint _contractId) public { //OK\\r\\n        Titles storage title = allTitles[_titleId];\\r\\n\\r\\n        for(uint i = 1; i < title.numberOfTitlesSold; i++){\\r\\n\\r\\n            TitlesSold storage clientTitle = titleSoldInfos[_titleId][i];\\r\\n\\r\\n            if(title.nextDrawNumber - clientTitle.installmentsPaid >= 2){\\r\\n                clientTitle.myTitleStatus = MyTitleWithdraw.Canceled;\\r\\n                title.titleCanceled++;\\r\\n\\r\\n                if(clientTitle.colateralId != 0 || clientTitle.colateralRWAAddress != address(0) && clientTitle.colateralId != 0){\\r\\n                            \\r\\n                    ColateralTitles storage colateral = colateralInfos[_titleId][_contractId];\\r\\n                    Titles storage colateralTitle = allTitles[colateral.titleIdOfColateral];\\r\\n                    TitlesSold storage colateralContract = titleSoldInfos[colateral.titleIdOfColateral][colateral.contractIdOfColateral];\\r\\n\\r\\n                    colateralContract.myTitleStatus = MyTitleWithdraw.Canceled;\\r\\n                    colateralTitle.titleCanceled++;\\r\\n                }\\r\\n            }else{\\r\\n                uint paymentDate = staff.returnPaymentDeadline(title.paymentSchedule, title.nextDrawNumber);\\r\\n                if(block.timestamp > paymentDate) {\\r\\n                    clientTitle.myTitleStatus = MyTitleWithdraw.Late;\\r\\n\\r\\n                    emit MyTitleStatusUpdated(clientTitle.myTitleStatus);\\r\\n\\r\\n                }\\r\\n            }    \\r\\n        }\\r\\n    }\\r\\n\\r\\n    function protocolWithdraw(uint _idTitle, IERC20 _tokenAddress) public onlyOwner{ //OK\\r\\n        Titles storage title = allTitles[_idTitle];\\r\\n\\r\\n        require(title.status == TitleStatus.Finalized || title.status == TitleStatus.Canceled);\\r\\n\\r\\n        uint validTitles = title.numberOfTitlesSold - title.titleCanceled;\\r\\n\\r\\n        uint lockedAmount = validTitles * title.titleValue;\\r\\n\\r\\n        uint amount = title.totalValueReceived - lockedAmount;\\r\\n\\r\\n        require(amount <= title.totalValueReceived - lockedAmount,\\\"_amount can't exceed the title value!\\\");\\r\\n\\r\\n        require(address(_tokenAddress) != address(0), \\\"Token not allowed\\\");\\r\\n\\r\\n        (, , bool isStable) = staff.returnAvailableStablecoin(_tokenAddress);\\r\\n\\r\\n        require(isStable == true , \\\"Token not allowed!\\\");\\r\\n\\r\\n        stablecoin = _tokenAddress;\\r\\n\\r\\n        require(stablecoin.balanceOf(address(this))>= amount);\\r\\n        stablecoin.transfer(address(staff), amount);\\r\\n    }\\r\\n\\r\\n    /* FUN\\u00c7\\u00d5ES CCIP */\\r\\n    //Add source chains\\r\\n    function addSourceChain( uint64 _sourceChainSelector) external onlyOwner {//OK\\r\\n        whitelistedSourceChains[_sourceChainSelector] = true;\\r\\n    }\\r\\n    //removesource chains\\r\\n    function removelistSourceChain( uint64 _sourceChainSelector) external onlyOwner {//OK\\r\\n        whitelistedSourceChains[_sourceChainSelector] = false;\\r\\n    }\\r\\n    //add senders\\r\\n    function addSender(address _sender) external onlyOwner { //OK\\r\\n        whitelistedSenders[_sender] = true;\\r\\n    }\\r\\n    //remove senders\\r\\n    function removeSender(address _sender) external onlyOwner {//OK\\r\\n        whitelistedSenders[_sender] = false;\\r\\n    }\\r\\n\\r\\n    function addReceiver(address _receiverAddress) public { //OK\\r\\n        fujiReceiver = _receiverAddress;\\r\\n    }\\r\\n\\r\\n    /* handle a received message*/\\r\\n    function _ccipReceive( Client.Any2EVMMessage memory any2EvmMessage) internal override /*onlyWhitelistedSourceChain(any2EvmMessage.sourceChainSelector) onlyWhitelistedSenders(abi.decode(any2EvmMessage.sender, (address)))*/ {\\r\\n        lastReceivedMessageId = any2EvmMessage.messageId;\\r\\n        lastReceivedText = abi.decode(any2EvmMessage.data, (bytes));\\r\\n\\r\\n        bytes32 _permissionHash;\\r\\n        address _colectionAddress;\\r\\n        uint _nftId;\\r\\n\\r\\n        (_permissionHash, _colectionAddress, _nftId) = abi.decode(lastReceivedText, (bytes32, address, uint));\\r\\n\\r\\n        FujiPermissions storage permission = permissionInfo[_permissionHash];\\r\\n        TitlesSold storage myTitle = titleSoldInfos[permission.idTitle][permission.contractId];\\r\\n\\r\\n        myTitle.colateralId = _nftId;\\r\\n        myTitle.colateralRWAAddress = _colectionAddress;\\r\\n\\r\\n        if(myTitle.colateralId != 0 && myTitle.colateralRWAAddress != address(0)) {\\r\\n            myTitle.myTitleStatus = MyTitleWithdraw.Withdraw;\\r\\n        }\\r\\n\\r\\n        emit MessageReceived( any2EvmMessage.messageId, any2EvmMessage.sourceChainSelector, abi.decode(any2EvmMessage.sender, (address)), abi.decode(any2EvmMessage.data, (string)));\\r\\n    }\\r\\n\\r\\n    function getLastReceivedMessageDetails() external view returns (bytes32 messageId, bytes memory text) {\\r\\n        return (lastReceivedMessageId, lastReceivedText);\\r\\n    }\\r\\n\\r\\n    modifier onlyWhitelistedSourceChain(uint64 _sourceChainSelector) {\\r\\n        if (!whitelistedSourceChains[_sourceChainSelector])\\r\\n            revert SourceChainNotWhitelisted(_sourceChainSelector);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyWhitelistedSenders(address _sender) {\\r\\n        if (!whitelistedSenders[_sender]) revert SenderNotWhitelisted(_sender);\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"The caller must be the owner!\\\");\\r\\n        _;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe227ecf6206e85583de2d7e2d6e13812c4c6fa156233d6ee208936417430660d\",\"license\":\"MIT\"},\"contracts/HorizonReceipt.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\\\";\\r\\n\\r\\ncontract HorizonReceipt is ERC721, ERC721URIStorage, ERC721Burnable {\\r\\n    uint256 private _nextTokenId;\\r\\n\\r\\n    constructor()\\r\\n        ERC721(\\\"HorizonReceipt\\\", \\\"HZR\\\")\\r\\n    {}\\r\\n\\r\\n    function safeMint(address to, string memory uri) public returns(uint){\\r\\n        uint256 tokenId = _nextTokenId++;\\r\\n        _safeMint(to, tokenId);\\r\\n        _setTokenURI(tokenId, uri);\\r\\n\\r\\n        return tokenId;\\r\\n    }\\r\\n\\r\\n    // The following functions are overrides required by Solidity.\\r\\n\\r\\n    function tokenURI(uint256 tokenId)\\r\\n        public\\r\\n        view\\r\\n        override(ERC721, ERC721URIStorage)\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return super.tokenURI(tokenId);\\r\\n    }\\r\\n\\r\\n    function supportsInterface(bytes4 interfaceId)\\r\\n        public\\r\\n        view\\r\\n        override(ERC721, ERC721URIStorage)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return super.supportsInterface(interfaceId);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x23e2d6d33d8d936655002b10cf71ec4c9681a35fb146383825f932b0e2ff0b4c\",\"license\":\"MIT\"},\"contracts/HorizonS.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport {IRouterClient} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\\\";\\r\\nimport {Client} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\\\";\\r\\nimport {CCIPReceiver} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\\\";\\r\\nimport {IERC20} from \\\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\ncontract HorizonS is CCIPReceiver {\\r\\n\\r\\n    // Custom errors to provide more descriptive revert messages.\\r\\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees);\\r\\n    error NothingToWithdraw();\\r\\n    error FailedToWithdrawEth(address owner, address target, uint256 value);\\r\\n    error DestinationChainNotWhitelisted(uint64 destinationChainSelector);\\r\\n\\r\\n    // Event emitted when a message is sent to another chain.\\r\\n    event MessageSent(bytes32 indexed messageId, uint64 indexed destinationChainSelector, address receiver, bytes text, address feeToken, uint256 fees);\\r\\n    event MessageReceived(bytes32 indexed messageId, uint64 indexed sourceChainSelector, address sender, string text, address token, uint256 tokenAmount);\\r\\n    event CCIPReceiverAdded(string blockchainName, address receiverAddress);\\r\\n    event CCIPReceiverRemoved(address _receiverAddress);\\r\\n\\r\\n    bytes32 private lastReceivedMessageId;\\r\\n    string private lastReceivedText;\\r\\n    uint private destinationChainSelector;\\r\\n\\r\\n    address owner;\\r\\n\\r\\n    /* STRUCTS */\\r\\n    struct ReceiverInfo {\\r\\n        string blockchainName;\\r\\n        address receiverAddress;\\r\\n        bool isReceiver;\\r\\n    }\\r\\n\\r\\n    // Mapping to keep track of whitelisted destination chains.\\r\\n    mapping(uint64 => bool) public whitelistedDestinationChains;\\r\\n    // Mapping to keep track of receivers.\\r\\n    mapping(address receiverAddress => ReceiverInfo) public ccipReceicers;\\r\\n\\r\\n    LinkTokenInterface linkToken = LinkTokenInterface(0x5FA769922a6428758fb44453815e2c436c57C3c7);  //\\r\\n\\r\\n    constructor(address _router, //0x70499c328e1e2a3c41108bd3730f6670a44595d1\\r\\n                address _linkToken //0x326C977E6efc84E512bB9C30f76E30c160eD06FB\\r\\n               ) CCIPReceiver(_router){ \\r\\n        linkToken = LinkTokenInterface(_linkToken);\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    /// @dev Whitelists a chain for transactions.\\r\\n    /// @notice This function can only be called by the owner.\\r\\n    /// @param _destinationChainSelector The selector of the destination chain to be whitelisted.\\r\\n    function whitelistDestinationChain(uint64 _destinationChainSelector) external onlyOwner {\\r\\n        whitelistedDestinationChains[_destinationChainSelector] = true;\\r\\n    }\\r\\n\\r\\n    /// @dev Denylists a chain for transactions.\\r\\n    /// @notice This function can only be called by the owner.\\r\\n    /// @param _destinationChainSelector The selector of the destination chain to be denylisted.\\r\\n    function denylistDestinationChain(uint64 _destinationChainSelector) external onlyOwner {\\r\\n        whitelistedDestinationChains[_destinationChainSelector] = false;\\r\\n    }\\r\\n\\r\\n    function addReceiver(string memory _blockchainName, address _receiverAddress) public onlyOwner{\\r\\n        require(_receiverAddress != address(0), \\\"Enter a valid address!\\\");\\r\\n        require(ccipReceicers[_receiverAddress].isReceiver == false, \\\"Receiver is already registered!\\\");\\r\\n\\r\\n        ReceiverInfo memory newReceiver = ReceiverInfo({\\r\\n            blockchainName: _blockchainName,\\r\\n            receiverAddress: _receiverAddress,\\r\\n            isReceiver: true\\r\\n        });\\r\\n        \\r\\n        ccipReceicers[_receiverAddress] = newReceiver;\\r\\n\\r\\n        emit CCIPReceiverAdded(_blockchainName, _receiverAddress);\\r\\n    }\\r\\n\\r\\n    function removeReceiver(address _receiverAddress) public onlyOwner {\\r\\n        require(ccipReceicers[_receiverAddress].isReceiver == true, \\\"Receiver is already registered!\\\");\\r\\n\\r\\n        delete ccipReceicers[_receiverAddress];\\r\\n\\r\\n        emit CCIPReceiverRemoved(_receiverAddress);\\r\\n    }\\r\\n\\r\\n    function sendMessagePayLINK(uint64 _destinationChainSelector, address _receiverAddress, bytes memory _data) external /*onlyOwner*/ returns (bytes32 messageId){\\r\\n        require(ccipReceicers[_receiverAddress].receiverAddress != address(0), \\\"Enter a valid receiver address!\\\");\\r\\n        require(ccipReceicers[_receiverAddress].isReceiver == true, \\\"This receiver is not whitelisted yet!\\\");\\r\\n\\r\\n        Client.EVM2AnyMessage memory evm2AnyMessage = _buildCCIPMessage(\\r\\n            ccipReceicers[_receiverAddress].receiverAddress,\\r\\n            _data,\\r\\n            address(linkToken)\\r\\n        );\\r\\n\\r\\n        IRouterClient router = IRouterClient(this.getRouter());\\r\\n\\r\\n        uint256 fees = router.getFee(_destinationChainSelector, evm2AnyMessage);\\r\\n\\r\\n        if (fees > linkToken.balanceOf(address(this)))\\r\\n            revert NotEnoughBalance(linkToken.balanceOf(address(this)), fees);\\r\\n\\r\\n        linkToken.approve(address(router), fees);\\r\\n\\r\\n        messageId = router.ccipSend(_destinationChainSelector, evm2AnyMessage);\\r\\n\\r\\n        emit MessageSent(messageId, _destinationChainSelector, _receiverAddress, _data, address(0), fees);\\r\\n\\r\\n        return messageId;\\r\\n    }\\r\\n\\r\\n    function _buildCCIPMessage(address _receiver, bytes memory _data, address _feeTokenAddress) internal pure returns (Client.EVM2AnyMessage memory) {\\r\\n        Client.EVM2AnyMessage memory evm2AnyMessage = Client.EVM2AnyMessage({\\r\\n            receiver: abi.encode(_receiver),\\r\\n            data: abi.encode(_data),\\r\\n            tokenAmounts: new Client.EVMTokenAmount[](0),\\r\\n            extraArgs:  Client._argsToBytes(\\r\\n                Client.EVMExtraArgsV1({gasLimit: 800_000, strict: false})\\r\\n            ),\\r\\n            feeToken: _feeTokenAddress\\r\\n        });\\r\\n        return evm2AnyMessage;\\r\\n    }\\r\\n\\r\\n    function _ccipReceive(Client.Any2EVMMessage memory any2EvmMessage) internal override{\\r\\n        lastReceivedMessageId = any2EvmMessage.messageId;\\r\\n        lastReceivedText = abi.decode(any2EvmMessage.data, (string));\\r\\n\\r\\n        emit MessageReceived(any2EvmMessage.messageId, any2EvmMessage.sourceChainSelector, abi.decode(any2EvmMessage.sender, (address)), abi.decode(any2EvmMessage.data, (string)), any2EvmMessage.destTokenAmounts[0].token, any2EvmMessage.destTokenAmounts[0].amount);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function withdraw(address _beneficiary) public /*onlyOwner*/ {\\r\\n        uint256 amount = address(this).balance;\\r\\n\\r\\n        if (amount == 0) revert NothingToWithdraw();\\r\\n\\r\\n        (bool sent, ) = _beneficiary.call{value: amount}(\\\"\\\");\\r\\n\\r\\n        if (!sent) revert FailedToWithdrawEth(msg.sender, _beneficiary, amount);\\r\\n    }\\r\\n\\r\\n    function withdrawToken( address _beneficiary, address _token) public /*onlyOwner*/ {\\r\\n        uint256 amount = IERC20(_token).balanceOf(address(this));\\r\\n\\r\\n        if (amount == 0) revert NothingToWithdraw();\\r\\n\\r\\n        IERC20(_token).transfer(_beneficiary, amount);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner(){\\r\\n        require(msg.sender == owner, \\\"Only Owner can call this function!\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0dab2432c491404581cb935816aacd25d31b6c5ed774939901b3c44ccab7efaf\",\"license\":\"MIT\"},\"contracts/HorizonStaff.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.9 <=0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\nerror NothingToWithdraw();\\r\\n\\r\\ncontract HorizonStaff {\\r\\n\\r\\n    /*Interest variables*/\\r\\n    uint scheduleId = 1;\\r\\n    uint public baseInterestRate = 10;\\r\\n    uint public dailyInterestRate = 3;\\r\\n    uint oneDay = 60; //86400\\r\\n    address owner;\\r\\n\\r\\n    /* Events */\\r\\n    event AdminADD(address indexed _wallet);\\r\\n    event AdminRemoved(address indexed _wallet);\\r\\n    event TokenAdded(IERC20 tokenAddress, string symbol);\\r\\n    event TokenRemoved(string symbol, address _stablecoin );\\r\\n    event InstallmentDateUpdated(uint _installmentNumber, uint _dateOfPayment);    \\r\\n    event TheInstallmenteIsOnTime(uint _paymentDelay);\\r\\n    event TheInstallmentIsOneDayLate(uint _amountToPay);\\r\\n    event TheTitleIsCloseToBeCanceled(uint currentInterestRate, uint amountToPay);\\r\\n    event PaymentIsLate(uint currentInterestRate, uint amountToPay);\\r\\n\\r\\n    /* Structs */\\r\\n    struct AdminInfo {\\r\\n        address wallet;\\r\\n        bool isAdmin;\\r\\n    }\\r\\n    struct TokenInfo {        \\r\\n        string tokenSymbol;\\r\\n        IERC20 stablecoin;\\r\\n        bool isStable;\\r\\n    }\\r\\n    struct Deadlines {\\r\\n        uint installmentNumber;\\r\\n        uint participants;\\r\\n        uint dateOfPayment;\\r\\n        uint dateOfDraw;\\r\\n        uint baseInterestRate;\\r\\n        uint dailyInterestRate;\\r\\n    }\\r\\n\\r\\n    /* Mappings */\\r\\n    mapping(IERC20 coinAddress => TokenInfo) public allowedCrypto;\\r\\n    mapping(uint _titleId => mapping(uint installmentId => Deadlines)) internal schedule;\\r\\n    mapping(address adminWallet => AdminInfo) public staff;\\r\\n\\r\\n    IERC20 stablecoin;\\r\\n\\r\\n    constructor (){\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function addAdmin(address _wallet) public {//OK\\r\\n        require(_wallet != address(0), \\\"Admin wallet can't be empty!\\\");\\r\\n        require(staff[_wallet].isAdmin == false,\\\"Admin already registered\\\");\\r\\n\\r\\n        staff[_wallet] = AdminInfo({\\r\\n            wallet: _wallet,\\r\\n            isAdmin: true\\r\\n        });\\r\\n\\r\\n        emit AdminADD(_wallet);\\r\\n    }\\r\\n\\r\\n    function removeAdmin(address _wallet) public {// OK\\r\\n        require(_wallet != address(0), \\\"Admin wallet can't be empty!\\\");\\r\\n        require(staff[_wallet].isAdmin == true);\\r\\n        \\r\\n        delete staff[_wallet];\\r\\n\\r\\n        emit AdminRemoved(_wallet);\\r\\n    }\\r\\n\\r\\n    function addToken(IERC20 _stablecoin, string memory _tokenSymbol) public { //OK\\r\\n        require(address(_stablecoin) != address(0), \\\"Token address cannot be zero\\\");\\r\\n        require(allowedCrypto[_stablecoin].stablecoin == IERC20(address(0)), \\\"Token already added\\\");\\r\\n\\r\\n        allowedCrypto[_stablecoin] = TokenInfo({\\r\\n            tokenSymbol: _tokenSymbol,\\r\\n            stablecoin: _stablecoin,\\r\\n            isStable: true\\r\\n        });\\r\\n\\r\\n        emit TokenAdded(_stablecoin, _tokenSymbol);\\r\\n    }\\r\\n\\r\\n    function removeToken(IERC20 _stablecoin) public { //OK\\r\\n        address stablecoinAddress = address(allowedCrypto[_stablecoin].stablecoin);\\r\\n\\r\\n        require(stablecoinAddress != address(0), \\\"Token address cannot be zero\\\");\\r\\n\\r\\n        TokenInfo storage tokenToRemove = allowedCrypto[_stablecoin];\\r\\n\\r\\n        delete allowedCrypto[_stablecoin];\\r\\n\\r\\n        emit TokenRemoved(tokenToRemove.tokenSymbol, stablecoinAddress);\\r\\n    }\\r\\n\\r\\n    function createSchedule(uint _titleId, uint _numPayments, uint _closing) public returns(uint _scheduleId){//OK\\r\\n        require(_numPayments > 0, \\\"Number of payments must be greater than 0!\\\");\\r\\n        require(_closing > block.timestamp, \\\"The closing of title selling must be in the future!\\\");\\r\\n\\r\\n        uint intervalDays = 5 minutes; // This will be dinamic. We can adjust this as needed.\\r\\n\\r\\n        uint nextDate = _closing + 300; // We can adjust this as needed.\\r\\n\\r\\n        for (uint i = 1; i <= _numPayments; i++) {\\r\\n            require(nextDate > block.timestamp, \\\"Payment date must be in the future!\\\");\\r\\n\\r\\n            Deadlines memory dates = Deadlines({\\r\\n                installmentNumber: i,\\r\\n                participants: 0,\\r\\n                dateOfPayment: nextDate,\\r\\n                dateOfDraw: nextDate + 300, // We can adjust this as needed.\\r\\n                baseInterestRate: baseInterestRate,\\r\\n                dailyInterestRate: dailyInterestRate\\r\\n            });\\r\\n\\r\\n            schedule[_titleId][i] = dates;\\r\\n\\r\\n            nextDate = nextDate + intervalDays;\\r\\n        }\\r\\n\\r\\n        uint titleSchedule = scheduleId;\\r\\n\\r\\n        scheduleId ++;\\r\\n\\r\\n        return titleSchedule;\\r\\n    }\\r\\n    \\r\\n    function updatePaymentDate(uint _scheduleId, uint _installmentNumber, uint _dateOfPayment) public { //OK\\r\\n        require(_installmentNumber > 0, \\\"Installment number must be greater than zero!\\\");\\r\\n        require(schedule[_scheduleId][_installmentNumber].installmentNumber == _installmentNumber, \\\"Installment number must exist!\\\");\\r\\n        require(_dateOfPayment > schedule[_scheduleId][_installmentNumber].dateOfPayment, \\\"You can only postpone the payment!\\\");\\r\\n\\r\\n        uint nextDate = _dateOfPayment * (1 minutes);\\r\\n\\r\\n        require(nextDate - (schedule[_scheduleId][_installmentNumber - 1].dateOfPayment) > 5 minutes, \\\"Must have a period of 30 days between installments!\\\"); // We can adjust this as needed.\\r\\n\\r\\n        schedule[_scheduleId][_installmentNumber].dateOfPayment = _dateOfPayment;\\r\\n\\r\\n        emit InstallmentDateUpdated(_installmentNumber, _dateOfPayment);\\r\\n    }\\r\\n    \\r\\n    function addParticipantsToDraw(uint _scheduleId, uint _drawNumber) public {\\r\\n        Deadlines storage deadline = schedule[_scheduleId][_drawNumber];\\r\\n\\r\\n        deadline.participants++;\\r\\n    }\\r\\n\\r\\n    /* INTERESTS */\\r\\n\\r\\n    function calculateDelayedPayment(uint _paymentDelay, uint _scheduleId, uint _inicialInstallment) external returns(uint) { //OK\\r\\n\\r\\n        uint inicialValue = _inicialInstallment;\\r\\n        uint currentInterestRate;\\r\\n        uint amountToPay;\\r\\n\\r\\n\\r\\n        if(_paymentDelay < oneDay){\\r\\n            currentInterestRate = schedule[_scheduleId][_inicialInstallment].baseInterestRate;\\r\\n\\r\\n            uint valueWithInterest = (inicialValue * currentInterestRate) / 100;\\r\\n\\r\\n            amountToPay = inicialValue + valueWithInterest;\\r\\n\\r\\n            emit TheInstallmentIsOneDayLate(amountToPay);\\r\\n        }else{\\r\\n            //Calcula os juros a partir dos dias atrasados\\r\\n            uint daily = schedule[_scheduleId][_inicialInstallment].dailyInterestRate;\\r\\n\\r\\n            uint totalDailyInterest = (_paymentDelay / oneDay) * daily;\\r\\n\\r\\n            currentInterestRate = baseInterestRate + totalDailyInterest;\\r\\n\\r\\n            uint valueWithInterests = (inicialValue * currentInterestRate) / 100;\\r\\n\\r\\n            //Calcula o valor a pagar a partir do valor inicial + juros(se houver)\\r\\n            amountToPay = inicialValue + valueWithInterests;\\r\\n\\r\\n            if(currentInterestRate > 40){\\r\\n                emit TheTitleIsCloseToBeCanceled(currentInterestRate, amountToPay);\\r\\n            }else{\\r\\n                emit PaymentIsLate(currentInterestRate, amountToPay);\\r\\n            }\\r\\n        }\\r\\n        return amountToPay;\\r\\n    }\\r\\n\\r\\n    function updateInterest(uint _baseRate, uint _dailyRate) public { // OK.\\r\\n        baseInterestRate = _baseRate;\\r\\n        dailyInterestRate = _dailyRate;\\r\\n    }\\r\\n\\r\\n    /* WITHDRAW */\\r\\n\\r\\n    function withdrawProtocolFee(IERC20 _tokenAddress) public onlyOwner {//OK\\r\\n        require(allowedCrypto[_tokenAddress].isStable == true, \\\"Token not allowed\\\");\\r\\n\\r\\n        stablecoin = allowedCrypto[_tokenAddress].stablecoin;\\r\\n\\r\\n        uint amount = stablecoin.balanceOf(address(this));\\r\\n\\r\\n        // Revert if there is nothing to withdraw\\r\\n        if (amount == 0){\\r\\n            revert NothingToWithdraw();\\r\\n        }\\r\\n        \\r\\n        stablecoin.transfer(owner, amount);\\r\\n    }\\r\\n\\r\\n    /* GET FUNCTIONS */\\r\\n\\r\\n    function returnAvailableStablecoin(IERC20 _stablecoin) external returns(string memory, IERC20, bool){//ok\\r\\n        string memory symbol = allowedCrypto[_stablecoin].tokenSymbol;\\r\\n        stablecoin = allowedCrypto[_stablecoin].stablecoin;\\r\\n        bool isStable = allowedCrypto[_stablecoin].isStable;\\r\\n\\r\\n        return (symbol, stablecoin, isStable);\\r\\n    }\\r\\n\\r\\n    function returnPaymentDeadline(uint _scheduleId, uint _installmentNumber) external view returns(uint){ //OK\\r\\n        uint paymentDate = schedule[_scheduleId][_installmentNumber].dateOfPayment;\\r\\n        return paymentDate;\\r\\n    }\\r\\n\\r\\n    function returnDrawDate(uint _scheduleId, uint _installmentNumber) external view returns(uint){ //OK\\r\\n        uint drawDate = schedule[_scheduleId][_installmentNumber].dateOfDraw;\\r\\n        \\r\\n        return drawDate;\\r\\n    }\\r\\n\\r\\n    function returnDrawParticipants(uint _scheduleId, uint _drawNumber) public view returns(uint) {\\r\\n        Deadlines storage deadline = schedule[_scheduleId][_drawNumber];\\r\\n\\r\\n        return deadline.participants;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner,\\\"The caller must be the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa0e64fa966e97177be51836cebe569d62ea53bdfe0b79a6d22a47ace450045c0\",\"license\":\"MIT\"},\"contracts/HorizonVRF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.9 <=0.8.20;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\r\\n\\r\\ncontract HorizonVRF is VRFConsumerBaseV2{\\r\\n\\r\\n    event RequestSent(uint requestId, uint32 numWords, uint _titleId, uint _drawNumber, uint _totalPlayersAvailable);\\r\\n    event RequestFulfilled(uint256 requestId, uint256[] randomWords, uint randomValue);\\r\\n    event RandomValueUpdated(uint256 randomValue);\\r\\n\\r\\n    struct RequestStatus {\\r\\n        bool fulfilled;\\r\\n        bool exists;\\r\\n        uint256[] randomWords;\\r\\n        uint256 randomValue;\\r\\n    }\\r\\n    struct DrawInfos{\\r\\n        uint titleId;\\r\\n        uint drawNumber;\\r\\n        uint totalPlayersAvailable;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 requestId => RequestStatus) public s_requests;\\r\\n    mapping(uint256 requestId => DrawInfos) public s_draw;\\r\\n\\r\\n    //State variable\\r\\n    uint256 private randomValue;\\r\\n    address public owner;\\r\\n\\r\\n    // past requests Id.\\r\\n    uint256[] public requestIds;\\r\\n    uint256 public lastRequestId;\\r\\n    \\r\\n    VRFCoordinatorV2Interface COORDINATOR;\\r\\n    address vrfCoordinator;\\r\\n    bytes32 keyHash;\\r\\n    uint64 s_subscriptionId;\\r\\n    uint32 callbackGasLimit;\\r\\n    uint16 requestConfirmations;\\r\\n    uint32 numWords;\\r\\n\\r\\n    constructor(address _vrfCoordinator, //0x7a1BaC17Ccc5b313516C5E16fb24f7659aA5ebed\\r\\n                bytes32 _keyHash, //0x4b09e658ed251bcafeebbc69400383d49f344ace09b9576fe248bb02c003fe9f\\r\\n                uint64 _subscriptionId, //5413\\r\\n                uint32 _callbackGasLimit, //100000\\r\\n                uint16 _requestConfirmations, //3\\r\\n                uint32 _numWords //1\\r\\n               ) VRFConsumerBaseV2(_vrfCoordinator){\\r\\n        COORDINATOR = VRFCoordinatorV2Interface(_vrfCoordinator);\\r\\n        keyHash = _keyHash;\\r\\n        s_subscriptionId = _subscriptionId;\\r\\n        callbackGasLimit = _callbackGasLimit;\\r\\n        requestConfirmations = _requestConfirmations;\\r\\n        numWords = _numWords;\\r\\n    }\\r\\n\\r\\n    function requestRandomWords(uint _titleId, uint _drawNumber, uint256 _totalPlayersAvailable) external returns (uint256 requestId) {\\r\\n \\r\\n        requestId = COORDINATOR.requestRandomWords(keyHash, s_subscriptionId, requestConfirmations, callbackGasLimit, numWords);\\r\\n        s_requests[requestId] = RequestStatus({\\r\\n            randomWords: new uint256[](0),\\r\\n            exists: true,\\r\\n            fulfilled: false,\\r\\n            randomValue: 0\\r\\n        });\\r\\n\\r\\n        requestIds.push(requestId);\\r\\n        lastRequestId = requestId;\\r\\n\\r\\n        s_draw[requestId] = DrawInfos({\\r\\n            titleId: _titleId,\\r\\n            drawNumber: _drawNumber,\\r\\n            totalPlayersAvailable: _totalPlayersAvailable\\r\\n        });\\r\\n\\r\\n        emit RequestSent(requestId, numWords, _titleId, _drawNumber, _totalPlayersAvailable);\\r\\n        return requestId;\\r\\n    }\\r\\n\\r\\n    function fulfillRandomWords(uint256 _requestId, uint256[] memory _randomWords) internal override {\\r\\n        require(s_requests[_requestId].exists, \\\"request not found\\\");\\r\\n\\r\\n        s_requests[_requestId].fulfilled = true;\\r\\n        s_requests[_requestId].randomWords = _randomWords ;\\r\\n        s_requests[_requestId].randomValue = (_randomWords[0] % s_draw[_requestId].totalPlayersAvailable)+1;\\r\\n\\r\\n        emit RequestFulfilled(_requestId, _randomWords, s_requests[_requestId].randomValue);\\r\\n    }\\r\\n\\r\\n    function getRequestStatus(uint256 _requestId) external view returns (bool fulfilled, uint256[] memory randomWords, uint256 _randomValue) {\\r\\n        require(s_requests[_requestId].exists, \\\"request not found\\\");\\r\\n        RequestStatus memory request = s_requests[_requestId];\\r\\n        return (request.fulfilled, request.randomWords, request.randomValue);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xdff14c91536037929319ba9586334f304d52a065239d012e93701d9c40fb2aff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3661,"contract":"contracts/Horizon.sol:Horizon","label":"lastReceivedMessageId","offset":0,"slot":"0","type":"t_bytes32"},{"astId":3663,"contract":"contracts/Horizon.sol:Horizon","label":"lastReceivedText","offset":0,"slot":"1","type":"t_bytes_storage"},{"astId":3667,"contract":"contracts/Horizon.sol:Horizon","label":"whitelistedSourceChains","offset":0,"slot":"2","type":"t_mapping(t_uint64,t_bool)"},{"astId":3671,"contract":"contracts/Horizon.sol:Horizon","label":"whitelistedSenders","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"},{"astId":3674,"contract":"contracts/Horizon.sol:Horizon","label":"titleId","offset":0,"slot":"4","type":"t_uint256"},{"astId":3676,"contract":"contracts/Horizon.sol:Horizon","label":"amountToPay","offset":0,"slot":"5","type":"t_uint256"},{"astId":3678,"contract":"contracts/Horizon.sol:Horizon","label":"paymentDelay","offset":0,"slot":"6","type":"t_uint256"},{"astId":3680,"contract":"contracts/Horizon.sol:Horizon","label":"fujiReceiver","offset":0,"slot":"7","type":"t_address"},{"astId":3682,"contract":"contracts/Horizon.sol:Horizon","label":"owner","offset":0,"slot":"8","type":"t_address"},{"astId":3847,"contract":"contracts/Horizon.sol:Horizon","label":"status","offset":20,"slot":"8","type":"t_enum(TitleStatus)3844"},{"astId":3856,"contract":"contracts/Horizon.sol:Horizon","label":"myTitleStatus","offset":21,"slot":"8","type":"t_enum(MyTitleWithdraw)3853"},{"astId":3967,"contract":"contracts/Horizon.sol:Horizon","label":"stablecoin","offset":0,"slot":"9","type":"t_contract(IERC20)827"},{"astId":3970,"contract":"contracts/Horizon.sol:Horizon","label":"nftToken","offset":0,"slot":"10","type":"t_contract(IERC721)1953"},{"astId":3976,"contract":"contracts/Horizon.sol:Horizon","label":"staff","offset":0,"slot":"11","type":"t_contract(HorizonStaff)7750"},{"astId":3982,"contract":"contracts/Horizon.sol:Horizon","label":"vrfv2consumer","offset":0,"slot":"12","type":"t_contract(HorizonVRF)8040"},{"astId":3988,"contract":"contracts/Horizon.sol:Horizon","label":"receipt","offset":0,"slot":"13","type":"t_contract(HorizonReceipt)6417"},{"astId":3997,"contract":"contracts/Horizon.sol:Horizon","label":"sender","offset":0,"slot":"14","type":"t_contract(HorizonS)6966"},{"astId":4002,"contract":"contracts/Horizon.sol:Horizon","label":"allTitles","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_struct(Titles)3884_storage)"},{"astId":4009,"contract":"contracts/Horizon.sol:Horizon","label":"titleSoldInfos","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TitlesSold)3914_storage))"},{"astId":4016,"contract":"contracts/Horizon.sol:Horizon","label":"drawInfos","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Draw)3950_storage))"},{"astId":4025,"contract":"contracts/Horizon.sol:Horizon","label":"selectorVRF","offset":0,"slot":"18","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TitleRecord)3933_storage)))"},{"astId":4030,"contract":"contracts/Horizon.sol:Horizon","label":"permissionInfo","offset":0,"slot":"19","type":"t_mapping(t_bytes32,t_struct(FujiPermissions)3964_storage)"},{"astId":4037,"contract":"contracts/Horizon.sol:Horizon","label":"colateralInfos","offset":0,"slot":"20","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ColateralTitles)3957_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(HorizonReceipt)6417":{"encoding":"inplace","label":"contract HorizonReceipt","numberOfBytes":"20"},"t_contract(HorizonS)6966":{"encoding":"inplace","label":"contract HorizonS","numberOfBytes":"20"},"t_contract(HorizonStaff)7750":{"encoding":"inplace","label":"contract HorizonStaff","numberOfBytes":"20"},"t_contract(HorizonVRF)8040":{"encoding":"inplace","label":"contract HorizonVRF","numberOfBytes":"20"},"t_contract(IERC20)827":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(IERC721)1953":{"encoding":"inplace","label":"contract IERC721","numberOfBytes":"20"},"t_enum(MyTitleWithdraw)3853":{"encoding":"inplace","label":"enum Horizon.MyTitleWithdraw","numberOfBytes":"1"},"t_enum(TitleStatus)3844":{"encoding":"inplace","label":"enum Horizon.TitleStatus","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(FujiPermissions)3964_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct Horizon.FujiPermissions)","numberOfBytes":"32","value":"t_struct(FujiPermissions)3964_storage"},"t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TitleRecord)3933_storage)))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TitleRecord)3933_storage))"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(ColateralTitles)3957_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct Horizon.ColateralTitles))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(ColateralTitles)3957_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Draw)3950_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct Horizon.Draw))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Draw)3950_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TitleRecord)3933_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct Horizon.TitleRecord))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(TitleRecord)3933_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TitlesSold)3914_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct Horizon.TitlesSold))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(TitlesSold)3914_storage)"},"t_mapping(t_uint256,t_struct(ColateralTitles)3957_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Horizon.ColateralTitles)","numberOfBytes":"32","value":"t_struct(ColateralTitles)3957_storage"},"t_mapping(t_uint256,t_struct(Draw)3950_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Horizon.Draw)","numberOfBytes":"32","value":"t_struct(Draw)3950_storage"},"t_mapping(t_uint256,t_struct(TitleRecord)3933_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Horizon.TitleRecord)","numberOfBytes":"32","value":"t_struct(TitleRecord)3933_storage"},"t_mapping(t_uint256,t_struct(Titles)3884_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Horizon.Titles)","numberOfBytes":"32","value":"t_struct(Titles)3884_storage"},"t_mapping(t_uint256,t_struct(TitlesSold)3914_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Horizon.TitlesSold)","numberOfBytes":"32","value":"t_struct(TitlesSold)3914_storage"},"t_mapping(t_uint64,t_bool)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bool)","numberOfBytes":"32","value":"t_bool"},"t_struct(ColateralTitles)3957_storage":{"encoding":"inplace","label":"struct Horizon.ColateralTitles","members":[{"astId":3952,"contract":"contracts/Horizon.sol:Horizon","label":"colateralOwner","offset":0,"slot":"0","type":"t_address"},{"astId":3954,"contract":"contracts/Horizon.sol:Horizon","label":"titleIdOfColateral","offset":0,"slot":"1","type":"t_uint256"},{"astId":3956,"contract":"contracts/Horizon.sol:Horizon","label":"contractIdOfColateral","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(Draw)3950_storage":{"encoding":"inplace","label":"struct Horizon.Draw","members":[{"astId":3935,"contract":"contracts/Horizon.sol:Horizon","label":"idTitle","offset":0,"slot":"0","type":"t_uint256"},{"astId":3937,"contract":"contracts/Horizon.sol:Horizon","label":"drawNumber","offset":0,"slot":"1","type":"t_uint256"},{"astId":3939,"contract":"contracts/Horizon.sol:Horizon","label":"drawDate","offset":0,"slot":"2","type":"t_uint256"},{"astId":3941,"contract":"contracts/Horizon.sol:Horizon","label":"totalParticipants","offset":0,"slot":"3","type":"t_uint256"},{"astId":3943,"contract":"contracts/Horizon.sol:Horizon","label":"requestId","offset":0,"slot":"4","type":"t_uint256"},{"astId":3945,"contract":"contracts/Horizon.sol:Horizon","label":"randomNumberVRF","offset":0,"slot":"5","type":"t_uint256"},{"astId":3947,"contract":"contracts/Horizon.sol:Horizon","label":"selectedContractID","offset":0,"slot":"6","type":"t_uint256"},{"astId":3949,"contract":"contracts/Horizon.sol:Horizon","label":"winner","offset":0,"slot":"7","type":"t_address"}],"numberOfBytes":"256"},"t_struct(FujiPermissions)3964_storage":{"encoding":"inplace","label":"struct Horizon.FujiPermissions","members":[{"astId":3959,"contract":"contracts/Horizon.sol:Horizon","label":"idTitle","offset":0,"slot":"0","type":"t_uint256"},{"astId":3961,"contract":"contracts/Horizon.sol:Horizon","label":"contractId","offset":0,"slot":"1","type":"t_uint256"},{"astId":3963,"contract":"contracts/Horizon.sol:Horizon","label":"drawNumber","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(TitleRecord)3933_storage":{"encoding":"inplace","label":"struct Horizon.TitleRecord","members":[{"astId":3916,"contract":"contracts/Horizon.sol:Horizon","label":"contractId","offset":0,"slot":"0","type":"t_uint256"},{"astId":3918,"contract":"contracts/Horizon.sol:Horizon","label":"installmentNumber","offset":0,"slot":"1","type":"t_uint256"},{"astId":3920,"contract":"contracts/Horizon.sol:Horizon","label":"paymentDate","offset":0,"slot":"2","type":"t_uint256"},{"astId":3922,"contract":"contracts/Horizon.sol:Horizon","label":"payerAddress","offset":0,"slot":"3","type":"t_address"},{"astId":3924,"contract":"contracts/Horizon.sol:Horizon","label":"user","offset":0,"slot":"4","type":"t_address"},{"astId":3926,"contract":"contracts/Horizon.sol:Horizon","label":"amount","offset":0,"slot":"5","type":"t_uint256"},{"astId":3928,"contract":"contracts/Horizon.sol:Horizon","label":"paymentDelay","offset":0,"slot":"6","type":"t_uint256"},{"astId":3930,"contract":"contracts/Horizon.sol:Horizon","label":"paid","offset":0,"slot":"7","type":"t_bool"},{"astId":3932,"contract":"contracts/Horizon.sol:Horizon","label":"installmentsPaid","offset":0,"slot":"8","type":"t_uint256"}],"numberOfBytes":"288"},"t_struct(Titles)3884_storage":{"encoding":"inplace","label":"struct Horizon.Titles","members":[{"astId":3858,"contract":"contracts/Horizon.sol:Horizon","label":"openSellingDate","offset":0,"slot":"0","type":"t_uint256"},{"astId":3860,"contract":"contracts/Horizon.sol:Horizon","label":"closeSellingDate","offset":0,"slot":"1","type":"t_uint256"},{"astId":3862,"contract":"contracts/Horizon.sol:Horizon","label":"paymentSchedule","offset":0,"slot":"2","type":"t_uint256"},{"astId":3864,"contract":"contracts/Horizon.sol:Horizon","label":"nextDrawNumber","offset":0,"slot":"3","type":"t_uint256"},{"astId":3866,"contract":"contracts/Horizon.sol:Horizon","label":"titleValue","offset":0,"slot":"4","type":"t_uint256"},{"astId":3868,"contract":"contracts/Horizon.sol:Horizon","label":"installments","offset":0,"slot":"5","type":"t_uint256"},{"astId":3870,"contract":"contracts/Horizon.sol:Horizon","label":"monthlyInvestiment","offset":0,"slot":"6","type":"t_uint256"},{"astId":3872,"contract":"contracts/Horizon.sol:Horizon","label":"protocolFee","offset":0,"slot":"7","type":"t_uint256"},{"astId":3874,"contract":"contracts/Horizon.sol:Horizon","label":"numberOfTitlesSold","offset":0,"slot":"8","type":"t_uint256"},{"astId":3876,"contract":"contracts/Horizon.sol:Horizon","label":"totalValueReceived","offset":0,"slot":"9","type":"t_uint256"},{"astId":3878,"contract":"contracts/Horizon.sol:Horizon","label":"totalValuePaid","offset":0,"slot":"10","type":"t_uint256"},{"astId":3880,"contract":"contracts/Horizon.sol:Horizon","label":"titleCanceled","offset":0,"slot":"11","type":"t_uint256"},{"astId":3883,"contract":"contracts/Horizon.sol:Horizon","label":"status","offset":0,"slot":"12","type":"t_enum(TitleStatus)3844"}],"numberOfBytes":"416"},"t_struct(TitlesSold)3914_storage":{"encoding":"inplace","label":"struct Horizon.TitlesSold","members":[{"astId":3886,"contract":"contracts/Horizon.sol:Horizon","label":"contractId","offset":0,"slot":"0","type":"t_uint256"},{"astId":3888,"contract":"contracts/Horizon.sol:Horizon","label":"titleValue","offset":0,"slot":"1","type":"t_uint256"},{"astId":3890,"contract":"contracts/Horizon.sol:Horizon","label":"installments","offset":0,"slot":"2","type":"t_uint256"},{"astId":3892,"contract":"contracts/Horizon.sol:Horizon","label":"monthlyValue","offset":0,"slot":"3","type":"t_uint256"},{"astId":3894,"contract":"contracts/Horizon.sol:Horizon","label":"periodLocked","offset":0,"slot":"4","type":"t_uint256"},{"astId":3896,"contract":"contracts/Horizon.sol:Horizon","label":"titleOwner","offset":0,"slot":"5","type":"t_address"},{"astId":3898,"contract":"contracts/Horizon.sol:Horizon","label":"installmentsPaid","offset":0,"slot":"6","type":"t_uint256"},{"astId":3900,"contract":"contracts/Horizon.sol:Horizon","label":"drawSelected","offset":0,"slot":"7","type":"t_uint256"},{"astId":3902,"contract":"contracts/Horizon.sol:Horizon","label":"colateralId","offset":0,"slot":"8","type":"t_uint256"},{"astId":3904,"contract":"contracts/Horizon.sol:Horizon","label":"colateralTitleAddress","offset":0,"slot":"9","type":"t_address"},{"astId":3906,"contract":"contracts/Horizon.sol:Horizon","label":"colateralRWAAddress","offset":0,"slot":"10","type":"t_address"},{"astId":3908,"contract":"contracts/Horizon.sol:Horizon","label":"valueOfEnsuranceNeeded","offset":0,"slot":"11","type":"t_uint256"},{"astId":3911,"contract":"contracts/Horizon.sol:Horizon","label":"myTitleStatus","offset":0,"slot":"12","type":"t_enum(MyTitleWithdraw)3853"},{"astId":3913,"contract":"contracts/Horizon.sol:Horizon","label":"paid","offset":1,"slot":"12","type":"t_bool"}],"numberOfBytes":"416"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"notice":"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."},"getRouter()":{"notice":"Return the current router"},"supportsInterface(bytes4)":{"notice":"IERC165 supports an interfaceId"}},"version":1}}},"contracts/HorizonReceipt.sol":{"HorizonReceipt":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"uri","type":"string"}],"name":"safeMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"burn(uint256)":{"details":"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803462000311576001600160401b039060409080820183811182821017620002fb578252600e81526020926d121bdc9a5e9bdb949958d95a5c1d60921b84830152825183810181811083821117620002fb5784526003815262242d2960e91b85820152825190828211620002fb5760008054926001958685811c95168015620002f0575b89861014620002dc578190601f9586811162000289575b5089908683116001146200022557849262000219575b5050600019600383901b1c191690861b1781555b8151938411620002055784548581811c91168015620001fa575b88821014620001e6578381116200019e575b508692841160011462000138578394959650926200012c575b5050600019600383901b1c191690821b1790555b516111809081620003178239f35b0151905038806200010a565b9190601f1984169685845280842093905b8882106200018657505083859697106200016c575b505050811b0190556200011e565b015160001960f88460031b161c191690553880806200015e565b80878596829496860151815501950193019062000149565b8582528782208480870160051c8201928a8810620001dc575b0160051c019086905b828110620001d0575050620000f1565b838155018690620001c0565b92508192620001b7565b634e487b7160e01b82526022600452602482fd5b90607f1690620000df565b634e487b7160e01b81526041600452602490fd5b015190503880620000b1565b8480528a85208994509190601f198416865b8d82821062000272575050841162000258575b505050811b018155620000c5565b015160001960f88460031b161c191690553880806200024a565b8385015186558c9790950194938401930162000237565b9091508380528984208680850160051c8201928c8610620002d2575b918a91869594930160051c01915b828110620002c35750506200009b565b8681558594508a9101620002b3565b92508192620002a5565b634e487b7160e01b83526022600452602483fd5b94607f169462000084565b634e487b7160e01b600052604160045260246000fd5b600080fdfe60808060405260048036101561001457600080fd5b60003560e01c91826301ffc9a714610c225750816306fdde0314610b7f578163081812fc14610b44578163095ea7b314610a5757816323b872dd14610a4057816342842e0e14610a1257816342966c68146108b85781636352211e1461088957816370a082311461082f57816395d89b4114610750578163a22cb465146106ab578163b88d4fde14610640578163c87b56dd1461054f578163d204c45e14610121575063e985e9c5146100c657600080fd5b3461011c57604036600319011261011c576100df610ce6565b6100e7610cfc565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b600080fd5b3461011c57604036600319011261011c5761013a610ce6565b67ffffffffffffffff919060243583811161011c573660238201121561011c5761016d9036906024818601359101610db7565b9160075491600019831461053a576001830160075560405161018e81610d47565b600081526001600160a01b03821615610522576000848152600260205260409020546001600160a01b0316806104eb575b6001600160a01b0383166000818152600360209081526040808320805460010190558883526002909152812080546001600160a01b0319168317905586919083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a46104d357813b61038d575b5050816000526006602052604060002090835194851161037857506102548154610dee565b93601f8511610330575b602094508493601f82116001146102cd5793819293946000926102c2575b50508160011b916000199060031b1c19161790555b7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051838152a1604051908152f35b01519050858061027c565b601f1982169483600052866000209160005b878110610319575083600195969710610300575b505050811b019055610291565b015160001960f88460031b161c191690558580806102f3565b9192886001819286850151815501940192016102df565b816000526020600020601f820160051c8101956020831061036e575b601f0160051c01945b858110610362575061025e565b60008155600101610355565b909550859061034c565b604190634e487b7160e01b6000525260246000fd5b604095939194929551602081806103cc630a85bd0160e11b95868352338c84015260006024840152876044840152608060648401526084830190610ca6565b038160006001600160a01b038b165af16000918161048e575b5061044d5786863d15610445573d916103fd83610d9b565b9261040b6040519485610d79565b83523d6000602085013e5b8251928361043e57604051633250574960e11b81526001600160a01b03841681840152602490fd5b8390602001fd5b606091610416565b9395929491936001600160e01b0319160361046a5750848061022f565b604051633250574960e11b81526001600160a01b0390911691810191909152602490fd5b9091506020813d6020116104cb575b816104aa60209383610d79565b8101031261011c57516001600160e01b03198116810361011c5790886103e5565b3d915061049d565b6040516339e3563760e11b8152600081850152602490fd5b600085815260046020526040902080546001600160a01b0319169055806000526003602052604060002060001981540190556101bf565b604051633250574960e11b8152600081850152602490fd5b601182634e487b7160e01b6000525260246000fd5b3461011c576020908160031936011261011c573561056c81610fc7565b506000526006815260406000209060405191826000825461058c81610dee565b9384845260019186838216918260001461061e5750506001146105df575b50506105b892500383610d79565b60006040516105c681610d47565b526105db604051928284938452830190610ca6565b0390f35b85925060005281600020906000915b8583106106065750506105b8935082010185806105aa565b805483890185015287945086939092019181016105ee565b92509350506105b894915060ff191682840152151560051b82010185806105aa565b3461011c57608036600319011261011c57610659610ce6565b610661610cfc565b6044359060643567ffffffffffffffff811161011c573660238201121561011c576106a99481602461069893369301359101610db7565b926106a4838383610e28565b611002565b005b3461011c57604036600319011261011c576106c4610ce6565b6024359081151580920361011c576001600160a01b03169182156107385750336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b8152908101839052602490fd5b3461011c57600036600319011261011c576040516000600180549061077482610dee565b8085529181811690811561080857506001146107af575b6105db8461079b81860382610d79565b604051918291602083526020830190610ca6565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106107f057505050810160200161079b8261078b565b805460208587018101919091529093019281016107d8565b60ff191660208087019190915292151560051b8501909201925061079b915083905061078b565b3461011c57602036600319011261011c576001600160a01b03610850610ce6565b16908115610871575060005260036020526020604060002054604051908152f35b6024906000604051916322718ad960e21b8352820152fd5b3461011c57602036600319011261011c576108a660209135610fc7565b6040516001600160a01b039091168152f35b3461011c5760208060031936011261011c578135600081815260028352604090205490926001600160a01b0391821691331515908161096f575b50505060026000928261093c575b848452526040822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4005b600085815260046020526040902080546001600160a01b0319169055828452600381526040842084198154019055610900565b816109bb575b50156109825780806108f2565b915061099e5760249160405191637e27328960e01b8352820152fd5b6044916040519163177e802f60e01b835233908301526024820152fd5b338414915081156109ee575b81156109d5575b5085610975565b90508460005281845233906040600020541614856109ce565b90508260005260058452604060002033600052845260ff60406000205416906109c7565b3461011c576106a9610a2336610d12565b9060405192610a3184610d47565b600084526106a4838383610e28565b3461011c576106a9610a5136610d12565b91610e28565b3461011c57604036600319011261011c57610a70610ce6565b90602435610a7d81610fc7565b33151580610b31575b80610b04575b610aed576001600160a01b039384169382918591167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a46000526020526040600020906bffffffffffffffffffffffff60a01b825416179055600080f35b60405163a9fbf51f60e01b81523381850152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff6040600020541615610a8c565b506001600160a01b038116331415610a86565b3461011c57602036600319011261011c578035610b6081610fc7565b50600052602052602060018060a01b0360406000205416604051908152f35b3461011c57600036600319011261011c5760405160008054610ba081610dee565b808452906001908181169081156108085750600114610bc9576105db8461079b81860382610d79565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610c0a57505050810160200161079b8261078b565b80546020858701810191909152909301928101610bf2565b903461011c57602036600319011261011c57359063ffffffff60e01b821680920361011c57602091632483248360e11b8114908115610c63575b5015158152f35b6380ac58cd60e01b811491508115610c95575b8115610c84575b5083610c5c565b6301ffc9a760e01b14905083610c7d565b635b5e139f60e01b81149150610c76565b919082519283825260005b848110610cd2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610cb1565b600435906001600160a01b038216820361011c57565b602435906001600160a01b038216820361011c57565b606090600319011261011c576001600160a01b0390600435828116810361011c5791602435908116810361011c579060443590565b6020810190811067ffffffffffffffff821117610d6357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d6357604052565b67ffffffffffffffff8111610d6357601f01601f191660200190565b929192610dc382610d9b565b91610dd16040519384610d79565b82948184528183011161011c578281602093846000960137010152565b90600182811c92168015610e1e575b6020831014610e0857565b634e487b7160e01b600052602260045260246000fd5b91607f1691610dfd565b6001600160a01b039182169290918315610fae57600092828452826020956002875260409684888820541696879133151580610f18575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610ee5575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610ec45750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610e8b565b91939450915080610f6d575b15610f3457859291879138610e5f565b878688610f51576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610f92575b80610f245750858252600481523385898420541614610f24565b5086825260058152878220338352815260ff8883205416610f78565b604051633250574960e11b815260006004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115610fea575090565b60249060405190637e27328960e01b82526004820152fd5b813b61100f575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b0392831660248301526044820194909452608060648201526020959290911693909290839061105d906084830190610ca6565b039285816000958187895af1849181611106575b506110d1575050503d6000146110c9573d61108b81610d9b565b906110996040519283610d79565b81528091843d92013e5b805192836110c457604051633250574960e11b815260048101849052602490fd5b019050fd5b5060606110a3565b919450915063ffffffff60e01b16036110ee575038808080611009565b60249060405190633250574960e11b82526004820152fd5b9091508681813d8311611143575b61111e8183610d79565b8101031261113f57516001600160e01b03198116810361113f579038611071565b8480fd5b503d61111456fea2646970667358221220b89fd5179a19270bcdf17cb957f0c0c9bd5c4221f0f5431a6c5fef1dedcf0d6964736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x311 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP1 DUP3 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR PUSH3 0x2FB JUMPI DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 SWAP3 PUSH14 0x121BDC9A5E9BDB949958D95A5C1D PUSH1 0x92 SHL DUP5 DUP4 ADD MSTORE DUP3 MLOAD DUP4 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR PUSH3 0x2FB JUMPI DUP5 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x242D29 PUSH1 0xE9 SHL DUP6 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 DUP3 DUP3 GT PUSH3 0x2FB JUMPI PUSH1 0x0 DUP1 SLOAD SWAP3 PUSH1 0x1 SWAP6 DUP7 DUP6 DUP2 SHR SWAP6 AND DUP1 ISZERO PUSH3 0x2F0 JUMPI JUMPDEST DUP10 DUP7 LT EQ PUSH3 0x2DC JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH3 0x289 JUMPI JUMPDEST POP DUP10 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH3 0x225 JUMPI DUP5 SWAP3 PUSH3 0x219 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP2 SSTORE JUMPDEST DUP2 MLOAD SWAP4 DUP5 GT PUSH3 0x205 JUMPI DUP5 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x1FA JUMPI JUMPDEST DUP9 DUP3 LT EQ PUSH3 0x1E6 JUMPI DUP4 DUP2 GT PUSH3 0x19E JUMPI JUMPDEST POP DUP7 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x138 JUMPI DUP4 SWAP5 SWAP6 SWAP7 POP SWAP3 PUSH3 0x12C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST MLOAD PUSH2 0x1180 SWAP1 DUP2 PUSH3 0x317 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x10A JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP7 DUP6 DUP5 MSTORE DUP1 DUP5 KECCAK256 SWAP4 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH3 0x186 JUMPI POP POP DUP4 DUP6 SWAP7 SWAP8 LT PUSH3 0x16C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x11E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x15E JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x149 JUMP JUMPDEST DUP6 DUP3 MSTORE DUP8 DUP3 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP9 LT PUSH3 0x1DC JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1D0 JUMPI POP POP PUSH3 0xF1 JUMP JUMPDEST DUP4 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x1C0 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xDF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB1 JUMP JUMPDEST DUP5 DUP1 MSTORE DUP11 DUP6 KECCAK256 DUP10 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP7 JUMPDEST DUP14 DUP3 DUP3 LT PUSH3 0x272 JUMPI POP POP DUP5 GT PUSH3 0x258 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0xC5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x24A JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x237 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 DUP1 MSTORE DUP10 DUP5 KECCAK256 DUP7 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH3 0x2D2 JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2C3 JUMPI POP POP PUSH3 0x9B JUMP JUMPDEST DUP7 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2B3 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2A5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH3 0x84 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0xC22 JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xB7F JUMPI DUP2 PUSH4 0x81812FC EQ PUSH2 0xB44 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0xA57 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0xA40 JUMPI DUP2 PUSH4 0x42842E0E EQ PUSH2 0xA12 JUMPI DUP2 PUSH4 0x42966C68 EQ PUSH2 0x8B8 JUMPI DUP2 PUSH4 0x6352211E EQ PUSH2 0x889 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x82F JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x750 JUMPI DUP2 PUSH4 0xA22CB465 EQ PUSH2 0x6AB JUMPI DUP2 PUSH4 0xB88D4FDE EQ PUSH2 0x640 JUMPI DUP2 PUSH4 0xC87B56DD EQ PUSH2 0x54F JUMPI DUP2 PUSH4 0xD204C45E EQ PUSH2 0x121 JUMPI POP PUSH4 0xE985E9C5 EQ PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0xDF PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0xCFC JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0x13A PUSH2 0xCE6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x11C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x11C JUMPI PUSH2 0x16D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 DUP7 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xDB7 JUMP JUMPDEST SWAP2 PUSH1 0x7 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 EQ PUSH2 0x53A JUMPI PUSH1 0x1 DUP4 ADD PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD PUSH2 0x18E DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x4EB JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP9 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP7 SWAP2 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP1 LOG4 PUSH2 0x4D3 JUMPI DUP2 EXTCODESIZE PUSH2 0x38D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 MLOAD SWAP5 DUP6 GT PUSH2 0x378 JUMPI POP PUSH2 0x254 DUP2 SLOAD PUSH2 0xDEE JUMP JUMPDEST SWAP4 PUSH1 0x1F DUP6 GT PUSH2 0x330 JUMPI JUMPDEST PUSH1 0x20 SWAP5 POP DUP5 SWAP4 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2CD JUMPI SWAP4 DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2C2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x27C JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP5 DUP4 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x319 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x300 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x291 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 SWAP3 DUP9 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR DUP2 ADD SWAP6 PUSH1 0x20 DUP4 LT PUSH2 0x36E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP5 JUMPDEST DUP6 DUP2 LT PUSH2 0x362 JUMPI POP PUSH2 0x25E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x355 JUMP JUMPDEST SWAP1 SWAP6 POP DUP6 SWAP1 PUSH2 0x34C JUMP JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 SWAP6 SWAP4 SWAP2 SWAP5 SWAP3 SWAP6 MLOAD PUSH1 0x20 DUP2 DUP1 PUSH2 0x3CC PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 DUP7 DUP4 MSTORE CALLER DUP13 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP8 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0xCA6 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x48E JUMPI JUMPDEST POP PUSH2 0x44D JUMPI DUP7 DUP7 RETURNDATASIZE ISZERO PUSH2 0x445 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x3FD DUP4 PUSH2 0xD9B JUMP JUMPDEST SWAP3 PUSH2 0x40B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xD79 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 DUP5 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x416 JUMP JUMPDEST SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x46A JUMPI POP DUP5 DUP1 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4CB JUMPI JUMPDEST DUP2 PUSH2 0x4AA PUSH1 0x20 SWAP4 DUP4 PUSH2 0xD79 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x11C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x11C JUMPI SWAP1 DUP9 PUSH2 0x3E5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP6 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP6 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11C JUMPI CALLDATALOAD PUSH2 0x56C DUP2 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x58C DUP2 PUSH2 0xDEE JUMP JUMPDEST SWAP4 DUP5 DUP5 MSTORE PUSH1 0x1 SWAP2 DUP7 DUP4 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x61E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x5DF JUMPI JUMPDEST POP POP PUSH2 0x5B8 SWAP3 POP SUB DUP4 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x5C6 DUP2 PUSH2 0xD47 JUMP JUMPDEST MSTORE PUSH2 0x5DB PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0xCA6 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x606 JUMPI POP POP PUSH2 0x5B8 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x5AA JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x5EE JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x5B8 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x5AA JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0x659 PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x661 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x11C JUMPI PUSH2 0x6A9 SWAP5 DUP2 PUSH1 0x24 PUSH2 0x698 SWAP4 CALLDATASIZE SWAP4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xDB7 JUMP JUMPDEST SWAP3 PUSH2 0x6A4 DUP4 DUP4 DUP4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x1002 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0x6C4 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x11C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x738 JUMPI POP CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x774 DUP3 PUSH2 0xDEE JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x808 JUMPI POP PUSH1 0x1 EQ PUSH2 0x7AF JUMPI JUMPDEST PUSH2 0x5DB DUP5 PUSH2 0x79B DUP2 DUP7 SUB DUP3 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0x7F0 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x79B DUP3 PUSH2 0x78B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x79B SWAP2 POP DUP4 SWAP1 POP PUSH2 0x78B JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x850 PUSH2 0xCE6 JUMP JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x871 JUMPI POP PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0x8A6 PUSH1 0x20 SWAP2 CALLDATALOAD PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11C JUMPI DUP2 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 CALLER ISZERO ISZERO SWAP1 DUP2 PUSH2 0x96F JUMPI JUMPDEST POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP3 DUP3 PUSH2 0x93C JUMPI JUMPDEST DUP5 DUP5 MSTORE MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 STOP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP3 DUP5 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP5 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x900 JUMP JUMPDEST DUP2 PUSH2 0x9BB JUMPI JUMPDEST POP ISZERO PUSH2 0x982 JUMPI DUP1 DUP1 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x99E JUMPI PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER DUP5 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x9EE JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x9D5 JUMPI JUMPDEST POP DUP6 PUSH2 0x975 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x0 MSTORE DUP2 DUP5 MSTORE CALLER SWAP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND EQ DUP6 PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x9C7 JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH2 0x6A9 PUSH2 0xA23 CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xA31 DUP5 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x6A4 DUP4 DUP4 DUP4 PUSH2 0xE28 JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH2 0x6A9 PUSH2 0xA51 CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST SWAP2 PUSH2 0xE28 JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0xA70 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0xA7D DUP2 PUSH2 0xFC7 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0xB31 JUMPI JUMPDEST DUP1 PUSH2 0xB04 JUMPI JUMPDEST PUSH2 0xAED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 DUP3 SWAP2 DUP6 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP6 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xA8C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0xA86 JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI DUP1 CALLDATALOAD PUSH2 0xB60 DUP2 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0xBA0 DUP2 PUSH2 0xDEE JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x808 JUMPI POP PUSH1 0x1 EQ PUSH2 0xBC9 JUMPI PUSH2 0x5DB DUP5 PUSH2 0x79B DUP2 DUP7 SUB DUP3 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0xC0A JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x79B DUP3 PUSH2 0x78B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xBF2 JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x11C JUMPI PUSH1 0x20 SWAP2 PUSH4 0x24832483 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xC63 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0xC95 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xC84 JUMPI JUMPDEST POP DUP4 PUSH2 0xC5C JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xC7D JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0xC76 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xCD2 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11C JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11C JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x11C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x11C JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD63 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD63 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD63 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xDC3 DUP3 PUSH2 0xD9B JUMP JUMPDEST SWAP2 PUSH2 0xDD1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xD79 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x11C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xE1E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE08 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0xF18 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0xEE5 JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0xEC4 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0xE8B JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0xF6D JUMPI JUMPDEST ISZERO PUSH2 0xF34 JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0xE5F JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0xF51 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0xF92 JUMPI JUMPDEST DUP1 PUSH2 0xF24 JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0xF24 JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xFEA JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 EXTCODESIZE PUSH2 0x100F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x20 SWAP6 SWAP3 SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 PUSH2 0x105D SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0xCA6 JUMP JUMPDEST SUB SWAP3 DUP6 DUP2 PUSH1 0x0 SWAP6 DUP2 DUP8 DUP10 GAS CALL DUP5 SWAP2 DUP2 PUSH2 0x1106 JUMPI JUMPDEST POP PUSH2 0x10D1 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x10C9 JUMPI RETURNDATASIZE PUSH2 0x108B DUP2 PUSH2 0xD9B JUMP JUMPDEST SWAP1 PUSH2 0x1099 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xD79 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP2 DUP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP1 MLOAD SWAP3 DUP4 PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST POP PUSH1 0x60 PUSH2 0x10A3 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x10EE JUMPI POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1143 JUMPI JUMPDEST PUSH2 0x111E DUP2 DUP4 PUSH2 0xD79 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x113F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x113F JUMPI SWAP1 CODESIZE PUSH2 0x1071 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1114 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SWAP16 0xD5 OR SWAP11 NOT 0x27 SIGNEXTEND 0xCD CALL PUSH29 0xB957F0C0C9BD5C4221F0F5431A6C5FEF1DEDCF0D6964736F6C63430008 EQ STOP CALLER ","sourceMap":"280:896:27:-:0;;;;-1:-1:-1;;;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;280:896:27;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;;;-1:-1:-1;;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;280:896:27;;;;;;;;;;;;;;;;-1:-1:-1;;;280:896:27;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;-1:-1:-1;280:896:27;;-1:-1:-1;;280:896:27;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;-1:-1:-1;;;280:896:27;;;;;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;-1:-1:-1;280:896:27;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3302,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_9770":{"entryPoint":3324,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":3346,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_available_length_bytes":{"entryPoint":3511,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":3238,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":3483,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3566,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3449,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_18617":{"entryPoint":3399,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":null,"id":1705,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":4098,"id":1835,"parameterSlots":4,"returnSlots":0},"fun_requireOwned":{"entryPoint":4039,"id":1771,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":3624,"id":1144,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60808060405260048036101561001457600080fd5b60003560e01c91826301ffc9a714610c225750816306fdde0314610b7f578163081812fc14610b44578163095ea7b314610a5757816323b872dd14610a4057816342842e0e14610a1257816342966c68146108b85781636352211e1461088957816370a082311461082f57816395d89b4114610750578163a22cb465146106ab578163b88d4fde14610640578163c87b56dd1461054f578163d204c45e14610121575063e985e9c5146100c657600080fd5b3461011c57604036600319011261011c576100df610ce6565b6100e7610cfc565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b600080fd5b3461011c57604036600319011261011c5761013a610ce6565b67ffffffffffffffff919060243583811161011c573660238201121561011c5761016d9036906024818601359101610db7565b9160075491600019831461053a576001830160075560405161018e81610d47565b600081526001600160a01b03821615610522576000848152600260205260409020546001600160a01b0316806104eb575b6001600160a01b0383166000818152600360209081526040808320805460010190558883526002909152812080546001600160a01b0319168317905586919083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a46104d357813b61038d575b5050816000526006602052604060002090835194851161037857506102548154610dee565b93601f8511610330575b602094508493601f82116001146102cd5793819293946000926102c2575b50508160011b916000199060031b1c19161790555b7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051838152a1604051908152f35b01519050858061027c565b601f1982169483600052866000209160005b878110610319575083600195969710610300575b505050811b019055610291565b015160001960f88460031b161c191690558580806102f3565b9192886001819286850151815501940192016102df565b816000526020600020601f820160051c8101956020831061036e575b601f0160051c01945b858110610362575061025e565b60008155600101610355565b909550859061034c565b604190634e487b7160e01b6000525260246000fd5b604095939194929551602081806103cc630a85bd0160e11b95868352338c84015260006024840152876044840152608060648401526084830190610ca6565b038160006001600160a01b038b165af16000918161048e575b5061044d5786863d15610445573d916103fd83610d9b565b9261040b6040519485610d79565b83523d6000602085013e5b8251928361043e57604051633250574960e11b81526001600160a01b03841681840152602490fd5b8390602001fd5b606091610416565b9395929491936001600160e01b0319160361046a5750848061022f565b604051633250574960e11b81526001600160a01b0390911691810191909152602490fd5b9091506020813d6020116104cb575b816104aa60209383610d79565b8101031261011c57516001600160e01b03198116810361011c5790886103e5565b3d915061049d565b6040516339e3563760e11b8152600081850152602490fd5b600085815260046020526040902080546001600160a01b0319169055806000526003602052604060002060001981540190556101bf565b604051633250574960e11b8152600081850152602490fd5b601182634e487b7160e01b6000525260246000fd5b3461011c576020908160031936011261011c573561056c81610fc7565b506000526006815260406000209060405191826000825461058c81610dee565b9384845260019186838216918260001461061e5750506001146105df575b50506105b892500383610d79565b60006040516105c681610d47565b526105db604051928284938452830190610ca6565b0390f35b85925060005281600020906000915b8583106106065750506105b8935082010185806105aa565b805483890185015287945086939092019181016105ee565b92509350506105b894915060ff191682840152151560051b82010185806105aa565b3461011c57608036600319011261011c57610659610ce6565b610661610cfc565b6044359060643567ffffffffffffffff811161011c573660238201121561011c576106a99481602461069893369301359101610db7565b926106a4838383610e28565b611002565b005b3461011c57604036600319011261011c576106c4610ce6565b6024359081151580920361011c576001600160a01b03169182156107385750336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b8152908101839052602490fd5b3461011c57600036600319011261011c576040516000600180549061077482610dee565b8085529181811690811561080857506001146107af575b6105db8461079b81860382610d79565b604051918291602083526020830190610ca6565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8284106107f057505050810160200161079b8261078b565b805460208587018101919091529093019281016107d8565b60ff191660208087019190915292151560051b8501909201925061079b915083905061078b565b3461011c57602036600319011261011c576001600160a01b03610850610ce6565b16908115610871575060005260036020526020604060002054604051908152f35b6024906000604051916322718ad960e21b8352820152fd5b3461011c57602036600319011261011c576108a660209135610fc7565b6040516001600160a01b039091168152f35b3461011c5760208060031936011261011c578135600081815260028352604090205490926001600160a01b0391821691331515908161096f575b50505060026000928261093c575b848452526040822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4005b600085815260046020526040902080546001600160a01b0319169055828452600381526040842084198154019055610900565b816109bb575b50156109825780806108f2565b915061099e5760249160405191637e27328960e01b8352820152fd5b6044916040519163177e802f60e01b835233908301526024820152fd5b338414915081156109ee575b81156109d5575b5085610975565b90508460005281845233906040600020541614856109ce565b90508260005260058452604060002033600052845260ff60406000205416906109c7565b3461011c576106a9610a2336610d12565b9060405192610a3184610d47565b600084526106a4838383610e28565b3461011c576106a9610a5136610d12565b91610e28565b3461011c57604036600319011261011c57610a70610ce6565b90602435610a7d81610fc7565b33151580610b31575b80610b04575b610aed576001600160a01b039384169382918591167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a46000526020526040600020906bffffffffffffffffffffffff60a01b825416179055600080f35b60405163a9fbf51f60e01b81523381850152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff6040600020541615610a8c565b506001600160a01b038116331415610a86565b3461011c57602036600319011261011c578035610b6081610fc7565b50600052602052602060018060a01b0360406000205416604051908152f35b3461011c57600036600319011261011c5760405160008054610ba081610dee565b808452906001908181169081156108085750600114610bc9576105db8461079b81860382610d79565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610c0a57505050810160200161079b8261078b565b80546020858701810191909152909301928101610bf2565b903461011c57602036600319011261011c57359063ffffffff60e01b821680920361011c57602091632483248360e11b8114908115610c63575b5015158152f35b6380ac58cd60e01b811491508115610c95575b8115610c84575b5083610c5c565b6301ffc9a760e01b14905083610c7d565b635b5e139f60e01b81149150610c76565b919082519283825260005b848110610cd2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610cb1565b600435906001600160a01b038216820361011c57565b602435906001600160a01b038216820361011c57565b606090600319011261011c576001600160a01b0390600435828116810361011c5791602435908116810361011c579060443590565b6020810190811067ffffffffffffffff821117610d6357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d6357604052565b67ffffffffffffffff8111610d6357601f01601f191660200190565b929192610dc382610d9b565b91610dd16040519384610d79565b82948184528183011161011c578281602093846000960137010152565b90600182811c92168015610e1e575b6020831014610e0857565b634e487b7160e01b600052602260045260246000fd5b91607f1691610dfd565b6001600160a01b039182169290918315610fae57600092828452826020956002875260409684888820541696879133151580610f18575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610ee5575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610ec45750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610e8b565b91939450915080610f6d575b15610f3457859291879138610e5f565b878688610f51576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610f92575b80610f245750858252600481523385898420541614610f24565b5086825260058152878220338352815260ff8883205416610f78565b604051633250574960e11b815260006004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115610fea575090565b60249060405190637e27328960e01b82526004820152fd5b813b61100f575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b0392831660248301526044820194909452608060648201526020959290911693909290839061105d906084830190610ca6565b039285816000958187895af1849181611106575b506110d1575050503d6000146110c9573d61108b81610d9b565b906110996040519283610d79565b81528091843d92013e5b805192836110c457604051633250574960e11b815260048101849052602490fd5b019050fd5b5060606110a3565b919450915063ffffffff60e01b16036110ee575038808080611009565b60249060405190633250574960e11b82526004820152fd5b9091508681813d8311611143575b61111e8183610d79565b8101031261113f57516001600160e01b03198116810361113f579038611071565b8480fd5b503d61111456fea2646970667358221220b89fd5179a19270bcdf17cb957f0c0c9bd5c4221f0f5431a6c5fef1dedcf0d6964736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0xC22 JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xB7F JUMPI DUP2 PUSH4 0x81812FC EQ PUSH2 0xB44 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0xA57 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0xA40 JUMPI DUP2 PUSH4 0x42842E0E EQ PUSH2 0xA12 JUMPI DUP2 PUSH4 0x42966C68 EQ PUSH2 0x8B8 JUMPI DUP2 PUSH4 0x6352211E EQ PUSH2 0x889 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x82F JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x750 JUMPI DUP2 PUSH4 0xA22CB465 EQ PUSH2 0x6AB JUMPI DUP2 PUSH4 0xB88D4FDE EQ PUSH2 0x640 JUMPI DUP2 PUSH4 0xC87B56DD EQ PUSH2 0x54F JUMPI DUP2 PUSH4 0xD204C45E EQ PUSH2 0x121 JUMPI POP PUSH4 0xE985E9C5 EQ PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0xDF PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0xCFC JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0x13A PUSH2 0xCE6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x11C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x11C JUMPI PUSH2 0x16D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 DUP7 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xDB7 JUMP JUMPDEST SWAP2 PUSH1 0x7 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 EQ PUSH2 0x53A JUMPI PUSH1 0x1 DUP4 ADD PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD PUSH2 0x18E DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x4EB JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP9 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP7 SWAP2 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP1 LOG4 PUSH2 0x4D3 JUMPI DUP2 EXTCODESIZE PUSH2 0x38D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 MLOAD SWAP5 DUP6 GT PUSH2 0x378 JUMPI POP PUSH2 0x254 DUP2 SLOAD PUSH2 0xDEE JUMP JUMPDEST SWAP4 PUSH1 0x1F DUP6 GT PUSH2 0x330 JUMPI JUMPDEST PUSH1 0x20 SWAP5 POP DUP5 SWAP4 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2CD JUMPI SWAP4 DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2C2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x27C JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP5 DUP4 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x319 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x300 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x291 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x2F3 JUMP JUMPDEST SWAP2 SWAP3 DUP9 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR DUP2 ADD SWAP6 PUSH1 0x20 DUP4 LT PUSH2 0x36E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP5 JUMPDEST DUP6 DUP2 LT PUSH2 0x362 JUMPI POP PUSH2 0x25E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x355 JUMP JUMPDEST SWAP1 SWAP6 POP DUP6 SWAP1 PUSH2 0x34C JUMP JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 SWAP6 SWAP4 SWAP2 SWAP5 SWAP3 SWAP6 MLOAD PUSH1 0x20 DUP2 DUP1 PUSH2 0x3CC PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 DUP7 DUP4 MSTORE CALLER DUP13 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP8 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0xCA6 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x48E JUMPI JUMPDEST POP PUSH2 0x44D JUMPI DUP7 DUP7 RETURNDATASIZE ISZERO PUSH2 0x445 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x3FD DUP4 PUSH2 0xD9B JUMP JUMPDEST SWAP3 PUSH2 0x40B PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xD79 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 DUP5 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x416 JUMP JUMPDEST SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x46A JUMPI POP DUP5 DUP1 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4CB JUMPI JUMPDEST DUP2 PUSH2 0x4AA PUSH1 0x20 SWAP4 DUP4 PUSH2 0xD79 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x11C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x11C JUMPI SWAP1 DUP9 PUSH2 0x3E5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP6 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP6 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11C JUMPI CALLDATALOAD PUSH2 0x56C DUP2 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x58C DUP2 PUSH2 0xDEE JUMP JUMPDEST SWAP4 DUP5 DUP5 MSTORE PUSH1 0x1 SWAP2 DUP7 DUP4 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x61E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x5DF JUMPI JUMPDEST POP POP PUSH2 0x5B8 SWAP3 POP SUB DUP4 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x5C6 DUP2 PUSH2 0xD47 JUMP JUMPDEST MSTORE PUSH2 0x5DB PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0xCA6 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP6 SWAP3 POP PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x606 JUMPI POP POP PUSH2 0x5B8 SWAP4 POP DUP3 ADD ADD DUP6 DUP1 PUSH2 0x5AA JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x5EE JUMP JUMPDEST SWAP3 POP SWAP4 POP POP PUSH2 0x5B8 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 DUP1 PUSH2 0x5AA JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0x659 PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x661 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x11C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x11C JUMPI PUSH2 0x6A9 SWAP5 DUP2 PUSH1 0x24 PUSH2 0x698 SWAP4 CALLDATASIZE SWAP4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xDB7 JUMP JUMPDEST SWAP3 PUSH2 0x6A4 DUP4 DUP4 DUP4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x1002 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0x6C4 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x11C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x738 JUMPI POP CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x774 DUP3 PUSH2 0xDEE JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x808 JUMPI POP PUSH1 0x1 EQ PUSH2 0x7AF JUMPI JUMPDEST PUSH2 0x5DB DUP5 PUSH2 0x79B DUP2 DUP7 SUB DUP3 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0x7F0 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x79B DUP3 PUSH2 0x78B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x79B SWAP2 POP DUP4 SWAP1 POP PUSH2 0x78B JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x850 PUSH2 0xCE6 JUMP JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x871 JUMPI POP PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0x8A6 PUSH1 0x20 SWAP2 CALLDATALOAD PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11C JUMPI DUP2 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 CALLER ISZERO ISZERO SWAP1 DUP2 PUSH2 0x96F JUMPI JUMPDEST POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP3 DUP3 PUSH2 0x93C JUMPI JUMPDEST DUP5 DUP5 MSTORE MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 STOP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP3 DUP5 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP5 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x900 JUMP JUMPDEST DUP2 PUSH2 0x9BB JUMPI JUMPDEST POP ISZERO PUSH2 0x982 JUMPI DUP1 DUP1 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x99E JUMPI PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER DUP5 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x9EE JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x9D5 JUMPI JUMPDEST POP DUP6 PUSH2 0x975 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x0 MSTORE DUP2 DUP5 MSTORE CALLER SWAP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND EQ DUP6 PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 PUSH2 0x9C7 JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH2 0x6A9 PUSH2 0xA23 CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xA31 DUP5 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x6A4 DUP4 DUP4 DUP4 PUSH2 0xE28 JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH2 0x6A9 PUSH2 0xA51 CALLDATASIZE PUSH2 0xD12 JUMP JUMPDEST SWAP2 PUSH2 0xE28 JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH2 0xA70 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH2 0xA7D DUP2 PUSH2 0xFC7 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0xB31 JUMPI JUMPDEST DUP1 PUSH2 0xB04 JUMPI JUMPDEST PUSH2 0xAED JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 DUP3 SWAP2 DUP6 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP6 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xA8C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0xA86 JUMP JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI DUP1 CALLDATALOAD PUSH2 0xB60 DUP2 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0xBA0 DUP2 PUSH2 0xDEE JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x808 JUMPI POP PUSH1 0x1 EQ PUSH2 0xBC9 JUMPI PUSH2 0x5DB DUP5 PUSH2 0x79B DUP2 DUP7 SUB DUP3 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP3 POP PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0xC0A JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x79B DUP3 PUSH2 0x78B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xBF2 JUMP JUMPDEST SWAP1 CALLVALUE PUSH2 0x11C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x11C JUMPI PUSH1 0x20 SWAP2 PUSH4 0x24832483 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xC63 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0xC95 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xC84 JUMPI JUMPDEST POP DUP4 PUSH2 0xC5C JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0xC7D JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0xC76 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xCD2 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11C JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11C JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x11C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x11C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x11C JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD63 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD63 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD63 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xDC3 DUP3 PUSH2 0xD9B JUMP JUMPDEST SWAP2 PUSH2 0xDD1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xD79 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x11C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xE1E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE08 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0xF18 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0xEE5 JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0xEC4 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0xE8B JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0xF6D JUMPI JUMPDEST ISZERO PUSH2 0xF34 JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0xE5F JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0xF51 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0xF92 JUMPI JUMPDEST DUP1 PUSH2 0xF24 JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0xF24 JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xFEA JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 EXTCODESIZE PUSH2 0x100F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x20 SWAP6 SWAP3 SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 PUSH2 0x105D SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0xCA6 JUMP JUMPDEST SUB SWAP3 DUP6 DUP2 PUSH1 0x0 SWAP6 DUP2 DUP8 DUP10 GAS CALL DUP5 SWAP2 DUP2 PUSH2 0x1106 JUMPI JUMPDEST POP PUSH2 0x10D1 JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0x10C9 JUMPI RETURNDATASIZE PUSH2 0x108B DUP2 PUSH2 0xD9B JUMP JUMPDEST SWAP1 PUSH2 0x1099 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xD79 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP2 DUP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP1 MLOAD SWAP3 DUP4 PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST POP PUSH1 0x60 PUSH2 0x10A3 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0x10EE JUMPI POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1143 JUMPI JUMPDEST PUSH2 0x111E DUP2 DUP4 PUSH2 0xD79 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x113F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x113F JUMPI SWAP1 CODESIZE PUSH2 0x1071 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1114 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SWAP16 0xD5 OR SWAP11 NOT 0x27 SIGNEXTEND 0xCD CALL PUSH29 0xB957F0C0C9BD5C4221F0F5431A6C5FEF1DEDCF0D6964736F6C63430008 EQ STOP CALLER ","sourceMap":"280:896:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;280:896:27;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;4039:18:14;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;280:896:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;560:14;280:896;;;;;;;;;;;560:14;280:896;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;280:896:27;;10022:16:14;10018:87;;280:896:27;;;;5799:7:14;280:896:27;;;;;;-1:-1:-1;;;;;280:896:27;;9157:256:14;;280:896:27;-1:-1:-1;;;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;5799:7:14;280:896:27;;;;;;;-1:-1:-1;;;;;;280:896:27;;;;;;;;9577:27:14;;;;280:896:27;9577:27:14;10180:96;;17034:14;;17030:664;;280:896:27;;;;;;2013:10:18;280:896:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2059:23:18;280:896:27;;;;;;2059:23:18;280:896:27;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;;;;17030:664:14;280:896:27;;;;;;;;;;;;;;;17072:71:14;;;;735:10:20;17072:71:14;;;280:896:27;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:14;280:896:27;;-1:-1:-1;;;;;280:896:27;;17072:71:14;;280:896:27;;17072:71:14;;;17030:664;-1:-1:-1;17068:616:14;;17331:353;;280:896:27;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;17381:18:14;;;280:896:27;;-1:-1:-1;;;17430:25:14;;-1:-1:-1;;;;;280:896:27;;17430:25:14;;;280:896:27;;;17430:25:14;17377:293;17557:95;;280:896:27;17557:95:14;;280:896:27;;;;;17068:616:14;280:896:27;;;;;;-1:-1:-1;;;;;;280:896:27;17190:51:14;17186:130;;17068:616;17030:664;;;;17186:130;280:896:27;;-1:-1:-1;;;17272:25:14;;-1:-1:-1;;;;;280:896:27;;;17272:25:14;;;280:896:27;;;;;;17272:25:14;17072:71;;;;280:896:27;17072:71:14;;280:896:27;17072:71:14;;;;;;280:896:27;17072:71:14;;;:::i;:::-;;;280:896:27;;;;;-1:-1:-1;;;;;;280:896:27;;;;;;17072:71:14;;;;;;;-1:-1:-1;17072:71:14;;10180:96;280:896:27;;-1:-1:-1;;;10234:31:14;;280:896:27;10234:31:14;;;280:896:27;;;10234:31:14;9157:256;280:896:27;;;;15346:15:14;280:896:27;;;;;;;-1:-1:-1;;;;;;280:896:27;;;;;;;;;;;;;;;;;;;9157:256:14;;10018:87;280:896:27;;-1:-1:-1;;;10061:33:14;;280:896:27;10061:33:14;;;280:896:27;;;10061:33:14;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:22:18;;;:::i;:::-;;280:896:27;;1367:10:18;280:896:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;280:896:27;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5181:4:14;280:896:27;;;;;;;;;;;;:::i;:::-;5121:7:14;;;;;;:::i;:::-;5181:4;:::i;:::-;280:896:27;;;;;;;-1:-1:-1;;280:896:27;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;280:896:27;;15698:22:14;;15694:91;;735:10:20;;280:896:27;;15794:18:14;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15855:41:14;280:896:27;735:10:20;15855:41:14;;280:896:27;15694:91:14;280:896:27;;-1:-1:-1;;;15743:31:14;;;;;280:896:27;;;;;15743:31:14;280:896:27;;;;;;-1:-1:-1;;280:896:27;;;;;;;2597:7:14;280:896:27;;;;;;:::i;:::-;;;;;;;;;2597:7:14;;;;280:896:27;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;280:896:27;;;;;;;-1:-1:-1;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;280:896:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;-1:-1:-1;280:896:27;;-1:-1:-1;280:896:27;;;;;;;;-1:-1:-1;;280:896:27;;;;-1:-1:-1;;;;;280:896:27;;:::i;:::-;;2006:19:14;;;2002:87;;280:896:27;;;;;;;;;;;;;;;;;2002:87:14;280:896:27;;;;;2048:30:14;;;;;;;;280:896:27;2048:30:14;280:896:27;;;;;;-1:-1:-1;;280:896:27;;;;2274:22:14;280:896:27;;;2274:22:14;:::i;:::-;280:896:27;;-1:-1:-1;;;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;5799:7:14;280:896:27;;;;;;;;-1:-1:-1;;;;;280:896:27;;;;735:10:20;9035:18:14;;;;9031:86;;280:896:27;9161:18:14;;;5799:7;280:896:27;9161:18:14;;9157:256;;280:896:27;;;;;;;;;;-1:-1:-1;;;;;;280:896:27;;;9577:27:14;280:896:27;;9577:27:14;280:896:27;9157:256:14;280:896:27;;;;15346:15:14;280:896:27;;;;;;;-1:-1:-1;;;;;;280:896:27;;;;;;;;;;;;;;;;;;;9157:256:14;;9031:86;6514:127;;;9031:86;7193:39;;7189:255;;9031:86;;;;7189:255;7252:19;-1:-1:-1;280:896:27;;;;;;7298:31:14;;;;;;;;280:896:27;7298:31:14;7248:186;280:896:27;;;;7375:44:14;;;;;;735:10:20;7375:44:14;;;280:896:27;;;;;7375:44:14;6514:127;735:10:20;6552:16:14;;;-1:-1:-1;6552:52:14;;;;6514:127;6552:88;;;;6514:127;;;;;6552:88;280:896:27;;;;;;;;735:10:20;280:896:27;;;;;;6608:32:14;6552:88;;;:52;280:896:27;;;;;4039:18:14;280:896:27;;;;;735:10:20;280:896:27;;;;;;;;;;6552:52:14;;;280:896:27;;;;5181:4:14;280:896:27;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5121:7:14;;;;;:::i;280:896:27:-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;280:896:27;;;;;;:::i;:::-;;;;14943:22:14;;;:::i;:::-;735:10:20;15093:18:14;;:35;;;280:896:27;15093:69:14;;;280:896:27;15089:142:14;;-1:-1:-1;;;;;280:896:27;;;;;;;;;15283:28:14;280:896:27;;15283:28:14;280:896:27;;;;;;;;;;;;;;;;;;;;15089:142:14;280:896:27;;-1:-1:-1;;;15189:27:14;;735:10:20;15189:27:14;;;280:896:27;;;15189:27:14;15093:69;280:896:27;;;;;;;;;;4039:18:14;280:896:27;;;;;735:10:20;280:896:27;;;;;;;;;;15132:30:14;15093:69;;:35;-1:-1:-1;;;;;;280:896:27;;735:10:20;15115:13:14;;15093:35;;280:896:27;;;;;;-1:-1:-1;;280:896:27;;;;;;3583:22:14;;;:::i;:::-;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;280:896:27;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;280:896:27;;;;;;;-1:-1:-1;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;280:896:27;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1062:35:18;;;:75;;;;280:896:27;;;;;;;1062:75:18;-1:-1:-1;;;1698:40:14;;;-1:-1:-1;1698:104:14;;;;1062:75:18;1698:156:14;;;;1062:75:18;;;;;1698:156:14;-1:-1:-1;;;861:40:22;;-1:-1:-1;1698:156:14;;;:104;-1:-1:-1;;;1754:48:14;;;-1:-1:-1;1698:104:14;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;280:896:27;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;280:896:27;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;280:896:27;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;280:896:27;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;280:896:27;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;4143:578:14;-1:-1:-1;;;;;280:896:27;;;;4143:578:14;;4237:16;;4233:87;;-1:-1:-1;280:896:27;;;;;;;5799:7:14;280:896:27;;;;;;;;;;735:10:20;;;;9035:18:14;;9031:86;;;4143:578;9161:18;;5799:7;9577:27;9161:18;;9157:256;;4143:578;280:896:27;;;9487:9:14;280:896:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;280:896:27;;;;;;9577:27:14;280:896:27;4610:21:14;;;;4606:109;;4143:578;;;;:::o;4606:109::-;280:896:27;;;;4654:50:14;;;;;;;;;280:896:27;;;;;;;;;4654:50:14;9157:256;280:896:27;;;;15346:15:14;280:896:27;;;;;;;-1:-1:-1;;;;;;280:896:27;;;;;;9368:9:14;280:896:27;;;;;;;-1:-1:-1;;280:896:27;;;9157:256:14;;9031:86;6514:127;;;;;;;;;9031:86;7193:39;7189:255;;9031:86;;;;;;;;7189:255;7252:19;;;280:896:27;;;;;7298:31:14;;;;;;;;;280:896:27;7298:31:14;7248:186;280:896:27;;;7375:44:14;;;;;;735:10:20;7375:44:14;;;280:896:27;;;;;7375:44:14;6514:127;735:10:20;;6552:16:14;;:52;;;;6514:127;6552:88;6514:127;6552:88;280:896:27;;;;6034:15:14;280:896:27;;735:10:20;280:896:27;;;;;;6608:32:14;6514:127;;6552:52;280:896:27;;;;4039:18:14;280:896:27;;;;;735:10:20;280:896:27;;;;;;;;;;6552:52:14;;4233:87;280:896:27;;-1:-1:-1;;;4276:33:14;;4251:1;4276:33;;;280:896:27;;;4276:33:14;16138:241;-1:-1:-1;280:896:27;;;5799:7:14;280:896:27;;;;;;-1:-1:-1;;;;;280:896:27;;16267:19:14;;16263:88;;16360:12;16138:241;:::o;16263:88::-;280:896:27;;;;7298:31:14;;;;16309;;;;;280:896:27;16309:31:14;16918:782;17034:14;;17030:664;;16918:782;;;;;:::o;17030:664::-;280:896:27;;-1:-1:-1;;;17072:71:14;;;735:10:20;17072:71:14;;;280:896:27;-1:-1:-1;;;;;280:896:27;;;;;;;;;;;;;;;;;;;17072:71:14;;280:896:27;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:14;17051:1;;;;17072:71;;;;;;;;;;;17030:664;-1:-1:-1;17068:616:14;;17331:353;;;280:896:27;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;17381:18:14;;;280:896:27;;-1:-1:-1;;;17430:25:14;;17072:71;17430:25;;280:896:27;;;;;17430:25:14;17377:293;17557:95;;-1:-1:-1;17557:95:14;280:896:27;;;;;17068:616:14;280:896:27;;;;;;;;;17190:51:14;17186:130;;17068:616;17030:664;;;;;;17186:130;280:896:27;;;;10061:33:14;;;;17272:25;;17072:71;17272:25;;280:896:27;17272:25:14;17072:71;;;;;;;;;;;;;;;;;:::i;:::-;;;280:896:27;;;;;-1:-1:-1;;;;;;280:896:27;;;;;;17072:71:14;;;;280:896:27;;;;17072:71:14;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"896000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"31106","balanceOf(address)":"2612","burn(uint256)":"81871","getApproved(uint256)":"4629","isApprovedForAll(address,address)":"2879","name()":"infinite","ownerOf(uint256)":"2577","safeMint(address,string)":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26652","supportsInterface(bytes4)":"383","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"106388"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeMint(address,string)":"d204c45e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HorizonReceipt.sol\":\"HorizonReceipt\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        _update(address(0), tokenId, _msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xc48434419baa510862ba4b4802bc0500ccddadd02ae2f195548af748c3206b20\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Strings} from \\\"../../../utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"../../../interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"../../../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 tokenId => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        _tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"contracts/HorizonReceipt.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\\\";\\r\\n\\r\\ncontract HorizonReceipt is ERC721, ERC721URIStorage, ERC721Burnable {\\r\\n    uint256 private _nextTokenId;\\r\\n\\r\\n    constructor()\\r\\n        ERC721(\\\"HorizonReceipt\\\", \\\"HZR\\\")\\r\\n    {}\\r\\n\\r\\n    function safeMint(address to, string memory uri) public returns(uint){\\r\\n        uint256 tokenId = _nextTokenId++;\\r\\n        _safeMint(to, tokenId);\\r\\n        _setTokenURI(tokenId, uri);\\r\\n\\r\\n        return tokenId;\\r\\n    }\\r\\n\\r\\n    // The following functions are overrides required by Solidity.\\r\\n\\r\\n    function tokenURI(uint256 tokenId)\\r\\n        public\\r\\n        view\\r\\n        override(ERC721, ERC721URIStorage)\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return super.tokenURI(tokenId);\\r\\n    }\\r\\n\\r\\n    function supportsInterface(bytes4 interfaceId)\\r\\n        public\\r\\n        view\\r\\n        override(ERC721, ERC721URIStorage)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return super.supportsInterface(interfaceId);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x23e2d6d33d8d936655002b10cf71ec4c9681a35fb146383825f932b0e2ff0b4c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":860,"contract":"contracts/HorizonReceipt.sol:HorizonReceipt","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":862,"contract":"contracts/HorizonReceipt.sol:HorizonReceipt","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":866,"contract":"contracts/HorizonReceipt.sol:HorizonReceipt","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":870,"contract":"contracts/HorizonReceipt.sol:HorizonReceipt","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":874,"contract":"contracts/HorizonReceipt.sol:HorizonReceipt","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":880,"contract":"contracts/HorizonReceipt.sol:HorizonReceipt","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2028,"contract":"contracts/HorizonReceipt.sol:HorizonReceipt","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":6349,"contract":"contracts/HorizonReceipt.sol:HorizonReceipt","label":"_nextTokenId","offset":0,"slot":"7","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HorizonS.sol":{"HorizonS":{"abi":[{"inputs":[{"internalType":"address","name":"_router","type":"address"},{"internalType":"address","name":"_linkToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint64","name":"destinationChainSelector","type":"uint64"}],"name":"DestinationChainNotWhitelisted","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"FailedToWithdrawEth","type":"error"},{"inputs":[{"internalType":"address","name":"router","type":"address"}],"name":"InvalidRouter","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"calculatedFees","type":"uint256"}],"name":"NotEnoughBalance","type":"error"},{"inputs":[],"name":"NothingToWithdraw","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"blockchainName","type":"string"},{"indexed":false,"internalType":"address","name":"receiverAddress","type":"address"}],"name":"CCIPReceiverAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_receiverAddress","type":"address"}],"name":"CCIPReceiverRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"messageId","type":"bytes32"},{"indexed":true,"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"string","name":"text","type":"string"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"MessageReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"messageId","type":"bytes32"},{"indexed":true,"internalType":"uint64","name":"destinationChainSelector","type":"uint64"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"bytes","name":"text","type":"bytes"},{"indexed":false,"internalType":"address","name":"feeToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"fees","type":"uint256"}],"name":"MessageSent","type":"event"},{"inputs":[{"internalType":"string","name":"_blockchainName","type":"string"},{"internalType":"address","name":"_receiverAddress","type":"address"}],"name":"addReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"}],"name":"ccipReceicers","outputs":[{"internalType":"string","name":"blockchainName","type":"string"},{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"bool","name":"isReceiver","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]"}],"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple"}],"name":"ccipReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_destinationChainSelector","type":"uint64"}],"name":"denylistDestinationChain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiverAddress","type":"address"}],"name":"removeReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_destinationChainSelector","type":"uint64"},{"internalType":"address","name":"_receiverAddress","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"sendMessagePayLINK","outputs":[{"internalType":"bytes32","name":"messageId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_destinationChainSelector","type":"uint64"}],"name":"whitelistDestinationChain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"","type":"uint64"}],"name":"whitelistedDestinationChains","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"details":"Note ensure you check the msg.sender is the OffRampRouter","params":{"message":"CCIP Message"}},"denylistDestinationChain(uint64)":{"details":"Denylists a chain for transactions.","params":{"_destinationChainSelector":"The selector of the destination chain to be denylisted."}},"getRouter()":{"returns":{"_0":"i_router address"}},"supportsInterface(bytes4)":{"params":{"interfaceId":"The interfaceId to check"},"returns":{"_0":"true if the interfaceId is supported"}},"whitelistDestinationChain(uint64)":{"details":"Whitelists a chain for transactions.","params":{"_destinationChainSelector":"The selector of the destination chain to be whitelisted."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":214,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a0346100bb57601f6115ca38819003918201601f19168301916001600160401b038311848410176100c05780849260409485528339810103126100bb57610052602061004b836100d6565b92016100d6565b6001600160a01b0391808316156100a25760805260018060a01b0319918260065416911617600655339060035416176003556040516114df90816100eb823960805181818160c401526106c00152f35b6040516335fdcccd60e21b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100bb5756fe608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c90816301ffc9a7146110af575080631d5e294714610e245780631f27166d14610d355780633aeac4e114610c5557806351cff8d914610bb45780636552d8b414610ad457806373645cff14610a855780637898d18414610a33578063835b347c146109f457806385572ffb14610683578063a30e3770146100f85763b0f479a1146100ae573861000f565b346100f35760003660031901126100f3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600080fd5b346100f3576060806003193601126100f357610112611259565b61011a6111ab565b916044356001600160401b0381116100f35761013a90369060040161126f565b6001600160a01b03848116600090815260056020526040902060010154161561063e5760018060a01b0384166000526005602052600160ff816040600020015460a01c161515036105eb5760018060a01b038416600052600560205260018060a01b03600160406000200154169260018060a01b03600654168360806040516101c281611102565b8281528260208201528260408201526000838201520152604051946020860152602085526101ef8561111d565b604051602080820152610217816102096040820187611234565b03601f198101835282611138565b60405190602082018281106001600160401b038211176105d55760405260008252604051966102458861111d565b620c350088526020880160008152604051986397a657c960e01b60208b01525160248a01525115156044890152604488528760808101106001600160401b0360808a0111176105d557608088016040526102a160808901611102565b608088015260a087015260c08601528060e08601528461010081015260405163b0f479a160e01b8152602081600481305afa90811561047c57600091610593575b506040516320487ded60e01b815291906001600160a01b03166020838061031060808b018860048401611347565b0381845afa92831561047c5760009361055f575b506040516370a0823160e01b80825230600483015290602081602481875afa90811561047c5760009161052d575b5084116104b5575060405163095ea7b360e01b81526001600160a01b03821660048201526024810184905291602090839060449082906000905af190811561047c576103c497602093608093610488575b506000604051809a819582946396f4e9f960e01b8452018960048401611347565b03925af194851561047c57600095610443575b50916020956001600160401b037f3d8a9f055772202d2c3c1fddbad930d3dbe588d8692b75b84cee07194628291193879561042b60405195869560018060a01b0316865260808c8701526080860190611234565b976000604086015284015216940390a3604051908152f35b919450916020823d602011610474575b8161046060209383611138565b810103126100f357905193909160206103d7565b3d9150610453565b6040513d6000823e3d90fd5b6104a790853d87116104ae575b61049f8183611138565b810190611410565b508a6103a3565b503d610495565b60405190815230600482015283602082602481875afa90811561047c576000916104f8575b6044925060405191634787a10360e11b835260048301526024820152fd5b90506020823d602011610525575b8161051360209383611138565b810103126100f35760449151906104da565b3d9150610506565b90506020813d602011610557575b8161054860209383611138565b810103126100f357518a610352565b3d915061053b565b9092506020813d60201161058b575b8161057b60209383611138565b810103126100f357519188610324565b3d915061056e565b90506020813d6020116105cd575b816105ae60209383611138565b810103126100f357516001600160a01b03811681036100f357876102e2565b3d91506105a1565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602560248201527f54686973207265636569766572206973206e6f742077686974656c6973746564604482015264207965742160d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f456e74657220612076616c6964207265636569766572206164647265737321006044820152606490fd5b346100f357600319602036820181136100f3576004356001600160401b03928382116100f35760a09082360301126100f3576001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831633036109dc57604051926106f484611102565b8260040135845260248301359385851685036100f35782810194855260448401358681116100f35761072c906004369187010161126f565b956040820196875260648501358181116100f357610750906004369188010161126f565b94606083019586526084810135908282116100f3570191366023840112156100f3576004830135928284116105d55760405193610792878260051b0186611138565b80855260248786019160061b830101913683116100f357602401905b82821061099f575050506080810192835280516000556107d78651868082518301019101611428565b80518381116105d557806001926107ee84546111d7565b601f8111610947575b508890601f83116001146108c7576000926108bc575b5050600019600383901b1c191690821b1790555b51955116955183818051810103126100f357830151918083168093036100f3576108ac8461089161087c7f90ec910a8f80bb04e184a806e2ae6f8786ef2ae898859a3180f953397edc12019851838082518301019101611428565b936108878651611486565b5151169451611486565b51015191608060405196879687528601526080850190611234565b91604084015260608301520390a3005b015190508b8061080d565b90849350601f19831691846000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b8c8282106109315750508411610918575b505050811b019055610821565b015160001960f88460031b161c191690558b808061090b565b83850151865588979095019493840193016108fa565b61098f90856000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f850160051c8101918c8610610995575b601f0160051c0190611330565b8c6107f7565b9091508190610982565b6040823603126100f357604051906109b68261111d565b82359088821682036100f357828a926040945282850135838201528152019101906107ae565b6040516335fdcccd60e21b8152336004820152602490fd5b346100f35760203660031901126100f3576001600160401b03610a15611259565b166000526004602052602060ff604060002054166040519015158152f35b346100f35760203660031901126100f3576001600160401b03610a54611259565b610a6960018060a01b0360035416331461128d565b166000908152600460205260409020805460ff19166001179055005b346100f35760203660031901126100f3576001600160401b03610aa6611259565b610abb60018060a01b0360035416331461128d565b166000908152600460205260409020805460ff19169055005b346100f35760203660031901126100f3577fc98322fddcb9467a648bda840e8c0844a6a420e0a62af038077f0de932e729666020610b106111c1565b6003546001600160a01b039190610b2a908316331461128d565b168060005260058252610b4e600160ff816040600020015460a01c161515146112e4565b80600052600582526000600160408220610b6881546111d7565b80610b7a575b500155604051908152a1005b601f81118314610b8f57508281555b86610b6e565b8390828252610bab601f888420920160051c8201858301611330565b81835555610b89565b346100f35760203660031901126100f357610bcd6111c1565b47908115610c4357600080808085855af13d15610c3e573d610bee81611159565b90610bfc6040519283611138565b8152600060203d92013e5b15610c0e57005b604051639d11f56360e01b81523360048201526001600160a01b0390911660248201526044810191909152606490fd5b610c07565b604051630686827b60e51b8152600490fd5b346100f35760403660031901126100f357610c6e6111c1565b6001600160a01b03610c7e6111ab565b16604051916370a0823160e01b83523060048401526020928381602481865afa90811561047c57600091610d08575b508015610c435760405163a9059cbb60e01b81526001600160a01b039290921660048301526024820152908290829060449082906000905af1801561047c57610cf257005b8161001b92903d106104ae5761049f8183611138565b90508381813d8311610d2e575b610d1f8183611138565b810103126100f3575184610cad565b503d610d15565b346100f3576020806003193601126100f3576001600160a01b0380610d586111c1565b166000526005825260406000209060405191600090805491610d79836111d7565b808652600193808516908115610e085750600114610dd4575b5091610dbe9591610da78660ff950387611138565b015490604051958695606087526060870190611234565b9382169085015260a01c16151560408301520390f35b60008381528781209092505b818310610df557505084018501610dbe610d92565b8054878401890152918701918401610de0565b60ff19168789015250151560051b850186019050610dbe610d92565b346100f35760403660031901126100f3576001600160401b036004358181116100f357366023820112156100f357610e66903690602481600401359101611174565b610e6e6111ab565b6003546001600160a01b03918291610e89908316331461128d565b168015611071578060005260209160058352600190610eb560ff836040600020015460a01c16156112e4565b6040519060608201828110888211176105d5576040528582528482019284845260408301928184528560005260058752604060002090519889519081116105d557610f0082546111d7565b601f8111611041575b5087601f8211600114610fb3579080610f9f9a99989796959493927f619facc3344a864638bdf6b94faebe32fea796eccc10ab263d90da8b44c42be49c600092610fa8575b5050600019600383901b1c191690831b1781555b0192511682549160ff60a01b9051151560a01b16916affffffffffffffffffffff60a81b1617179055604051938493604085526040850190611234565b918301520390a1005b015190508c80610f4e565b601f1982169083600052896000209160005b81811061102c57509183917f619facc3344a864638bdf6b94faebe32fea796eccc10ab263d90da8b44c42be49d879695610f9f9e9d9c9b9a99989510611013575b505050811b018155610f62565b015160001960f88460031b161c191690558c8080611006565b8d830151845592860192918b01918b01610fc5565b61106b908360005289600020601f840160051c8101918b851061099557601f0160051c0190611330565b8a610f09565b60405162461bcd60e51b8152602060048201526016602482015275456e74657220612076616c696420616464726573732160501b6044820152606490fd5b346100f35760203660031901126100f3576004359063ffffffff60e01b82168092036100f3576020916385572ffb60e01b81149081156110f1575b5015158152f35b6301ffc9a760e01b149050836110ea565b60a081019081106001600160401b038211176105d557604052565b604081019081106001600160401b038211176105d557604052565b90601f801991011681019081106001600160401b038211176105d557604052565b6001600160401b0381116105d557601f01601f191660200190565b92919261118082611159565b9161118e6040519384611138565b8294818452818301116100f3578281602093846000960137010152565b602435906001600160a01b03821682036100f357565b600435906001600160a01b03821682036100f357565b90600182811c92168015611207575b60208310146111f157565b634e487b7160e01b600052602260045260246000fd5b91607f16916111e6565b60005b8381106112245750506000910152565b8181015183820152602001611214565b9060209161124d81518092818552858086019101611211565b601f01601f1916010190565b600435906001600160401b03821682036100f357565b9080601f830112156100f35781602061128a93359101611174565b90565b1561129457565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c79204f776e65722063616e2063616c6c20746869732066756e6374696f6044820152616e2160f01b6064820152608490fd5b156112eb57565b60405162461bcd60e51b815260206004820152601f60248201527f526563656976657220697320616c7265616479207265676973746572656421006044820152606490fd5b81811061133b575050565b60008155600101611330565b906001600160401b039093929316815260406020918183820152611376855160a08484015260e0830190611234565b916113928487015193603f199485858303016060860152611234565b8187015194848483030160808501528080875193848152019601926000905b8382106113e757505050505060c0608061128a959660018060a01b0360608201511660a085015201519282850301910152611234565b845180516001600160a01b031689528301518884015296870196938201936001909101906113b1565b908160209103126100f3575180151581036100f35790565b6020818303126100f3578051906001600160401b0382116100f3570181601f820112156100f357805161145a81611159565b926114686040519485611138565b818452602082840101116100f35761128a9160208085019101611211565b8051156114935760200190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122042ac00fb266c1ca8d7b6a0ac2a964161ea83deef9bc0d066b3d6e0c8db395d6864736f6c63430008140033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0xBB JUMPI PUSH1 0x1F PUSH2 0x15CA CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC0 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBB JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0xD6 JUMP JUMPDEST SWAP3 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 AND ISZERO PUSH2 0xA2 JUMPI PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 PUSH1 0x6 SLOAD AND SWAP2 AND OR PUSH1 0x6 SSTORE CALLER SWAP1 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x14DF SWAP1 DUP2 PUSH2 0xEB DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH1 0xC4 ADD MSTORE PUSH2 0x6C0 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBB JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x10AF JUMPI POP DUP1 PUSH4 0x1D5E2947 EQ PUSH2 0xE24 JUMPI DUP1 PUSH4 0x1F27166D EQ PUSH2 0xD35 JUMPI DUP1 PUSH4 0x3AEAC4E1 EQ PUSH2 0xC55 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0xBB4 JUMPI DUP1 PUSH4 0x6552D8B4 EQ PUSH2 0xAD4 JUMPI DUP1 PUSH4 0x73645CFF EQ PUSH2 0xA85 JUMPI DUP1 PUSH4 0x7898D184 EQ PUSH2 0xA33 JUMPI DUP1 PUSH4 0x835B347C EQ PUSH2 0x9F4 JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xA30E3770 EQ PUSH2 0xF8 JUMPI PUSH4 0xB0F479A1 EQ PUSH2 0xAE JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF3 JUMPI PUSH2 0x112 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x11AB JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF3 JUMPI PUSH2 0x13A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND ISZERO PUSH2 0x63E JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO SUB PUSH2 0x5EB JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND DUP4 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x1C2 DUP2 PUSH2 0x1102 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x40 MLOAD SWAP5 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP6 MSTORE PUSH2 0x1EF DUP6 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH2 0x217 DUP2 PUSH2 0x209 PUSH1 0x40 DUP3 ADD DUP8 PUSH2 0x1234 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP7 PUSH2 0x245 DUP9 PUSH2 0x111D JUMP JUMPDEST PUSH3 0xC3500 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP9 PUSH4 0x97A657C9 PUSH1 0xE0 SHL PUSH1 0x20 DUP12 ADD MSTORE MLOAD PUSH1 0x24 DUP11 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x44 DUP10 ADD MSTORE PUSH1 0x44 DUP9 MSTORE DUP8 PUSH1 0x80 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x80 DUP11 ADD GT OR PUSH2 0x5D5 JUMPI PUSH1 0x80 DUP9 ADD PUSH1 0x40 MSTORE PUSH2 0x2A1 PUSH1 0x80 DUP10 ADD PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE DUP1 PUSH1 0xE0 DUP7 ADD MSTORE DUP5 PUSH2 0x100 DUP2 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x593 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 DUP1 PUSH2 0x310 PUSH1 0x80 DUP12 ADD DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x1347 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP4 PUSH2 0x55F JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x52D JUMPI JUMPDEST POP DUP5 GT PUSH2 0x4B5 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH2 0x3C4 SWAP8 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP4 PUSH2 0x488 JUMPI JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP11 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP5 MSTORE ADD DUP10 PUSH1 0x4 DUP5 ADD PUSH2 0x1347 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP6 PUSH2 0x443 JUMPI JUMPDEST POP SWAP2 PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0x3D8A9F055772202D2C3C1FDDBAD930D3DBE588D8692B75B84CEE071946282911 SWAP4 DUP8 SWAP6 PUSH2 0x42B PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x80 DUP13 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP8 PUSH1 0x0 PUSH1 0x40 DUP7 ADD MSTORE DUP5 ADD MSTORE AND SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP5 POP SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x474 JUMPI JUMPDEST DUP2 PUSH2 0x460 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI SWAP1 MLOAD SWAP4 SWAP1 SWAP2 PUSH1 0x20 PUSH2 0x3D7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4A7 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x4AE JUMPI JUMPDEST PUSH2 0x49F DUP2 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1410 JUMP JUMPDEST POP DUP11 PUSH2 0x3A3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x4F8 JUMPI JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x525 JUMPI JUMPDEST DUP2 PUSH2 0x513 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH2 0x4DA JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x557 JUMPI JUMPDEST DUP2 PUSH2 0x548 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI MLOAD DUP11 PUSH2 0x352 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x53B JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x58B JUMPI JUMPDEST DUP2 PUSH2 0x57B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI MLOAD SWAP2 DUP9 PUSH2 0x324 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x56E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5CD JUMPI JUMPDEST DUP2 PUSH2 0x5AE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xF3 JUMPI DUP8 PUSH2 0x2E2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5A1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207265636569766572206973206E6F742077686974656C6973746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2079657421 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74657220612076616C696420726563656976657220616464726573732100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x3 NOT PUSH1 0x20 CALLDATASIZE DUP3 ADD DUP2 SGT PUSH2 0xF3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0xF3 JUMPI PUSH1 0xA0 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH32 0x0 DUP4 AND CALLER SUB PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x6F4 DUP5 PUSH2 0x1102 JUMP JUMPDEST DUP3 PUSH1 0x4 ADD CALLDATALOAD DUP5 MSTORE PUSH1 0x24 DUP4 ADD CALLDATALOAD SWAP4 DUP6 DUP6 AND DUP6 SUB PUSH2 0xF3 JUMPI DUP3 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x44 DUP5 ADD CALLDATALOAD DUP7 DUP2 GT PUSH2 0xF3 JUMPI PUSH2 0x72C SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x126F JUMP JUMPDEST SWAP6 PUSH1 0x40 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x64 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF3 JUMPI PUSH2 0x750 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP9 ADD ADD PUSH2 0x126F JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP4 ADD SWAP6 DUP7 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP3 DUP3 GT PUSH2 0xF3 JUMPI ADD SWAP2 CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x4 DUP4 ADD CALLDATALOAD SWAP3 DUP3 DUP5 GT PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH2 0x792 DUP8 DUP3 PUSH1 0x5 SHL ADD DUP7 PUSH2 0x1138 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x24 DUP8 DUP7 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xF3 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x99F JUMPI POP POP POP PUSH1 0x80 DUP2 ADD SWAP3 DUP4 MSTORE DUP1 MLOAD PUSH1 0x0 SSTORE PUSH2 0x7D7 DUP7 MLOAD DUP7 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1428 JUMP JUMPDEST DUP1 MLOAD DUP4 DUP2 GT PUSH2 0x5D5 JUMPI DUP1 PUSH1 0x1 SWAP3 PUSH2 0x7EE DUP5 SLOAD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x947 JUMPI JUMPDEST POP DUP9 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8C7 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x8BC JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST MLOAD SWAP6 MLOAD AND SWAP6 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI DUP4 ADD MLOAD SWAP2 DUP1 DUP4 AND DUP1 SWAP4 SUB PUSH2 0xF3 JUMPI PUSH2 0x8AC DUP5 PUSH2 0x891 PUSH2 0x87C PUSH32 0x90EC910A8F80BB04E184A806E2AE6F8786EF2AE898859A3180F953397EDC1201 SWAP9 MLOAD DUP4 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1428 JUMP JUMPDEST SWAP4 PUSH2 0x887 DUP7 MLOAD PUSH2 0x1486 JUMP JUMPDEST MLOAD MLOAD AND SWAP5 MLOAD PUSH2 0x1486 JUMP JUMPDEST MLOAD ADD MLOAD SWAP2 PUSH1 0x80 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x80D JUMP JUMPDEST SWAP1 DUP5 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x931 JUMPI POP POP DUP5 GT PUSH2 0x918 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x821 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x90B JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP9 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x98F SWAP1 DUP6 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP13 DUP7 LT PUSH2 0x995 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1330 JUMP JUMPDEST DUP13 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 DUP3 CALLDATASIZE SUB SLT PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9B6 DUP3 PUSH2 0x111D JUMP JUMPDEST DUP3 CALLDATALOAD SWAP1 DUP9 DUP3 AND DUP3 SUB PUSH2 0xF3 JUMPI DUP3 DUP11 SWAP3 PUSH1 0x40 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xA15 PUSH2 0x1259 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xA54 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0xA69 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x128D JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xAA6 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0xABB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x128D JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH32 0xC98322FDDCB9467A648BDA840E8C0844A6A420E0A62AF038077F0DE932E72966 PUSH1 0x20 PUSH2 0xB10 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0xB2A SWAP1 DUP4 AND CALLER EQ PUSH2 0x128D JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH2 0xB4E PUSH1 0x1 PUSH1 0xFF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO EQ PUSH2 0x12E4 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 DUP3 KECCAK256 PUSH2 0xB68 DUP2 SLOAD PUSH2 0x11D7 JUMP JUMPDEST DUP1 PUSH2 0xB7A JUMPI JUMPDEST POP ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH2 0xB8F JUMPI POP DUP3 DUP2 SSTORE JUMPDEST DUP7 PUSH2 0xB6E JUMP JUMPDEST DUP4 SWAP1 DUP3 DUP3 MSTORE PUSH2 0xBAB PUSH1 0x1F DUP9 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x1330 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0xB89 JUMP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH2 0xBCD PUSH2 0x11C1 JUMP JUMPDEST SELFBALANCE SWAP1 DUP2 ISZERO PUSH2 0xC43 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 DUP6 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xC3E JUMPI RETURNDATASIZE PUSH2 0xBEE DUP2 PUSH2 0x1159 JUMP JUMPDEST SWAP1 PUSH2 0xBFC PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0xC0E JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9D11F563 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH2 0xC6E PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC7E PUSH2 0x11AB JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x20 SWAP3 DUP4 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP2 PUSH2 0xD08 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x47C JUMPI PUSH2 0xCF2 JUMPI STOP JUMPDEST DUP2 PUSH2 0x1B SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4AE JUMPI PUSH2 0x49F DUP2 DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xD2E JUMPI JUMPDEST PUSH2 0xD1F DUP2 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI MLOAD DUP5 PUSH2 0xCAD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD15 JUMP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xD58 PUSH2 0x11C1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x0 SWAP1 DUP1 SLOAD SWAP2 PUSH2 0xD79 DUP4 PUSH2 0x11D7 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x1 SWAP4 DUP1 DUP6 AND SWAP1 DUP2 ISZERO PUSH2 0xE08 JUMPI POP PUSH1 0x1 EQ PUSH2 0xDD4 JUMPI JUMPDEST POP SWAP2 PUSH2 0xDBE SWAP6 SWAP2 PUSH2 0xDA7 DUP7 PUSH1 0xFF SWAP6 SUB DUP8 PUSH2 0x1138 JUMP JUMPDEST ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x60 DUP8 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP4 DUP3 AND SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE DUP8 DUP2 KECCAK256 SWAP1 SWAP3 POP JUMPDEST DUP2 DUP4 LT PUSH2 0xDF5 JUMPI POP POP DUP5 ADD DUP6 ADD PUSH2 0xDBE PUSH2 0xD92 JUMP JUMPDEST DUP1 SLOAD DUP8 DUP5 ADD DUP10 ADD MSTORE SWAP2 DUP8 ADD SWAP2 DUP5 ADD PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP10 ADD MSTORE POP ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD DUP7 ADD SWAP1 POP PUSH2 0xDBE PUSH2 0xD92 JUMP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xF3 JUMPI PUSH2 0xE66 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xE6E PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 SWAP2 PUSH2 0xE89 SWAP1 DUP4 AND CALLER EQ PUSH2 0x128D JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x1071 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x5 DUP4 MSTORE PUSH1 0x1 SWAP1 PUSH2 0xEB5 PUSH1 0xFF DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT DUP9 DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE DUP6 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 DUP5 DUP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 DUP5 MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 MLOAD SWAP9 DUP10 MLOAD SWAP1 DUP2 GT PUSH2 0x5D5 JUMPI PUSH2 0xF00 DUP3 SLOAD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1041 JUMPI JUMPDEST POP DUP8 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xFB3 JUMPI SWAP1 DUP1 PUSH2 0xF9F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH32 0x619FACC3344A864638BDF6B94FAEBE32FEA796ECCC10AB263D90DA8B44C42BE4 SWAP13 PUSH1 0x0 SWAP3 PUSH2 0xFA8 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP2 SSTORE JUMPDEST ADD SWAP3 MLOAD AND DUP3 SLOAD SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 MLOAD ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP2 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x102C JUMPI POP SWAP2 DUP4 SWAP2 PUSH32 0x619FACC3344A864638BDF6B94FAEBE32FEA796ECCC10AB263D90DA8B44C42BE4 SWAP14 DUP8 SWAP7 SWAP6 PUSH2 0xF9F SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP6 LT PUSH2 0x1013 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0xF62 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x1006 JUMP JUMPDEST DUP14 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP7 ADD SWAP3 SWAP2 DUP12 ADD SWAP2 DUP12 ADD PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x106B SWAP1 DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP12 DUP6 LT PUSH2 0x995 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1330 JUMP JUMPDEST DUP11 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x456E74657220612076616C6964206164647265737321 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xF3 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x10F1 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5D5 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1180 DUP3 PUSH2 0x1159 JUMP JUMPDEST SWAP2 PUSH2 0x118E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1138 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF3 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF3 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF3 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1207 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x11F1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1224 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1214 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x124D DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF3 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xF3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x128A SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1174 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1294 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6E21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12EB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563656976657220697320616C726561647920726567697374657265642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x133B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP4 SWAP3 SWAP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH2 0x1376 DUP6 MLOAD PUSH1 0xA0 DUP5 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP2 PUSH2 0x1392 DUP5 DUP8 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1234 JUMP JUMPDEST DUP2 DUP8 ADD MLOAD SWAP5 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP1 DUP8 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x13E7 JUMPI POP POP POP POP POP PUSH1 0xC0 PUSH1 0x80 PUSH2 0x128A SWAP6 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1234 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE DUP4 ADD MLOAD DUP9 DUP5 ADD MSTORE SWAP7 DUP8 ADD SWAP7 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xF3 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xF3 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xF3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF3 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF3 JUMPI DUP1 MLOAD PUSH2 0x145A DUP2 PUSH2 0x1159 JUMP JUMPDEST SWAP3 PUSH2 0x1468 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1138 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0xF3 JUMPI PUSH2 0x128A SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1211 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1493 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xAC STOP 0xFB 0x26 PUSH13 0x1CA8D7B6A0AC2A964161EA83DE 0xEF SWAP12 0xC0 0xD0 PUSH7 0xB3D6E0C8DB395D PUSH9 0x64736F6C6343000814 STOP CALLER ","sourceMap":"577:6573:28:-:0;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;577:6573:28;;;;528:20:0;524:58;;588:17;;577:6573:28;;;;;;;;2044:62;577:6573;;;;;2044:62;577:6573;2386:10;577:6573;2378:18;577:6573;;;2378:18;577:6573;;;;;;;;;588:17:0;577:6573:28;;;;;;;;;;;524:58:0;577:6573:28;;-1:-1:-1;;;557:25:0;;-1:-1:-1;557:25:0;;;577:6573:28;;;557:25:0;577:6573:28;-1:-1:-1;577:6573:28;;;;;;-1:-1:-1;577:6573:28;;;;;-1:-1:-1;577:6573:28;;;;-1:-1:-1;;;;;577:6573:28;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4545,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_17646":{"entryPoint":4523,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":4468,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":5136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":4719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":5160,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint64":{"entryPoint":4697,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":4660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint64_struct_EVM2AnyMessage":{"entryPoint":4935,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_string":{"entryPoint":4441,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":4912,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4625,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4567,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4408,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_17659":{"entryPoint":4354,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_17660":{"entryPoint":4381,"id":null,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_struct_EVMTokenAmount_dyn":{"entryPoint":5254,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":4836,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa74":{"entryPoint":4749,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"14":[{"length":32,"start":196},{"length":32,"start":1728}]},"linkReferences":{},"object":"608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c90816301ffc9a7146110af575080631d5e294714610e245780631f27166d14610d355780633aeac4e114610c5557806351cff8d914610bb45780636552d8b414610ad457806373645cff14610a855780637898d18414610a33578063835b347c146109f457806385572ffb14610683578063a30e3770146100f85763b0f479a1146100ae573861000f565b346100f35760003660031901126100f3576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600080fd5b346100f3576060806003193601126100f357610112611259565b61011a6111ab565b916044356001600160401b0381116100f35761013a90369060040161126f565b6001600160a01b03848116600090815260056020526040902060010154161561063e5760018060a01b0384166000526005602052600160ff816040600020015460a01c161515036105eb5760018060a01b038416600052600560205260018060a01b03600160406000200154169260018060a01b03600654168360806040516101c281611102565b8281528260208201528260408201526000838201520152604051946020860152602085526101ef8561111d565b604051602080820152610217816102096040820187611234565b03601f198101835282611138565b60405190602082018281106001600160401b038211176105d55760405260008252604051966102458861111d565b620c350088526020880160008152604051986397a657c960e01b60208b01525160248a01525115156044890152604488528760808101106001600160401b0360808a0111176105d557608088016040526102a160808901611102565b608088015260a087015260c08601528060e08601528461010081015260405163b0f479a160e01b8152602081600481305afa90811561047c57600091610593575b506040516320487ded60e01b815291906001600160a01b03166020838061031060808b018860048401611347565b0381845afa92831561047c5760009361055f575b506040516370a0823160e01b80825230600483015290602081602481875afa90811561047c5760009161052d575b5084116104b5575060405163095ea7b360e01b81526001600160a01b03821660048201526024810184905291602090839060449082906000905af190811561047c576103c497602093608093610488575b506000604051809a819582946396f4e9f960e01b8452018960048401611347565b03925af194851561047c57600095610443575b50916020956001600160401b037f3d8a9f055772202d2c3c1fddbad930d3dbe588d8692b75b84cee07194628291193879561042b60405195869560018060a01b0316865260808c8701526080860190611234565b976000604086015284015216940390a3604051908152f35b919450916020823d602011610474575b8161046060209383611138565b810103126100f357905193909160206103d7565b3d9150610453565b6040513d6000823e3d90fd5b6104a790853d87116104ae575b61049f8183611138565b810190611410565b508a6103a3565b503d610495565b60405190815230600482015283602082602481875afa90811561047c576000916104f8575b6044925060405191634787a10360e11b835260048301526024820152fd5b90506020823d602011610525575b8161051360209383611138565b810103126100f35760449151906104da565b3d9150610506565b90506020813d602011610557575b8161054860209383611138565b810103126100f357518a610352565b3d915061053b565b9092506020813d60201161058b575b8161057b60209383611138565b810103126100f357519188610324565b3d915061056e565b90506020813d6020116105cd575b816105ae60209383611138565b810103126100f357516001600160a01b03811681036100f357876102e2565b3d91506105a1565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602560248201527f54686973207265636569766572206973206e6f742077686974656c6973746564604482015264207965742160d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f456e74657220612076616c6964207265636569766572206164647265737321006044820152606490fd5b346100f357600319602036820181136100f3576004356001600160401b03928382116100f35760a09082360301126100f3576001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831633036109dc57604051926106f484611102565b8260040135845260248301359385851685036100f35782810194855260448401358681116100f35761072c906004369187010161126f565b956040820196875260648501358181116100f357610750906004369188010161126f565b94606083019586526084810135908282116100f3570191366023840112156100f3576004830135928284116105d55760405193610792878260051b0186611138565b80855260248786019160061b830101913683116100f357602401905b82821061099f575050506080810192835280516000556107d78651868082518301019101611428565b80518381116105d557806001926107ee84546111d7565b601f8111610947575b508890601f83116001146108c7576000926108bc575b5050600019600383901b1c191690821b1790555b51955116955183818051810103126100f357830151918083168093036100f3576108ac8461089161087c7f90ec910a8f80bb04e184a806e2ae6f8786ef2ae898859a3180f953397edc12019851838082518301019101611428565b936108878651611486565b5151169451611486565b51015191608060405196879687528601526080850190611234565b91604084015260608301520390a3005b015190508b8061080d565b90849350601f19831691846000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b8c8282106109315750508411610918575b505050811b019055610821565b015160001960f88460031b161c191690558b808061090b565b83850151865588979095019493840193016108fa565b61098f90856000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f850160051c8101918c8610610995575b601f0160051c0190611330565b8c6107f7565b9091508190610982565b6040823603126100f357604051906109b68261111d565b82359088821682036100f357828a926040945282850135838201528152019101906107ae565b6040516335fdcccd60e21b8152336004820152602490fd5b346100f35760203660031901126100f3576001600160401b03610a15611259565b166000526004602052602060ff604060002054166040519015158152f35b346100f35760203660031901126100f3576001600160401b03610a54611259565b610a6960018060a01b0360035416331461128d565b166000908152600460205260409020805460ff19166001179055005b346100f35760203660031901126100f3576001600160401b03610aa6611259565b610abb60018060a01b0360035416331461128d565b166000908152600460205260409020805460ff19169055005b346100f35760203660031901126100f3577fc98322fddcb9467a648bda840e8c0844a6a420e0a62af038077f0de932e729666020610b106111c1565b6003546001600160a01b039190610b2a908316331461128d565b168060005260058252610b4e600160ff816040600020015460a01c161515146112e4565b80600052600582526000600160408220610b6881546111d7565b80610b7a575b500155604051908152a1005b601f81118314610b8f57508281555b86610b6e565b8390828252610bab601f888420920160051c8201858301611330565b81835555610b89565b346100f35760203660031901126100f357610bcd6111c1565b47908115610c4357600080808085855af13d15610c3e573d610bee81611159565b90610bfc6040519283611138565b8152600060203d92013e5b15610c0e57005b604051639d11f56360e01b81523360048201526001600160a01b0390911660248201526044810191909152606490fd5b610c07565b604051630686827b60e51b8152600490fd5b346100f35760403660031901126100f357610c6e6111c1565b6001600160a01b03610c7e6111ab565b16604051916370a0823160e01b83523060048401526020928381602481865afa90811561047c57600091610d08575b508015610c435760405163a9059cbb60e01b81526001600160a01b039290921660048301526024820152908290829060449082906000905af1801561047c57610cf257005b8161001b92903d106104ae5761049f8183611138565b90508381813d8311610d2e575b610d1f8183611138565b810103126100f3575184610cad565b503d610d15565b346100f3576020806003193601126100f3576001600160a01b0380610d586111c1565b166000526005825260406000209060405191600090805491610d79836111d7565b808652600193808516908115610e085750600114610dd4575b5091610dbe9591610da78660ff950387611138565b015490604051958695606087526060870190611234565b9382169085015260a01c16151560408301520390f35b60008381528781209092505b818310610df557505084018501610dbe610d92565b8054878401890152918701918401610de0565b60ff19168789015250151560051b850186019050610dbe610d92565b346100f35760403660031901126100f3576001600160401b036004358181116100f357366023820112156100f357610e66903690602481600401359101611174565b610e6e6111ab565b6003546001600160a01b03918291610e89908316331461128d565b168015611071578060005260209160058352600190610eb560ff836040600020015460a01c16156112e4565b6040519060608201828110888211176105d5576040528582528482019284845260408301928184528560005260058752604060002090519889519081116105d557610f0082546111d7565b601f8111611041575b5087601f8211600114610fb3579080610f9f9a99989796959493927f619facc3344a864638bdf6b94faebe32fea796eccc10ab263d90da8b44c42be49c600092610fa8575b5050600019600383901b1c191690831b1781555b0192511682549160ff60a01b9051151560a01b16916affffffffffffffffffffff60a81b1617179055604051938493604085526040850190611234565b918301520390a1005b015190508c80610f4e565b601f1982169083600052896000209160005b81811061102c57509183917f619facc3344a864638bdf6b94faebe32fea796eccc10ab263d90da8b44c42be49d879695610f9f9e9d9c9b9a99989510611013575b505050811b018155610f62565b015160001960f88460031b161c191690558c8080611006565b8d830151845592860192918b01918b01610fc5565b61106b908360005289600020601f840160051c8101918b851061099557601f0160051c0190611330565b8a610f09565b60405162461bcd60e51b8152602060048201526016602482015275456e74657220612076616c696420616464726573732160501b6044820152606490fd5b346100f35760203660031901126100f3576004359063ffffffff60e01b82168092036100f3576020916385572ffb60e01b81149081156110f1575b5015158152f35b6301ffc9a760e01b149050836110ea565b60a081019081106001600160401b038211176105d557604052565b604081019081106001600160401b038211176105d557604052565b90601f801991011681019081106001600160401b038211176105d557604052565b6001600160401b0381116105d557601f01601f191660200190565b92919261118082611159565b9161118e6040519384611138565b8294818452818301116100f3578281602093846000960137010152565b602435906001600160a01b03821682036100f357565b600435906001600160a01b03821682036100f357565b90600182811c92168015611207575b60208310146111f157565b634e487b7160e01b600052602260045260246000fd5b91607f16916111e6565b60005b8381106112245750506000910152565b8181015183820152602001611214565b9060209161124d81518092818552858086019101611211565b601f01601f1916010190565b600435906001600160401b03821682036100f357565b9080601f830112156100f35781602061128a93359101611174565b90565b1561129457565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c79204f776e65722063616e2063616c6c20746869732066756e6374696f6044820152616e2160f01b6064820152608490fd5b156112eb57565b60405162461bcd60e51b815260206004820152601f60248201527f526563656976657220697320616c7265616479207265676973746572656421006044820152606490fd5b81811061133b575050565b60008155600101611330565b906001600160401b039093929316815260406020918183820152611376855160a08484015260e0830190611234565b916113928487015193603f199485858303016060860152611234565b8187015194848483030160808501528080875193848152019601926000905b8382106113e757505050505060c0608061128a959660018060a01b0360608201511660a085015201519282850301910152611234565b845180516001600160a01b031689528301518884015296870196938201936001909101906113b1565b908160209103126100f3575180151581036100f35790565b6020818303126100f3578051906001600160401b0382116100f3570181601f820112156100f357805161145a81611159565b926114686040519485611138565b818452602082840101116100f35761128a9160208085019101611211565b8051156114935760200190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122042ac00fb266c1ca8d7b6a0ac2a964161ea83deef9bc0d066b3d6e0c8db395d6864736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x10AF JUMPI POP DUP1 PUSH4 0x1D5E2947 EQ PUSH2 0xE24 JUMPI DUP1 PUSH4 0x1F27166D EQ PUSH2 0xD35 JUMPI DUP1 PUSH4 0x3AEAC4E1 EQ PUSH2 0xC55 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0xBB4 JUMPI DUP1 PUSH4 0x6552D8B4 EQ PUSH2 0xAD4 JUMPI DUP1 PUSH4 0x73645CFF EQ PUSH2 0xA85 JUMPI DUP1 PUSH4 0x7898D184 EQ PUSH2 0xA33 JUMPI DUP1 PUSH4 0x835B347C EQ PUSH2 0x9F4 JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xA30E3770 EQ PUSH2 0xF8 JUMPI PUSH4 0xB0F479A1 EQ PUSH2 0xAE JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF3 JUMPI PUSH2 0x112 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x11AB JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF3 JUMPI PUSH2 0x13A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND ISZERO PUSH2 0x63E JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0xFF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO SUB PUSH2 0x5EB JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND DUP4 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x1C2 DUP2 PUSH2 0x1102 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x40 MLOAD SWAP5 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP6 MSTORE PUSH2 0x1EF DUP6 PUSH2 0x111D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 ADD MSTORE PUSH2 0x217 DUP2 PUSH2 0x209 PUSH1 0x40 DUP3 ADD DUP8 PUSH2 0x1234 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP7 PUSH2 0x245 DUP9 PUSH2 0x111D JUMP JUMPDEST PUSH3 0xC3500 DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP9 PUSH4 0x97A657C9 PUSH1 0xE0 SHL PUSH1 0x20 DUP12 ADD MSTORE MLOAD PUSH1 0x24 DUP11 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x44 DUP10 ADD MSTORE PUSH1 0x44 DUP9 MSTORE DUP8 PUSH1 0x80 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x80 DUP11 ADD GT OR PUSH2 0x5D5 JUMPI PUSH1 0x80 DUP9 ADD PUSH1 0x40 MSTORE PUSH2 0x2A1 PUSH1 0x80 DUP10 ADD PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE DUP1 PUSH1 0xE0 DUP7 ADD MSTORE DUP5 PUSH2 0x100 DUP2 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x593 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 DUP1 PUSH2 0x310 PUSH1 0x80 DUP12 ADD DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x1347 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP4 PUSH2 0x55F JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x52D JUMPI JUMPDEST POP DUP5 GT PUSH2 0x4B5 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH2 0x3C4 SWAP8 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP4 PUSH2 0x488 JUMPI JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP11 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP5 MSTORE ADD DUP10 PUSH1 0x4 DUP5 ADD PUSH2 0x1347 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP6 PUSH2 0x443 JUMPI JUMPDEST POP SWAP2 PUSH1 0x20 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0x3D8A9F055772202D2C3C1FDDBAD930D3DBE588D8692B75B84CEE071946282911 SWAP4 DUP8 SWAP6 PUSH2 0x42B PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x80 DUP13 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP8 PUSH1 0x0 PUSH1 0x40 DUP7 ADD MSTORE DUP5 ADD MSTORE AND SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP5 POP SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x474 JUMPI JUMPDEST DUP2 PUSH2 0x460 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI SWAP1 MLOAD SWAP4 SWAP1 SWAP2 PUSH1 0x20 PUSH2 0x3D7 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4A7 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x4AE JUMPI JUMPDEST PUSH2 0x49F DUP2 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1410 JUMP JUMPDEST POP DUP11 PUSH2 0x3A3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x4F8 JUMPI JUMPDEST PUSH1 0x44 SWAP3 POP PUSH1 0x40 MLOAD SWAP2 PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x525 JUMPI JUMPDEST DUP2 PUSH2 0x513 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH2 0x4DA JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x506 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x557 JUMPI JUMPDEST DUP2 PUSH2 0x548 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI MLOAD DUP11 PUSH2 0x352 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x53B JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x58B JUMPI JUMPDEST DUP2 PUSH2 0x57B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI MLOAD SWAP2 DUP9 PUSH2 0x324 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x56E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5CD JUMPI JUMPDEST DUP2 PUSH2 0x5AE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xF3 JUMPI DUP8 PUSH2 0x2E2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5A1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973207265636569766572206973206E6F742077686974656C6973746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2079657421 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74657220612076616C696420726563656976657220616464726573732100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x3 NOT PUSH1 0x20 CALLDATASIZE DUP3 ADD DUP2 SGT PUSH2 0xF3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0xF3 JUMPI PUSH1 0xA0 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH32 0x0 DUP4 AND CALLER SUB PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x6F4 DUP5 PUSH2 0x1102 JUMP JUMPDEST DUP3 PUSH1 0x4 ADD CALLDATALOAD DUP5 MSTORE PUSH1 0x24 DUP4 ADD CALLDATALOAD SWAP4 DUP6 DUP6 AND DUP6 SUB PUSH2 0xF3 JUMPI DUP3 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x44 DUP5 ADD CALLDATALOAD DUP7 DUP2 GT PUSH2 0xF3 JUMPI PUSH2 0x72C SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x126F JUMP JUMPDEST SWAP6 PUSH1 0x40 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x64 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF3 JUMPI PUSH2 0x750 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP9 ADD ADD PUSH2 0x126F JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP4 ADD SWAP6 DUP7 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP3 DUP3 GT PUSH2 0xF3 JUMPI ADD SWAP2 CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x4 DUP4 ADD CALLDATALOAD SWAP3 DUP3 DUP5 GT PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH2 0x792 DUP8 DUP3 PUSH1 0x5 SHL ADD DUP7 PUSH2 0x1138 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x24 DUP8 DUP7 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xF3 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x99F JUMPI POP POP POP PUSH1 0x80 DUP2 ADD SWAP3 DUP4 MSTORE DUP1 MLOAD PUSH1 0x0 SSTORE PUSH2 0x7D7 DUP7 MLOAD DUP7 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1428 JUMP JUMPDEST DUP1 MLOAD DUP4 DUP2 GT PUSH2 0x5D5 JUMPI DUP1 PUSH1 0x1 SWAP3 PUSH2 0x7EE DUP5 SLOAD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x947 JUMPI JUMPDEST POP DUP9 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x8C7 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x8BC JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST MLOAD SWAP6 MLOAD AND SWAP6 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI DUP4 ADD MLOAD SWAP2 DUP1 DUP4 AND DUP1 SWAP4 SUB PUSH2 0xF3 JUMPI PUSH2 0x8AC DUP5 PUSH2 0x891 PUSH2 0x87C PUSH32 0x90EC910A8F80BB04E184A806E2AE6F8786EF2AE898859A3180F953397EDC1201 SWAP9 MLOAD DUP4 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x1428 JUMP JUMPDEST SWAP4 PUSH2 0x887 DUP7 MLOAD PUSH2 0x1486 JUMP JUMPDEST MLOAD MLOAD AND SWAP5 MLOAD PUSH2 0x1486 JUMP JUMPDEST MLOAD ADD MLOAD SWAP2 PUSH1 0x80 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x80D JUMP JUMPDEST SWAP1 DUP5 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH2 0x931 JUMPI POP POP DUP5 GT PUSH2 0x918 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x821 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x90B JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP9 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x98F SWAP1 DUP6 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP13 DUP7 LT PUSH2 0x995 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1330 JUMP JUMPDEST DUP13 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 DUP3 CALLDATASIZE SUB SLT PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9B6 DUP3 PUSH2 0x111D JUMP JUMPDEST DUP3 CALLDATALOAD SWAP1 DUP9 DUP3 AND DUP3 SUB PUSH2 0xF3 JUMPI DUP3 DUP11 SWAP3 PUSH1 0x40 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xA15 PUSH2 0x1259 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xA54 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0xA69 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x128D JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xAA6 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0xABB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x128D JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH32 0xC98322FDDCB9467A648BDA840E8C0844A6A420E0A62AF038077F0DE932E72966 PUSH1 0x20 PUSH2 0xB10 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0xB2A SWAP1 DUP4 AND CALLER EQ PUSH2 0x128D JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH2 0xB4E PUSH1 0x1 PUSH1 0xFF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO EQ PUSH2 0x12E4 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x40 DUP3 KECCAK256 PUSH2 0xB68 DUP2 SLOAD PUSH2 0x11D7 JUMP JUMPDEST DUP1 PUSH2 0xB7A JUMPI JUMPDEST POP ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x1F DUP2 GT DUP4 EQ PUSH2 0xB8F JUMPI POP DUP3 DUP2 SSTORE JUMPDEST DUP7 PUSH2 0xB6E JUMP JUMPDEST DUP4 SWAP1 DUP3 DUP3 MSTORE PUSH2 0xBAB PUSH1 0x1F DUP9 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x1330 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0xB89 JUMP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH2 0xBCD PUSH2 0x11C1 JUMP JUMPDEST SELFBALANCE SWAP1 DUP2 ISZERO PUSH2 0xC43 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 DUP6 DUP6 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xC3E JUMPI RETURNDATASIZE PUSH2 0xBEE DUP2 PUSH2 0x1159 JUMP JUMPDEST SWAP1 PUSH2 0xBFC PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0xC0E JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9D11F563 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH2 0xC6E PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC7E PUSH2 0x11AB JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x20 SWAP3 DUP4 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 SWAP2 PUSH2 0xD08 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0xC43 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x47C JUMPI PUSH2 0xCF2 JUMPI STOP JUMPDEST DUP2 PUSH2 0x1B SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4AE JUMPI PUSH2 0x49F DUP2 DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xD2E JUMPI JUMPDEST PUSH2 0xD1F DUP2 DUP4 PUSH2 0x1138 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF3 JUMPI MLOAD DUP5 PUSH2 0xCAD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xD15 JUMP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xD58 PUSH2 0x11C1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x0 SWAP1 DUP1 SLOAD SWAP2 PUSH2 0xD79 DUP4 PUSH2 0x11D7 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x1 SWAP4 DUP1 DUP6 AND SWAP1 DUP2 ISZERO PUSH2 0xE08 JUMPI POP PUSH1 0x1 EQ PUSH2 0xDD4 JUMPI JUMPDEST POP SWAP2 PUSH2 0xDBE SWAP6 SWAP2 PUSH2 0xDA7 DUP7 PUSH1 0xFF SWAP6 SUB DUP8 PUSH2 0x1138 JUMP JUMPDEST ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x60 DUP8 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP4 DUP3 AND SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE DUP8 DUP2 KECCAK256 SWAP1 SWAP3 POP JUMPDEST DUP2 DUP4 LT PUSH2 0xDF5 JUMPI POP POP DUP5 ADD DUP6 ADD PUSH2 0xDBE PUSH2 0xD92 JUMP JUMPDEST DUP1 SLOAD DUP8 DUP5 ADD DUP10 ADD MSTORE SWAP2 DUP8 ADD SWAP2 DUP5 ADD PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP10 ADD MSTORE POP ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD DUP7 ADD SWAP1 POP PUSH2 0xDBE PUSH2 0xD92 JUMP JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xF3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xF3 JUMPI PUSH2 0xE66 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1174 JUMP JUMPDEST PUSH2 0xE6E PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 SWAP2 PUSH2 0xE89 SWAP1 DUP4 AND CALLER EQ PUSH2 0x128D JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x1071 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x5 DUP4 MSTORE PUSH1 0x1 SWAP1 PUSH2 0xEB5 PUSH1 0xFF DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT DUP9 DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE DUP6 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 DUP5 DUP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 DUP5 MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x5 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 MLOAD SWAP9 DUP10 MLOAD SWAP1 DUP2 GT PUSH2 0x5D5 JUMPI PUSH2 0xF00 DUP3 SLOAD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1041 JUMPI JUMPDEST POP DUP8 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xFB3 JUMPI SWAP1 DUP1 PUSH2 0xF9F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH32 0x619FACC3344A864638BDF6B94FAEBE32FEA796ECCC10AB263D90DA8B44C42BE4 SWAP13 PUSH1 0x0 SWAP3 PUSH2 0xFA8 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP2 SSTORE JUMPDEST ADD SWAP3 MLOAD AND DUP3 SLOAD SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 MLOAD ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP2 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x102C JUMPI POP SWAP2 DUP4 SWAP2 PUSH32 0x619FACC3344A864638BDF6B94FAEBE32FEA796ECCC10AB263D90DA8B44C42BE4 SWAP14 DUP8 SWAP7 SWAP6 PUSH2 0xF9F SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP6 LT PUSH2 0x1013 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0xF62 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x1006 JUMP JUMPDEST DUP14 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP7 ADD SWAP3 SWAP2 DUP12 ADD SWAP2 DUP12 ADD PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x106B SWAP1 DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP12 DUP6 LT PUSH2 0x995 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1330 JUMP JUMPDEST DUP11 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x456E74657220612076616C6964206164647265737321 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xF3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF3 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0xF3 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x10F1 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5D5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5D5 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1180 DUP3 PUSH2 0x1159 JUMP JUMPDEST SWAP2 PUSH2 0x118E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1138 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xF3 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF3 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF3 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1207 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x11F1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1224 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1214 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x124D DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF3 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xF3 JUMPI DUP2 PUSH1 0x20 PUSH2 0x128A SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1174 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1294 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79204F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6E21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12EB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563656976657220697320616C726561647920726567697374657265642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x133B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1330 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP4 SWAP3 SWAP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH2 0x1376 DUP6 MLOAD PUSH1 0xA0 DUP5 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x1234 JUMP JUMPDEST SWAP2 PUSH2 0x1392 DUP5 DUP8 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1234 JUMP JUMPDEST DUP2 DUP8 ADD MLOAD SWAP5 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP1 DUP8 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x13E7 JUMPI POP POP POP POP POP PUSH1 0xC0 PUSH1 0x80 PUSH2 0x128A SWAP6 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1234 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE DUP4 ADD MLOAD DUP9 DUP5 ADD MSTORE SWAP7 DUP8 ADD SWAP7 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xF3 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xF3 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0xF3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF3 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF3 JUMPI DUP1 MLOAD PUSH2 0x145A DUP2 PUSH2 0x1159 JUMP JUMPDEST SWAP3 PUSH2 0x1468 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1138 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0xF3 JUMPI PUSH2 0x128A SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1211 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1493 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xAC STOP 0xFB 0x26 PUSH13 0x1CA8D7B6A0AC2A964161EA83DE 0xEF SWAP12 0xC0 0xD0 PUSH7 0xB3D6E0C8DB395D PUSH9 0x64736F6C6343000814 STOP CALLER ","sourceMap":"577:6573:28:-:0;;;;;;;;;;-1:-1:-1;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;;;1622:8:0;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;577:6573:28;;;;;;;4288:13;577:6573;;;;;;4288:47;577:6573;;4288:61;577:6573;;;;;;;;;;;4288:13;577:6573;;;;;;;;4404:42;577:6573;;;;;;4404:50;577:6573;;;;;;;;;;;4288:13;577:6573;;;;;;;;;;;4587:47;577:6573;;;;;;;;4677:9;577:6573;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5527:21;577:6573;5527:21;;577:6573;;5527:21;;;;;:::i;:::-;577:6573;;;5569:17;;;577:6573;5569:17;577:6573;;;;;;;:::i;:::-;5569:17;577:6573;;5569:17;;;;;;:::i;:::-;577:6573;;;;;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;:::i;:::-;5743:7;577:6573;;;5710:57;;577:6573;;;;;;;;;;1484:56:3;;;1201:10;577:6573:28;1484:56:3;;577:6573:28;1201:10:3;577:6573:28;;;1201:10:3;;577:6573:28;;1484:56:3;;577:6573:28;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5480:355;;577:6573;5480:355;;;577:6573;5480:355;577:6573;5480:355;;577:6573;5480:355;;;;577:6573;;;;;;4748:16;;577:6573;4748:4;577:6573;4748:4;;:16;;;;;;;577:6573;4748:16;;;577:6573;-1:-1:-1;577:6573:28;;-1:-1:-1;;;4793:56:28;;577:6573;;-1:-1:-1;;;;;577:6573:28;;;;4793:56;577:6573;;;4793:56;577:6573;4793:56;;;:::i;:::-;;;;;;;;;;;577:6573;4793:56;;;577:6573;-1:-1:-1;577:6573:28;;-1:-1:-1;;;4873:34:28;;;4748:4;577:6573;4873:34;;577:6573;;;;;;4873:34;;;;;;;;577:6573;4873:34;;;577:6573;4866:41;;;4862:125;;-1:-1:-1;577:6573:28;;-1:-1:-1;;;5000:40:28;;-1:-1:-1;;;;;577:6573:28;;;5000:40;;577:6573;;;;;;;;;;;;;;;;-1:-1:-1;;5000:40:28;;;;;;;5065:58;5000:40;577:6573;5000:40;577:6573;5000:40;;;577:6573;;;;;;;;;;;;;;5065:58;;577:6573;5065:58;577:6573;5065:58;;;:::i;:::-;;;;;;;;;;577:6573;5065:58;;;577:6573;;;;;-1:-1:-1;;;;;5141:92:28;577:6573;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;5141:92;;;;577:6573;;;;;;5065:58;;;;;577:6573;5065:58;;577:6573;5065:58;;;;;;577:6573;5065:58;;;:::i;:::-;;;577:6573;;;;;;;5065:58;;577:6573;5065:58;;;;;-1:-1:-1;5065:58:28;;;577:6573;;;;;;;;;5000:40;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;4862:125;577:6573;;4946:34;;;4748:4;577:6573;4946:34;;577:6573;;;;;;;4946:34;;;;;;;577:6573;4946:34;;;4862:125;577:6573;;;;;4929:58;;;;;;577:6573;4929:58;;577:6573;;;;;4929:58;4946:34;;;577:6573;4946:34;;577:6573;4946:34;;;;;;577:6573;4946:34;;;:::i;:::-;;;577:6573;;;;;;;4946:34;;;;;;-1:-1:-1;4946:34:28;;4873;;;577:6573;4873:34;;577:6573;4873:34;;;;;;577:6573;4873:34;;;:::i;:::-;;;577:6573;;;;;4873:34;;;;;;-1:-1:-1;4873:34:28;;4793:56;;;;577:6573;4793:56;;577:6573;4793:56;;;;;;577:6573;4793:56;;;:::i;:::-;;;577:6573;;;;;4793:56;;;;;;;-1:-1:-1;4793:56:28;;4748:16;;;577:6573;4748:16;;577:6573;4748:16;;;;;;577:6573;4748:16;;;:::i;:::-;;;577:6573;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;4748:16;;;;;;-1:-1:-1;4748:16:28;;577:6573;;;;;;;;;;;;;;;-1:-1:-1;;;577:6573:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:6573:28;;;;;;;;;;-1:-1:-1;;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;;-1:-1:-1;577:6573:28;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;-1:-1:-1;;;;;577:6573:28;1790:8:0;577:6573:28;;1768:10:0;:31;1764:69;;577:6573:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6056:41;6067:19;;577:6573;;;;6056:41;;;;;;:::i;:::-;577:6573;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;577:6573:28;;;;;;;;;;;;;;;;;;6204:21;;577:6573;;;;6193:44;;577:6573;;;;6193:44;;577:6573;;;;;;;;;;;6250:19;6324:34;6239:41;6115:251;6250:19;;577:6573;;;;6239:41;;;;;;:::i;:::-;6282:31;:34;:31;;:34;:::i;:::-;;577:6573;;6324:31;;:34;:::i;:::-;;:41;577:6573;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6115:251;;;577:6573;;;;;-1:-1:-1;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;577:6573:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:69:0;577:6573:28;;-1:-1:-1;;;1808:25:0;;1768:10;577:6573:28;1808:25:0;;577:6573:28;;;1808:25:0;577:6573:28;;;;;;-1:-1:-1;;577:6573:28;;;;-1:-1:-1;;;;;577:6573:28;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;-1:-1:-1;;;;;577:6573:28;;:::i;:::-;7061:66;577:6573;;;;;;;;7069:10;:19;7061:66;:::i;:::-;577:6573;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;-1:-1:-1;;;;;577:6573:28;;:::i;:::-;7061:66;577:6573;;;;;;;;7069:10;:19;7061:66;:::i;:::-;577:6573;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;4058:37;577:6573;;;:::i;:::-;;;-1:-1:-1;;;;;577:6573:28;;7061:66;;577:6573;;7069:10;:19;7061:66;:::i;:::-;577:6573;;;;3903:13;577:6573;;3895:94;577:6573;;;;;;3903:42;577:6573;;;;;;3903:50;3895:94;:::i;:::-;577:6573;;;3903:13;577:6573;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4058:37;577:6573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3903:13;577:6573;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;;;:::i;:::-;6508:21;6546:11;;;6542:43;;577:6573;6614:36;;;;;;;577:6573;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;6667:5;6663:71;;577:6573;6663:71;577:6573;;-1:-1:-1;;;6681:53:28;;6701:10;577:6573;6681:53;;577:6573;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;6681:53;577:6573;;;6542:43;577:6573;;-1:-1:-1;;;6566:19:28;;577:6573;;6566:19;577:6573;;;;;;-1:-1:-1;;577:6573:28;;;;;;:::i;:::-;-1:-1:-1;;;;;577:6573:28;;:::i;:::-;;;;;;;;6861:39;;6894:4;577:6573;6861:39;;577:6573;;6861:39;;;577:6573;6861:39;;;;;;;;;577:6573;6861:39;;;577:6573;6917:11;;;6913:43;;577:6573;;-1:-1:-1;;;6969:45:28;;-1:-1:-1;;;;;577:6573:28;;;;;6969:45;;577:6573;;;;;;;;;;;;;;-1:-1:-1;;6969:45:28;;;;;;;;577:6573;6969:45;;;;;;-1:-1:-1;6969:45:28;;;;;;:::i;6861:39::-;;;;;;;;;;;;;;;;:::i;:::-;;;577:6573;;;;;6861:39;;;;;;;;577:6573;;;;;;;;;;;;;-1:-1:-1;;;;;577:6573:28;;;:::i;:::-;;;;1935:69;577:6573;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1935:69;577:6573;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;577:6573:28;;;;;;-1:-1:-1;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;;-1:-1:-1;577:6573:28;;1935:69;577:6573;;;;;;-1:-1:-1;577:6573:28;;;;;;;;;-1:-1:-1;;577:6573:28;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;577:6573:28;;;7061:66;;577:6573;;7069:10;:19;7061:66;:::i;:::-;577:6573;3305:30;;577:6573;;;;;;;3381:13;577:6573;;;;3373:95;577:6573;;;;;3381:42;577:6573;;;;;3373:95;:::i;:::-;577:6573;;;;;;;;;;;;;;;;;;;;3515:150;;;577:6573;;;;;3515:150;;577:6573;;;;;;;3381:13;577:6573;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;3749:52;577:6573;;;;;;-1:-1:-1;;;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3749:52;;;577:6573;;;;;-1:-1:-1;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;3749:52;577:6573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3381:13;577:6573;;;;;;;;;;;3381:13;577:6573;;;;:::i;:::-;;;;;;;-1:-1:-1;;;577:6573:28;;;;;;;;;;;;-1:-1:-1;;;577:6573:28;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;857:56:0;;;:100;;;;577:6573:28;;;;;;;857:100:0;-1:-1:-1;;;917:40:0;;-1:-1:-1;857:100:0;;;577:6573:28;;;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;:::o;:::-;-1:-1:-1;;;;;577:6573:28;;;;;;-1:-1:-1;;577:6573:28;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;577:6573:28;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;577:6573:28;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;577:6573:28;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;577:6573:28;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;577:6573:28;;;;:::o;:::-;;;;-1:-1:-1;;;;;577:6573:28;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;577:6573:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;577:6573:28;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;577:6573:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1068600","executionCost":"infinite","totalCost":"infinite"},"external":{"addReceiver(string,address)":"infinite","ccipReceicers(address)":"infinite","ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"infinite","denylistDestinationChain(uint64)":"26804","getRouter()":"infinite","removeReceiver(address)":"infinite","sendMessagePayLINK(uint64,address,bytes)":"infinite","supportsInterface(bytes4)":"271","whitelistDestinationChain(uint64)":"26832","whitelistedDestinationChains(uint64)":"2597","withdraw(address)":"infinite","withdrawToken(address,address)":"infinite"},"internal":{"_buildCCIPMessage(address,bytes memory,address)":"infinite","_ccipReceive(struct Client.Any2EVMMessage memory)":"infinite"}},"methodIdentifiers":{"addReceiver(string,address)":"1d5e2947","ccipReceicers(address)":"1f27166d","ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"85572ffb","denylistDestinationChain(uint64)":"73645cff","getRouter()":"b0f479a1","removeReceiver(address)":"6552d8b4","sendMessagePayLINK(uint64,address,bytes)":"a30e3770","supportsInterface(bytes4)":"01ffc9a7","whitelistDestinationChain(uint64)":"7898d184","whitelistedDestinationChains(uint64)":"835b347c","withdraw(address)":"51cff8d9","withdrawToken(address,address)":"3aeac4e1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_linkToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"}],\"name\":\"DestinationChainNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedToWithdrawEth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calculatedFees\",\"type\":\"uint256\"}],\"name\":\"NotEnoughBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"blockchainName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"}],\"name\":\"CCIPReceiverAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_receiverAddress\",\"type\":\"address\"}],\"name\":\"CCIPReceiverRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"MessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"text\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_blockchainName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_receiverAddress\",\"type\":\"address\"}],\"name\":\"addReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"}],\"name\":\"ccipReceicers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"blockchainName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isReceiver\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_destinationChainSelector\",\"type\":\"uint64\"}],\"name\":\"denylistDestinationChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiverAddress\",\"type\":\"address\"}],\"name\":\"removeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_destinationChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_receiverAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"sendMessagePayLINK\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_destinationChainSelector\",\"type\":\"uint64\"}],\"name\":\"whitelistDestinationChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"whitelistedDestinationChains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"denylistDestinationChain(uint64)\":{\"details\":\"Denylists a chain for transactions.\",\"params\":{\"_destinationChainSelector\":\"The selector of the destination chain to be denylisted.\"}},\"getRouter()\":{\"returns\":{\"_0\":\"i_router address\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}},\"whitelistDestinationChain(uint64)\":{\"details\":\"Whitelists a chain for transactions.\",\"params\":{\"_destinationChainSelector\":\"The selector of the destination chain to be whitelisted.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"denylistDestinationChain(uint64)\":{\"notice\":\"This function can only be called by the owner.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"},\"whitelistDestinationChain(uint64)\":{\"notice\":\"This function can only be called by the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HorizonS.sol\":\"HorizonS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IAny2EVMMessageReceiver} from \\\"../interfaces/IAny2EVMMessageReceiver.sol\\\";\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\nimport {IERC165} from \\\"../../vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\\\";\\n\\n/// @title CCIPReceiver - Base contract for CCIP applications that can receive messages.\\nabstract contract CCIPReceiver is IAny2EVMMessageReceiver, IERC165 {\\n  address internal immutable i_router;\\n\\n  constructor(address router) {\\n    if (router == address(0)) revert InvalidRouter(address(0));\\n    i_router = router;\\n  }\\n\\n  /// @notice IERC165 supports an interfaceId\\n  /// @param interfaceId The interfaceId to check\\n  /// @return true if the interfaceId is supported\\n  function supportsInterface(bytes4 interfaceId) public pure override returns (bool) {\\n    return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId;\\n  }\\n\\n  /// @inheritdoc IAny2EVMMessageReceiver\\n  function ccipReceive(Client.Any2EVMMessage calldata message) external virtual override onlyRouter {\\n    _ccipReceive(message);\\n  }\\n\\n  /// @notice Override this function in your implementation.\\n  /// @param message Any2EVMMessage\\n  function _ccipReceive(Client.Any2EVMMessage memory message) internal virtual;\\n\\n  /////////////////////////////////////////////////////////////////////\\n  // Plumbing\\n  /////////////////////////////////////////////////////////////////////\\n\\n  /// @notice Return the current router\\n  /// @return i_router address\\n  function getRouter() public view returns (address) {\\n    return address(i_router);\\n  }\\n\\n  error InvalidRouter(address router);\\n\\n  /// @dev only calls from the set router are accepted.\\n  modifier onlyRouter() {\\n    if (msg.sender != address(i_router)) revert InvalidRouter(msg.sender);\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xcf5d0a5cd6ed0f6a9ed721b3e532c0504ed1ba3ab6d3567165876ceb4f23b084\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\n/// @notice Application contracts that intend to receive messages from\\n/// the router should implement this interface.\\ninterface IAny2EVMMessageReceiver {\\n  /// @notice Called by the Router to deliver a message.\\n  /// If this reverts, any token transfers also revert. The message\\n  /// will move to a FAILED state and become available for manual execution.\\n  /// @param message CCIP Message\\n  /// @dev Note ensure you check the msg.sender is the OffRampRouter\\n  function ccipReceive(Client.Any2EVMMessage calldata message) external;\\n}\\n\",\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\ninterface IRouterClient {\\n  error UnsupportedDestinationChain(uint64 destChainSelector);\\n  error InsufficientFeeTokenAmount();\\n  error InvalidMsgValue();\\n\\n  /// @notice Checks if the given chain ID is supported for sending/receiving.\\n  /// @param chainSelector The chain to check.\\n  /// @return supported is true if it is supported, false if not.\\n  function isChainSupported(uint64 chainSelector) external view returns (bool supported);\\n\\n  /// @notice Gets a list of all supported tokens which can be sent or received\\n  /// to/from a given chain id.\\n  /// @param chainSelector The chainSelector.\\n  /// @return tokens The addresses of all tokens that are supported.\\n  function getSupportedTokens(uint64 chainSelector) external view returns (address[] memory tokens);\\n\\n  /// @param destinationChainSelector The destination chainSelector\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return fee returns guaranteed execution fee for the specified message\\n  /// delivery to destination chain\\n  /// @dev returns 0 fee on invalid message.\\n  function getFee(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage memory message\\n  ) external view returns (uint256 fee);\\n\\n  /// @notice Request a message to be sent to the destination chain\\n  /// @param destinationChainSelector The destination chain ID\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return messageId The message ID\\n  /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\\n  /// the overpayment with no refund.\\n  function ccipSend(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage calldata message\\n  ) external payable returns (bytes32);\\n}\\n\",\"keccak256\":\"0x9899fab6a40f68408ddf153612c553f2441ea27770176bf71ccce22c40393286\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// End consumer library.\\nlibrary Client {\\n  struct EVMTokenAmount {\\n    address token; // token address on the local chain.\\n    uint256 amount; // Amount of tokens.\\n  }\\n\\n  struct Any2EVMMessage {\\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\\n    uint64 sourceChainSelector; // Source chain selector.\\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\\n    bytes data; // payload sent in original message.\\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\\n  }\\n\\n  // If extraArgs is empty bytes, the default is 200k gas limit and strict = false.\\n  struct EVM2AnyMessage {\\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\\n    bytes data; // Data payload\\n    EVMTokenAmount[] tokenAmounts; // Token transfers\\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\\n  }\\n\\n  // extraArgs will evolve to support new features\\n  // bytes4(keccak256(\\\"CCIP EVMExtraArgsV1\\\"));\\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\\n  struct EVMExtraArgsV1 {\\n    uint256 gasLimit; // ATTENTION!!! MAX GAS LIMIT 4M FOR BETA TESTING\\n    bool strict; // See strict sequencing details below.\\n  }\\n\\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x2fb8e11d517fa5ee213aaab3f4d416155cd2b72d61ba443dbeff6b41d29e9523\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `to`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address to, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `from` to `to` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 amount\\n  ) external returns (bool);\\n}\",\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n  /**\\n    * @dev Returns true if this contract implements the interface defined by\\n    * `interfaceId`. See the corresponding\\n    * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n    * to learn more about how these ids are created.\\n    *\\n    * This function call must use less than 30 000 gas.\\n    */\\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\",\"keccak256\":\"0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"},\"contracts/HorizonS.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport {IRouterClient} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\\\";\\r\\nimport {Client} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\\\";\\r\\nimport {CCIPReceiver} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\\\";\\r\\nimport {IERC20} from \\\"@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\\\";\\r\\nimport {LinkTokenInterface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\\\";\\r\\n\\r\\ncontract HorizonS is CCIPReceiver {\\r\\n\\r\\n    // Custom errors to provide more descriptive revert messages.\\r\\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees);\\r\\n    error NothingToWithdraw();\\r\\n    error FailedToWithdrawEth(address owner, address target, uint256 value);\\r\\n    error DestinationChainNotWhitelisted(uint64 destinationChainSelector);\\r\\n\\r\\n    // Event emitted when a message is sent to another chain.\\r\\n    event MessageSent(bytes32 indexed messageId, uint64 indexed destinationChainSelector, address receiver, bytes text, address feeToken, uint256 fees);\\r\\n    event MessageReceived(bytes32 indexed messageId, uint64 indexed sourceChainSelector, address sender, string text, address token, uint256 tokenAmount);\\r\\n    event CCIPReceiverAdded(string blockchainName, address receiverAddress);\\r\\n    event CCIPReceiverRemoved(address _receiverAddress);\\r\\n\\r\\n    bytes32 private lastReceivedMessageId;\\r\\n    string private lastReceivedText;\\r\\n    uint private destinationChainSelector;\\r\\n\\r\\n    address owner;\\r\\n\\r\\n    /* STRUCTS */\\r\\n    struct ReceiverInfo {\\r\\n        string blockchainName;\\r\\n        address receiverAddress;\\r\\n        bool isReceiver;\\r\\n    }\\r\\n\\r\\n    // Mapping to keep track of whitelisted destination chains.\\r\\n    mapping(uint64 => bool) public whitelistedDestinationChains;\\r\\n    // Mapping to keep track of receivers.\\r\\n    mapping(address receiverAddress => ReceiverInfo) public ccipReceicers;\\r\\n\\r\\n    LinkTokenInterface linkToken = LinkTokenInterface(0x5FA769922a6428758fb44453815e2c436c57C3c7);  //\\r\\n\\r\\n    constructor(address _router, //0x70499c328e1e2a3c41108bd3730f6670a44595d1\\r\\n                address _linkToken //0x326C977E6efc84E512bB9C30f76E30c160eD06FB\\r\\n               ) CCIPReceiver(_router){ \\r\\n        linkToken = LinkTokenInterface(_linkToken);\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    /// @dev Whitelists a chain for transactions.\\r\\n    /// @notice This function can only be called by the owner.\\r\\n    /// @param _destinationChainSelector The selector of the destination chain to be whitelisted.\\r\\n    function whitelistDestinationChain(uint64 _destinationChainSelector) external onlyOwner {\\r\\n        whitelistedDestinationChains[_destinationChainSelector] = true;\\r\\n    }\\r\\n\\r\\n    /// @dev Denylists a chain for transactions.\\r\\n    /// @notice This function can only be called by the owner.\\r\\n    /// @param _destinationChainSelector The selector of the destination chain to be denylisted.\\r\\n    function denylistDestinationChain(uint64 _destinationChainSelector) external onlyOwner {\\r\\n        whitelistedDestinationChains[_destinationChainSelector] = false;\\r\\n    }\\r\\n\\r\\n    function addReceiver(string memory _blockchainName, address _receiverAddress) public onlyOwner{\\r\\n        require(_receiverAddress != address(0), \\\"Enter a valid address!\\\");\\r\\n        require(ccipReceicers[_receiverAddress].isReceiver == false, \\\"Receiver is already registered!\\\");\\r\\n\\r\\n        ReceiverInfo memory newReceiver = ReceiverInfo({\\r\\n            blockchainName: _blockchainName,\\r\\n            receiverAddress: _receiverAddress,\\r\\n            isReceiver: true\\r\\n        });\\r\\n        \\r\\n        ccipReceicers[_receiverAddress] = newReceiver;\\r\\n\\r\\n        emit CCIPReceiverAdded(_blockchainName, _receiverAddress);\\r\\n    }\\r\\n\\r\\n    function removeReceiver(address _receiverAddress) public onlyOwner {\\r\\n        require(ccipReceicers[_receiverAddress].isReceiver == true, \\\"Receiver is already registered!\\\");\\r\\n\\r\\n        delete ccipReceicers[_receiverAddress];\\r\\n\\r\\n        emit CCIPReceiverRemoved(_receiverAddress);\\r\\n    }\\r\\n\\r\\n    function sendMessagePayLINK(uint64 _destinationChainSelector, address _receiverAddress, bytes memory _data) external /*onlyOwner*/ returns (bytes32 messageId){\\r\\n        require(ccipReceicers[_receiverAddress].receiverAddress != address(0), \\\"Enter a valid receiver address!\\\");\\r\\n        require(ccipReceicers[_receiverAddress].isReceiver == true, \\\"This receiver is not whitelisted yet!\\\");\\r\\n\\r\\n        Client.EVM2AnyMessage memory evm2AnyMessage = _buildCCIPMessage(\\r\\n            ccipReceicers[_receiverAddress].receiverAddress,\\r\\n            _data,\\r\\n            address(linkToken)\\r\\n        );\\r\\n\\r\\n        IRouterClient router = IRouterClient(this.getRouter());\\r\\n\\r\\n        uint256 fees = router.getFee(_destinationChainSelector, evm2AnyMessage);\\r\\n\\r\\n        if (fees > linkToken.balanceOf(address(this)))\\r\\n            revert NotEnoughBalance(linkToken.balanceOf(address(this)), fees);\\r\\n\\r\\n        linkToken.approve(address(router), fees);\\r\\n\\r\\n        messageId = router.ccipSend(_destinationChainSelector, evm2AnyMessage);\\r\\n\\r\\n        emit MessageSent(messageId, _destinationChainSelector, _receiverAddress, _data, address(0), fees);\\r\\n\\r\\n        return messageId;\\r\\n    }\\r\\n\\r\\n    function _buildCCIPMessage(address _receiver, bytes memory _data, address _feeTokenAddress) internal pure returns (Client.EVM2AnyMessage memory) {\\r\\n        Client.EVM2AnyMessage memory evm2AnyMessage = Client.EVM2AnyMessage({\\r\\n            receiver: abi.encode(_receiver),\\r\\n            data: abi.encode(_data),\\r\\n            tokenAmounts: new Client.EVMTokenAmount[](0),\\r\\n            extraArgs:  Client._argsToBytes(\\r\\n                Client.EVMExtraArgsV1({gasLimit: 800_000, strict: false})\\r\\n            ),\\r\\n            feeToken: _feeTokenAddress\\r\\n        });\\r\\n        return evm2AnyMessage;\\r\\n    }\\r\\n\\r\\n    function _ccipReceive(Client.Any2EVMMessage memory any2EvmMessage) internal override{\\r\\n        lastReceivedMessageId = any2EvmMessage.messageId;\\r\\n        lastReceivedText = abi.decode(any2EvmMessage.data, (string));\\r\\n\\r\\n        emit MessageReceived(any2EvmMessage.messageId, any2EvmMessage.sourceChainSelector, abi.decode(any2EvmMessage.sender, (address)), abi.decode(any2EvmMessage.data, (string)), any2EvmMessage.destTokenAmounts[0].token, any2EvmMessage.destTokenAmounts[0].amount);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function withdraw(address _beneficiary) public /*onlyOwner*/ {\\r\\n        uint256 amount = address(this).balance;\\r\\n\\r\\n        if (amount == 0) revert NothingToWithdraw();\\r\\n\\r\\n        (bool sent, ) = _beneficiary.call{value: amount}(\\\"\\\");\\r\\n\\r\\n        if (!sent) revert FailedToWithdrawEth(msg.sender, _beneficiary, amount);\\r\\n    }\\r\\n\\r\\n    function withdrawToken( address _beneficiary, address _token) public /*onlyOwner*/ {\\r\\n        uint256 amount = IERC20(_token).balanceOf(address(this));\\r\\n\\r\\n        if (amount == 0) revert NothingToWithdraw();\\r\\n\\r\\n        IERC20(_token).transfer(_beneficiary, amount);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner(){\\r\\n        require(msg.sender == owner, \\\"Only Owner can call this function!\\\");\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0dab2432c491404581cb935816aacd25d31b6c5ed774939901b3c44ccab7efaf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6491,"contract":"contracts/HorizonS.sol:HorizonS","label":"lastReceivedMessageId","offset":0,"slot":"0","type":"t_bytes32"},{"astId":6493,"contract":"contracts/HorizonS.sol:HorizonS","label":"lastReceivedText","offset":0,"slot":"1","type":"t_string_storage"},{"astId":6495,"contract":"contracts/HorizonS.sol:HorizonS","label":"destinationChainSelector","offset":0,"slot":"2","type":"t_uint256"},{"astId":6497,"contract":"contracts/HorizonS.sol:HorizonS","label":"owner","offset":0,"slot":"3","type":"t_address"},{"astId":6508,"contract":"contracts/HorizonS.sol:HorizonS","label":"whitelistedDestinationChains","offset":0,"slot":"4","type":"t_mapping(t_uint64,t_bool)"},{"astId":6513,"contract":"contracts/HorizonS.sol:HorizonS","label":"ccipReceicers","offset":0,"slot":"5","type":"t_mapping(t_address,t_struct(ReceiverInfo)6504_storage)"},{"astId":6519,"contract":"contracts/HorizonS.sol:HorizonS","label":"linkToken","offset":0,"slot":"6","type":"t_contract(LinkTokenInterface)522"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(LinkTokenInterface)522":{"encoding":"inplace","label":"contract LinkTokenInterface","numberOfBytes":"20"},"t_mapping(t_address,t_struct(ReceiverInfo)6504_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct HorizonS.ReceiverInfo)","numberOfBytes":"32","value":"t_struct(ReceiverInfo)6504_storage"},"t_mapping(t_uint64,t_bool)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bool)","numberOfBytes":"32","value":"t_bool"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(ReceiverInfo)6504_storage":{"encoding":"inplace","label":"struct HorizonS.ReceiverInfo","members":[{"astId":6499,"contract":"contracts/HorizonS.sol:HorizonS","label":"blockchainName","offset":0,"slot":"0","type":"t_string_storage"},{"astId":6501,"contract":"contracts/HorizonS.sol:HorizonS","label":"receiverAddress","offset":0,"slot":"1","type":"t_address"},{"astId":6503,"contract":"contracts/HorizonS.sol:HorizonS","label":"isReceiver","offset":20,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"notice":"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."},"denylistDestinationChain(uint64)":{"notice":"This function can only be called by the owner."},"getRouter()":{"notice":"Return the current router"},"supportsInterface(bytes4)":{"notice":"IERC165 supports an interfaceId"},"whitelistDestinationChain(uint64)":{"notice":"This function can only be called by the owner."}},"version":1}}},"contracts/HorizonStaff.sol":{"HorizonStaff":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"NothingToWithdraw","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_wallet","type":"address"}],"name":"AdminADD","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_wallet","type":"address"}],"name":"AdminRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_installmentNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_dateOfPayment","type":"uint256"}],"name":"InstallmentDateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"currentInterestRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountToPay","type":"uint256"}],"name":"PaymentIsLate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_amountToPay","type":"uint256"}],"name":"TheInstallmentIsOneDayLate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_paymentDelay","type":"uint256"}],"name":"TheInstallmenteIsOnTime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"currentInterestRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountToPay","type":"uint256"}],"name":"TheTitleIsCloseToBeCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"contract IERC20","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"}],"name":"TokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"address","name":"_stablecoin","type":"address"}],"name":"TokenRemoved","type":"event"},{"inputs":[{"internalType":"address","name":"_wallet","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_scheduleId","type":"uint256"},{"internalType":"uint256","name":"_drawNumber","type":"uint256"}],"name":"addParticipantsToDraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_stablecoin","type":"address"},{"internalType":"string","name":"_tokenSymbol","type":"string"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"coinAddress","type":"address"}],"name":"allowedCrypto","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"},{"internalType":"contract IERC20","name":"stablecoin","type":"address"},{"internalType":"bool","name":"isStable","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseInterestRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_paymentDelay","type":"uint256"},{"internalType":"uint256","name":"_scheduleId","type":"uint256"},{"internalType":"uint256","name":"_inicialInstallment","type":"uint256"}],"name":"calculateDelayedPayment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_titleId","type":"uint256"},{"internalType":"uint256","name":"_numPayments","type":"uint256"},{"internalType":"uint256","name":"_closing","type":"uint256"}],"name":"createSchedule","outputs":[{"internalType":"uint256","name":"_scheduleId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dailyInterestRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_wallet","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_stablecoin","type":"address"}],"name":"removeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_stablecoin","type":"address"}],"name":"returnAvailableStablecoin","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"contract IERC20","name":"","type":"address"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_scheduleId","type":"uint256"},{"internalType":"uint256","name":"_installmentNumber","type":"uint256"}],"name":"returnDrawDate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_scheduleId","type":"uint256"},{"internalType":"uint256","name":"_drawNumber","type":"uint256"}],"name":"returnDrawParticipants","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_scheduleId","type":"uint256"},{"internalType":"uint256","name":"_installmentNumber","type":"uint256"}],"name":"returnPaymentDeadline","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"adminWallet","type":"address"}],"name":"staff","outputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"bool","name":"isAdmin","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_baseRate","type":"uint256"},{"internalType":"uint256","name":"_dailyRate","type":"uint256"}],"name":"updateInterest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_scheduleId","type":"uint256"},{"internalType":"uint256","name":"_installmentNumber","type":"uint256"},{"internalType":"uint256","name":"_dateOfPayment","type":"uint256"}],"name":"updatePaymentDate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_tokenAddress","type":"address"}],"name":"withdrawProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461003b576001600055600a6001556003600255603c6003553360018060a01b031960045416176004556113e490816100418239f35b600080fdfe60806040908082526004918236101561001757600080fd5b600092833560e01c9283630d65a8e8146110bc57508383631785f53c146110465750826329b00732146110305782632b18775514610ee25782632c8da56014610bf15782634f83158a14610ba65782635294bac81461096b578263559006c21461071f5782635fa7b5841461058557826364cf0e4014610556578263668fb6dc1461037c5782637048027514610252575081637c4c4b89146101fb5781637fca631f146101dc5781638c83ddd314610163578163ac066fa21461012d578163afd927621461010a575063b4f9a7e0146100ef57600080fd5b34610107576100fd366110e9565b9060015560025580f35b80fd5b9050346101295781600319360112610129576020906001549051908152f35b5080fd5b90503461012957600190610140366110e9565b908452600660205281842090845260205282200161015e815461139f565b905580f35b8234610107576020366003190112610107576001600160a01b03916101d89060ff6001828661019061111e565b169586815260056020526101a58282206111a6565b968152600560205220019485541694856001600160601b0360a01b60085416176008555460a01c1690519384938461128c565b0390f35b9050346101295781600319360112610129576020906002549051908152f35b8234610107576020366003190112610107576001600160a01b03906101d89083908361022561111e565b16815260056020522092600161023a856111a6565b940154905193849360ff8360a01c169216908461128c565b838234610129576020366003190112610129576001600160a01b0383358181169290839003610378576102868315156112ba565b828452600760205260ff8185205460a01c166103365780519181830183811067ffffffffffffffff821117610323578252838352600160208085019182528587526007905291852092518354925160ff60a01b90151560a01b166001600160a81b0319909316911660ff60a01b1916171790559091507fda51e137fbd273174ffcac81ca558daee6ff0b24569cb9bc7086453e280dca278280a280f35b634e487b7160e01b865260418752602486fd5b5162461bcd60e51b8152602081860152601860248201527f41646d696e20616c7265616479207265676973746572656400000000000000006044820152606490fd5b8380fd5b91503461055257602090816003193601126103785761039961111e565b83546001600160a01b03908116913383900361050f57811680875260058552600160ff81868a20015460a01c161515036104d857865260058452600183872001541693846001600160601b0360a01b60085416176008558251946370a0823160e01b865230828701528486602481845afa9586156104ce57879661049b575b50851561048c57849291876044928651988995869463a9059cbb60e01b865285015260248401525af19081156104835750610451578280f35b81813d831161047c575b6104658183611134565b810103126101295751801515036101075738808280f35b503d61045b565b513d85823e3d90fd5b508251630686827b60e51b8152fd5b9095508481813d83116104c7575b6104b38183611134565b810103126104c357519438610418565b8680fd5b503d6104a9565b84513d89823e3d90fd5b835162461bcd60e51b81528087018690526011602482015270151bdad95b881b9bdd08185b1b1bddd959607a1b6044820152606490fd5b835162461bcd60e51b8152808701869052601c60248201527f5468652063616c6c6572206d75737420626520746865206f776e6572000000006044820152606490fd5b8280fd5b8382346101295760028160209361056c366110e9565b9082526006865282822090825285522001549051908152f35b50823461010757602080600319360112610129576001600160a01b0390816105ab61111e565b16908184526005815260019283868620015416916105ca831515611306565b84526005815284842094846105df875461116c565b806106e6575b5084870155805193818552859680546105fd8161116c565b8094880152828116908160001461069e5750600114610647575b867f1adb68f0a540855cafa9d341c1e94a36fa13b8a15ff602507addfe49c0f018d187808b89898301520390a180f35b865282862092965085925b82841061068a57505050820160600193817f1adb68f0a540855cafa9d341c1e94a36fa13b8a15ff602507addfe49c0f018d184610617565b805486850160600152928701928101610652565b60ff191660608881019190915293151560051b870190930197508492507f1adb68f0a540855cafa9d341c1e94a36fa13b8a15ff602507addfe49c0f018d19150859050610617565b601f81116001146106fc575086555b84876105e5565b878252610716601f858420920160051c8201878301611352565b818855556106f5565b8382346101295761072f36611104565b90918215610912578085526020956006875284862084875287528385872054036108cf578186526006875284862084875287526002858720015483111561088157603c8302838104603c148415171561085b5782875260068852858720600019860186811161086e578852885260028688200154810390811161085b5761012c10156107fc57509484957ffc0b6df00175009634ee8493748db715994ef6a2da308acd70658b3b4f3222b1955260068152838620838752815281600285882001558351928352820152a180f35b845162461bcd60e51b8152908101879052603360248201527f4d7573742068617665206120706572696f64206f662033302064617973206265604482015272747765656e20696e7374616c6c6d656e74732160681b6064820152608490fd5b634e487b7160e01b875260118252602487fd5b634e487b7160e01b895260118452602489fd5b845162461bcd60e51b8152908101879052602260248201527f596f752063616e206f6e6c7920706f7374706f6e6520746865207061796d656e604482015261742160f01b6064820152608490fd5b845162461bcd60e51b8152908101879052601e60248201527f496e7374616c6c6d656e74206e756d626572206d7573742065786973742100006044820152606490fd5b835162461bcd60e51b8152602081880152602d60248201527f496e7374616c6c6d656e74206e756d626572206d75737420626520677265617460448201526c6572207468616e207a65726f2160981b6064820152608490fd5b8382346101295761097b36611104565b90918215610b505742821115610af15761012c91828101809111610ade5760019283915b858511156109bf57602088888154916109b78361139f565b905551908152f35b42811115610a8f5781810190818111610a7c5783546002908154918a519360c0850185811067ffffffffffffffff821117610a6757610a6196959492600594928f8f8e918e958252828a52602092838b0193828552838c0195865260608c01978d895260808d01998a5260a08d019a8b52835260068152838320918352522097518855518b8801555190860155516003850155518d840155519101559461139f565b9361099f565b5050634e487b7160e01b8c5260418d5260248cfd5b634e487b7160e01b895260118a52602489fd5b865162461bcd60e51b81526020818b0152602360248201527f5061796d656e742064617465206d75737420626520696e20746865206675747560448201526272652160e81b6064820152608490fd5b634e487b7160e01b865260118752602486fd5b835162461bcd60e51b8152602081880152603360248201527f54686520636c6f73696e67206f66207469746c652073656c6c696e67206d75736044820152727420626520696e20746865206675747572652160681b6064820152608490fd5b835162461bcd60e51b8152602081880152602a60248201527f4e756d626572206f66207061796d656e7473206d7573742062652067726561746044820152696572207468616e20302160b01b6064820152608490fd5b839034610129576020366003190112610129576001600160a01b03919035828116908190036101295781849160ff9352600760205220548351928116835260a01c1615156020820152f35b839034610129578260031936011261012957610c0b61111e565b90602480359167ffffffffffffffff91828411610ede5736602385011215610ede578382013594838611610ecc57875193602096601f1996610c548989601f8501160188611134565b81875236858383010111610ec857818a92868b9301838a0137870101526001600160a01b0391821695610c88871515611306565b8689526005885260019183838c8c20015416610e90578a51916060830183811083821117610e7e578c52878352898301968988528c8401968588528a8d5260058c528d8d209451918251948511610e6d5750508b8b610ce7865461116c565b601f8111610e33575b5050508a91601f8411600114610da757509282610d839693610d969a9996938e9f99967f7afee0f1b802cc0f66c67890e26b4566251859cf2cd8de79b86aed7251d9756a9f92610d9c575b5050600019600383901b1c191690831b1781555b019251166001600160601b0360a01b83541617825551151581549060ff60a01b90151560a01b169060ff60a01b1916179055565b808051958695865285015283019061124c565b0390a180f35b015190508f80610d3b565b848d528b8d2092919084168d5b818110610e1e57509386937f7afee0f1b802cc0f66c67890e26b4566251859cf2cd8de79b86aed7251d9756a9e9f999693610d969c9b989383610d839b9810610e05575b505050811b018155610d4f565b015160001960f88460031b161c191690558f8080610df8565b82840151855593870193928d01928d01610db4565b818388610e5b95522090601f870160051c8201928710610e63575b601f0160051c0190611352565b8b8b8f610cf0565b9091508190610e4e565b634e487b7160e01b8e52604190528cfd5b634e487b7160e01b8c5260418852868cfd5b8a5162461bcd60e51b81528087018a905260138187015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606490fd5b8980fd5b50634e487b7160e01b86526041825285fd5b8580fd5b90833461010757610ef236611104565b60035490939281811015610f5f575050610f286020958584606494610f2f97965260068952818120868252895220015483611369565b0490611392565b907f1323840bbd6e53af646a0046b72ff8ea4144b0492c4f6d3614f8ce899804fd04838251848152a15b51908152f35b9091839594955260066020528383208584526020526005848420015492821561101d575060209550610fae92610fa192610f999204611369565b600154611392565b926064610f288583611369565b91816028821115610feb577f7882c1a4f360824e9d02cee7d2b40d77bf44368aae126f3af401776bf5e824839181519081528486820152a1610f59565b7f43df8b22d3686d15a6e74163ca342c850bc01d74db643db1d546d2bd2a93c9ec9181519081528486820152a1610f59565b634e487b7160e01b815260128752602490fd5b8382346101295760038160209361056c366110e9565b9192503461012957602036600319011261012957356001600160a01b0381169290839003610129576110798315156112ba565b82825260076020528120600160ff825460a01c1615150361012957557fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f8280a280f35b92505034610552576001906020936110d3366110e9565b9082526006865282822090825285522001548152f35b60409060031901126110ff576004359060243590565b600080fd5b60609060031901126110ff57600435906024359060443590565b600435906001600160a01b03821682036110ff57565b90601f8019910116810190811067ffffffffffffffff82111761115657604052565b634e487b7160e01b600052604160045260246000fd5b90600182811c9216801561119c575b602083101461118657565b634e487b7160e01b600052602260045260246000fd5b91607f169161117b565b90604051918260008254926111ba8461116c565b90818452600194858116908160001461122957506001146111e6575b50506111e492500383611134565b565b9093915060005260209081600020936000915b8183106112115750506111e4935082010138806111d6565b855488840185015294850194879450918301916111f9565b9150506111e494506020925060ff191682840152151560051b82010138806111d6565b919082519283825260005b848110611278575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611257565b9193926112a360409260608552606085019061124c565b6001600160a01b0390951660208401521515910152565b156112c157565b60405162461bcd60e51b815260206004820152601c60248201527f41646d696e2077616c6c65742063616e277420626520656d70747921000000006044820152606490fd5b1561130d57565b60405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f000000006044820152606490fd5b81811061135d575050565b60008155600101611352565b8181029291811591840414171561137c57565b634e487b7160e01b600052601160045260246000fd5b9190820180921161137c57565b600019811461137c576001019056fea2646970667358221220205b31180486fc9f8eb5619fc43793a49620863a45493c12b4e750fb83a8194264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3B JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0xA PUSH1 0x1 SSTORE PUSH1 0x3 PUSH1 0x2 SSTORE PUSH1 0x3C PUSH1 0x3 SSTORE CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x13E4 SWAP1 DUP2 PUSH2 0x41 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0xD65A8E8 EQ PUSH2 0x10BC JUMPI POP DUP4 DUP4 PUSH4 0x1785F53C EQ PUSH2 0x1046 JUMPI POP DUP3 PUSH4 0x29B00732 EQ PUSH2 0x1030 JUMPI DUP3 PUSH4 0x2B187755 EQ PUSH2 0xEE2 JUMPI DUP3 PUSH4 0x2C8DA560 EQ PUSH2 0xBF1 JUMPI DUP3 PUSH4 0x4F83158A EQ PUSH2 0xBA6 JUMPI DUP3 PUSH4 0x5294BAC8 EQ PUSH2 0x96B JUMPI DUP3 PUSH4 0x559006C2 EQ PUSH2 0x71F JUMPI DUP3 PUSH4 0x5FA7B584 EQ PUSH2 0x585 JUMPI DUP3 PUSH4 0x64CF0E40 EQ PUSH2 0x556 JUMPI DUP3 PUSH4 0x668FB6DC EQ PUSH2 0x37C JUMPI DUP3 PUSH4 0x70480275 EQ PUSH2 0x252 JUMPI POP DUP2 PUSH4 0x7C4C4B89 EQ PUSH2 0x1FB JUMPI DUP2 PUSH4 0x7FCA631F EQ PUSH2 0x1DC JUMPI DUP2 PUSH4 0x8C83DDD3 EQ PUSH2 0x163 JUMPI DUP2 PUSH4 0xAC066FA2 EQ PUSH2 0x12D JUMPI DUP2 PUSH4 0xAFD92762 EQ PUSH2 0x10A JUMPI POP PUSH4 0xB4F9A7E0 EQ PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH2 0xFD CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP1 PUSH1 0x1 SSTORE PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x129 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x129 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x140 CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP1 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP5 MSTORE PUSH1 0x20 MSTORE DUP3 KECCAK256 ADD PUSH2 0x15E DUP2 SLOAD PUSH2 0x139F JUMP JUMPDEST SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x1D8 SWAP1 PUSH1 0xFF PUSH1 0x1 DUP3 DUP7 PUSH2 0x190 PUSH2 0x111E JUMP JUMPDEST AND SWAP6 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1A5 DUP3 DUP3 KECCAK256 PUSH2 0x11A6 JUMP JUMPDEST SWAP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 ADD SWAP5 DUP6 SLOAD AND SWAP5 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x128C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x129 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x129 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1D8 SWAP1 DUP4 SWAP1 DUP4 PUSH2 0x225 PUSH2 0x111E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 SWAP3 PUSH1 0x1 PUSH2 0x23A DUP6 PUSH2 0x11A6 JUMP JUMPDEST SWAP5 ADD SLOAD SWAP1 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND SWAP3 AND SWAP1 DUP5 PUSH2 0x128C JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x129 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x378 JUMPI PUSH2 0x286 DUP4 ISZERO ISZERO PUSH2 0x12BA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP6 KECCAK256 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x336 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x323 JUMPI DUP3 MSTORE DUP4 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP6 DUP8 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 DUP6 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP3 MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP2 AND PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR OR SWAP1 SSTORE SWAP1 SWAP2 POP PUSH32 0xDA51E137FBD273174FFCAC81CA558DAEE6FF0B24569CB9BC7086453E280DCA27 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646D696E20616C726561647920726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 POP CALLVALUE PUSH2 0x552 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x378 JUMPI PUSH2 0x399 PUSH2 0x111E JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 CALLER DUP4 SWAP1 SUB PUSH2 0x50F JUMPI DUP2 AND DUP1 DUP8 MSTORE PUSH1 0x5 DUP6 MSTORE PUSH1 0x1 PUSH1 0xFF DUP2 DUP7 DUP11 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO SUB PUSH2 0x4D8 JUMPI DUP7 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH1 0x1 DUP4 DUP8 KECCAK256 ADD SLOAD AND SWAP4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP3 MLOAD SWAP5 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP7 MSTORE ADDRESS DUP3 DUP8 ADD MSTORE DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x4CE JUMPI DUP8 SWAP7 PUSH2 0x49B JUMPI JUMPDEST POP DUP6 ISZERO PUSH2 0x48C JUMPI DUP5 SWAP3 SWAP2 DUP8 PUSH1 0x44 SWAP3 DUP7 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x483 JUMPI POP PUSH2 0x451 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x47C JUMPI JUMPDEST PUSH2 0x465 DUP2 DUP4 PUSH2 0x1134 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x129 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x107 JUMPI CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x45B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP3 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4C7 JUMPI JUMPDEST PUSH2 0x4B3 DUP2 DUP4 PUSH2 0x1134 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C3 JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4A9 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151BDAD95B881B9BDD08185B1B1BDDD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616C6C6572206D75737420626520746865206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x2 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x56C CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x129 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x5AB PUSH2 0x111E JUMP JUMPDEST AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x1 SWAP3 DUP4 DUP7 DUP7 KECCAK256 ADD SLOAD AND SWAP2 PUSH2 0x5CA DUP4 ISZERO ISZERO PUSH2 0x1306 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP5 KECCAK256 SWAP5 DUP5 PUSH2 0x5DF DUP8 SLOAD PUSH2 0x116C JUMP JUMPDEST DUP1 PUSH2 0x6E6 JUMPI JUMPDEST POP DUP5 DUP8 ADD SSTORE DUP1 MLOAD SWAP4 DUP2 DUP6 MSTORE DUP6 SWAP7 DUP1 SLOAD PUSH2 0x5FD DUP2 PUSH2 0x116C JUMP JUMPDEST DUP1 SWAP5 DUP9 ADD MSTORE DUP3 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x69E JUMPI POP PUSH1 0x1 EQ PUSH2 0x647 JUMPI JUMPDEST DUP7 PUSH32 0x1ADB68F0A540855CAFA9D341C1E94A36FA13B8A15FF602507ADDFE49C0F018D1 DUP8 DUP1 DUP12 DUP10 DUP10 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 SWAP7 POP DUP6 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x68A JUMPI POP POP POP DUP3 ADD PUSH1 0x60 ADD SWAP4 DUP2 PUSH32 0x1ADB68F0A540855CAFA9D341C1E94A36FA13B8A15FF602507ADDFE49C0F018D1 DUP5 PUSH2 0x617 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD PUSH1 0x60 ADD MSTORE SWAP3 DUP8 ADD SWAP3 DUP2 ADD PUSH2 0x652 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x60 DUP9 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD SWAP1 SWAP4 ADD SWAP8 POP DUP5 SWAP3 POP PUSH32 0x1ADB68F0A540855CAFA9D341C1E94A36FA13B8A15FF602507ADDFE49C0F018D1 SWAP2 POP DUP6 SWAP1 POP PUSH2 0x617 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH2 0x6FC JUMPI POP DUP7 SSTORE JUMPDEST DUP5 DUP8 PUSH2 0x5E5 JUMP JUMPDEST DUP8 DUP3 MSTORE PUSH2 0x716 PUSH1 0x1F DUP6 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP8 DUP4 ADD PUSH2 0x1352 JUMP JUMPDEST DUP2 DUP9 SSTORE SSTORE PUSH2 0x6F5 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH2 0x72F CALLDATASIZE PUSH2 0x1104 JUMP JUMPDEST SWAP1 SWAP2 DUP3 ISZERO PUSH2 0x912 JUMPI DUP1 DUP6 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x6 DUP8 MSTORE DUP5 DUP7 KECCAK256 DUP5 DUP8 MSTORE DUP8 MSTORE DUP4 DUP6 DUP8 KECCAK256 SLOAD SUB PUSH2 0x8CF JUMPI DUP2 DUP7 MSTORE PUSH1 0x6 DUP8 MSTORE DUP5 DUP7 KECCAK256 DUP5 DUP8 MSTORE DUP8 MSTORE PUSH1 0x2 DUP6 DUP8 KECCAK256 ADD SLOAD DUP4 GT ISZERO PUSH2 0x881 JUMPI PUSH1 0x3C DUP4 MUL DUP4 DUP2 DIV PUSH1 0x3C EQ DUP5 ISZERO OR ISZERO PUSH2 0x85B JUMPI DUP3 DUP8 MSTORE PUSH1 0x6 DUP9 MSTORE DUP6 DUP8 KECCAK256 PUSH1 0x0 NOT DUP7 ADD DUP7 DUP2 GT PUSH2 0x86E JUMPI DUP9 MSTORE DUP9 MSTORE PUSH1 0x2 DUP7 DUP9 KECCAK256 ADD SLOAD DUP2 SUB SWAP1 DUP2 GT PUSH2 0x85B JUMPI PUSH2 0x12C LT ISZERO PUSH2 0x7FC JUMPI POP SWAP5 DUP5 SWAP6 PUSH32 0xFC0B6DF00175009634EE8493748DB715994EF6A2DA308ACD70658B3B4F3222B1 SWAP6 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP7 KECCAK256 DUP4 DUP8 MSTORE DUP2 MSTORE DUP2 PUSH1 0x2 DUP6 DUP9 KECCAK256 ADD SSTORE DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742068617665206120706572696F64206F662033302064617973206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x747765656E20696E7374616C6C6D656E747321 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C7920706F7374706F6E6520746865207061796D656E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7421 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E7374616C6C6D656E74206E756D626572206D757374206578697374210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E7374616C6C6D656E74206E756D626572206D757374206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6572207468616E207A65726F21 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH2 0x97B CALLDATASIZE PUSH2 0x1104 JUMP JUMPDEST SWAP1 SWAP2 DUP3 ISZERO PUSH2 0xB50 JUMPI TIMESTAMP DUP3 GT ISZERO PUSH2 0xAF1 JUMPI PUSH2 0x12C SWAP2 DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xADE JUMPI PUSH1 0x1 SWAP3 DUP4 SWAP2 JUMPDEST DUP6 DUP6 GT ISZERO PUSH2 0x9BF JUMPI PUSH1 0x20 DUP9 DUP9 DUP2 SLOAD SWAP2 PUSH2 0x9B7 DUP4 PUSH2 0x139F JUMP JUMPDEST SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0xA8F JUMPI DUP2 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0xA7C JUMPI DUP4 SLOAD PUSH1 0x2 SWAP1 DUP2 SLOAD SWAP2 DUP11 MLOAD SWAP4 PUSH1 0xC0 DUP6 ADD DUP6 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA67 JUMPI PUSH2 0xA61 SWAP7 SWAP6 SWAP5 SWAP3 PUSH1 0x5 SWAP5 SWAP3 DUP16 DUP16 DUP15 SWAP2 DUP15 SWAP6 DUP3 MSTORE DUP3 DUP11 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP12 ADD SWAP4 DUP3 DUP6 MSTORE DUP4 DUP13 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP13 ADD SWAP8 DUP14 DUP10 MSTORE PUSH1 0x80 DUP14 ADD SWAP10 DUP11 MSTORE PUSH1 0xA0 DUP14 ADD SWAP11 DUP12 MSTORE DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE KECCAK256 SWAP8 MLOAD DUP9 SSTORE MLOAD DUP12 DUP9 ADD SSTORE MLOAD SWAP1 DUP7 ADD SSTORE MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD DUP14 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE SWAP5 PUSH2 0x139F JUMP JUMPDEST SWAP4 PUSH2 0x99F JUMP JUMPDEST POP POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP14 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP12 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E742064617465206D75737420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x726521 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP8 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636C6F73696E67206F66207469746C652073656C6C696E67206D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x7420626520696E207468652066757475726521 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F66207061796D656E7473206D757374206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6572207468616E203021 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x129 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x129 JUMPI DUP2 DUP5 SWAP2 PUSH1 0xFF SWAP4 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP4 MLOAD SWAP3 DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x129 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x129 JUMPI PUSH2 0xC0B PUSH2 0x111E JUMP JUMPDEST SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 GT PUSH2 0xEDE JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0xEDE JUMPI DUP4 DUP3 ADD CALLDATALOAD SWAP5 DUP4 DUP7 GT PUSH2 0xECC JUMPI DUP8 MLOAD SWAP4 PUSH1 0x20 SWAP7 PUSH1 0x1F NOT SWAP7 PUSH2 0xC54 DUP10 DUP10 PUSH1 0x1F DUP6 ADD AND ADD DUP9 PUSH2 0x1134 JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE DUP6 DUP4 DUP4 ADD ADD GT PUSH2 0xEC8 JUMPI DUP2 DUP11 SWAP3 DUP7 DUP12 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 PUSH2 0xC88 DUP8 ISZERO ISZERO PUSH2 0x1306 JUMP JUMPDEST DUP7 DUP10 MSTORE PUSH1 0x5 DUP9 MSTORE PUSH1 0x1 SWAP2 DUP4 DUP4 DUP13 DUP13 KECCAK256 ADD SLOAD AND PUSH2 0xE90 JUMPI DUP11 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD DUP4 DUP2 LT DUP4 DUP3 GT OR PUSH2 0xE7E JUMPI DUP13 MSTORE DUP8 DUP4 MSTORE DUP10 DUP4 ADD SWAP7 DUP10 DUP9 MSTORE DUP13 DUP5 ADD SWAP7 DUP6 DUP9 MSTORE DUP11 DUP14 MSTORE PUSH1 0x5 DUP13 MSTORE DUP14 DUP14 KECCAK256 SWAP5 MLOAD SWAP2 DUP3 MLOAD SWAP5 DUP6 GT PUSH2 0xE6D JUMPI POP POP DUP12 DUP12 PUSH2 0xCE7 DUP7 SLOAD PUSH2 0x116C JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE33 JUMPI JUMPDEST POP POP POP DUP11 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xDA7 JUMPI POP SWAP3 DUP3 PUSH2 0xD83 SWAP7 SWAP4 PUSH2 0xD96 SWAP11 SWAP10 SWAP7 SWAP4 DUP15 SWAP16 SWAP10 SWAP7 PUSH32 0x7AFEE0F1B802CC0F66C67890E26B4566251859CF2CD8DE79B86AED7251D9756A SWAP16 SWAP3 PUSH2 0xD9C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP2 SSTORE JUMPDEST ADD SWAP3 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE MLOAD ISZERO ISZERO DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 DUP1 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x124C JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0xD3B JUMP JUMPDEST DUP5 DUP14 MSTORE DUP12 DUP14 KECCAK256 SWAP3 SWAP2 SWAP1 DUP5 AND DUP14 JUMPDEST DUP2 DUP2 LT PUSH2 0xE1E JUMPI POP SWAP4 DUP7 SWAP4 PUSH32 0x7AFEE0F1B802CC0F66C67890E26B4566251859CF2CD8DE79B86AED7251D9756A SWAP15 SWAP16 SWAP10 SWAP7 SWAP4 PUSH2 0xD96 SWAP13 SWAP12 SWAP9 SWAP4 DUP4 PUSH2 0xD83 SWAP12 SWAP9 LT PUSH2 0xE05 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0xD4F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0xDF8 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP8 ADD SWAP4 SWAP3 DUP14 ADD SWAP3 DUP14 ADD PUSH2 0xDB4 JUMP JUMPDEST DUP2 DUP4 DUP9 PUSH2 0xE5B SWAP6 MSTORE KECCAK256 SWAP1 PUSH1 0x1F DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP8 LT PUSH2 0xE63 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1352 JUMP JUMPDEST DUP12 DUP12 DUP16 PUSH2 0xCF0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x41 SWAP1 MSTORE DUP13 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP9 MSTORE DUP7 DUP13 REVERT JUMPDEST DUP11 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP11 SWAP1 MSTORE PUSH1 0x13 DUP2 DUP8 ADD MSTORE PUSH19 0x151BDAD95B88185B1C9958591E481859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP3 MSTORE DUP6 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP1 DUP4 CALLVALUE PUSH2 0x107 JUMPI PUSH2 0xEF2 CALLDATASIZE PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP4 SWAP3 DUP2 DUP2 LT ISZERO PUSH2 0xF5F JUMPI POP POP PUSH2 0xF28 PUSH1 0x20 SWAP6 DUP6 DUP5 PUSH1 0x64 SWAP5 PUSH2 0xF2F SWAP8 SWAP7 MSTORE PUSH1 0x6 DUP10 MSTORE DUP2 DUP2 KECCAK256 DUP7 DUP3 MSTORE DUP10 MSTORE KECCAK256 ADD SLOAD DUP4 PUSH2 0x1369 JUMP JUMPDEST DIV SWAP1 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH32 0x1323840BBD6E53AF646A0046B72FF8EA4144B0492C4F6D3614F8CE899804FD04 DUP4 DUP3 MLOAD DUP5 DUP2 MSTORE LOG1 JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 DUP4 SWAP6 SWAP5 SWAP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x5 DUP5 DUP5 KECCAK256 ADD SLOAD SWAP3 DUP3 ISZERO PUSH2 0x101D JUMPI POP PUSH1 0x20 SWAP6 POP PUSH2 0xFAE SWAP3 PUSH2 0xFA1 SWAP3 PUSH2 0xF99 SWAP3 DIV PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1392 JUMP JUMPDEST SWAP3 PUSH1 0x64 PUSH2 0xF28 DUP6 DUP4 PUSH2 0x1369 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x28 DUP3 GT ISZERO PUSH2 0xFEB JUMPI PUSH32 0x7882C1A4F360824E9D02CEE7D2B40D77BF44368AAE126F3AF401776BF5E82483 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP5 DUP7 DUP3 ADD MSTORE LOG1 PUSH2 0xF59 JUMP JUMPDEST PUSH32 0x43DF8B22D3686D15A6E74163CA342C850BC01D74DB643DB1D546D2BD2A93C9EC SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP5 DUP7 DUP3 ADD MSTORE LOG1 PUSH2 0xF59 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 DUP8 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x3 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x56C CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP3 POP CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x129 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x129 JUMPI PUSH2 0x1079 DUP4 ISZERO ISZERO PUSH2 0x12BA JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO SUB PUSH2 0x129 JUMPI SSTORE PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x552 JUMPI PUSH1 0x1 SWAP1 PUSH1 0x20 SWAP4 PUSH2 0x10D3 CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP6 MSTORE KECCAK256 ADD SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x10FF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x10FF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1156 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x119C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1186 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x117B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x11BA DUP5 PUSH2 0x116C JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1229 JUMPI POP PUSH1 0x1 EQ PUSH2 0x11E6 JUMPI JUMPDEST POP POP PUSH2 0x11E4 SWAP3 POP SUB DUP4 PUSH2 0x1134 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1211 JUMPI POP POP PUSH2 0x11E4 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x11D6 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11E4 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x11D6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1278 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1257 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 PUSH2 0x12A3 PUSH1 0x40 SWAP3 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x12C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646D696E2077616C6C65742063616E277420626520656D7074792100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x130D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x135D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1352 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x137C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x137C JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x137C JUMPI PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 JUMPDEST BALANCE XOR DIV DUP7 0xFC SWAP16 DUP15 0xB5 PUSH2 0x9FC4 CALLDATACOPY SWAP4 LOG4 SWAP7 KECCAK256 DUP7 GASPRICE GASLIMIT 0x49 EXTCODECOPY SLT 0xB4 0xE7 POP 0xFB DUP4 0xA8 NOT TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"160:8757:29:-:0;;;;;;;237:1;;160:8757;276:2;237:1;160:8757;317:1;;160:8757;339:2;317:1;160:8757;1701:10;160:8757;;;;;;1693:18;160:8757;;;1693:18;160:8757;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_contract_IERC20":{"entryPoint":4382,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":4329,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint256t_uint256t_uint256":{"entryPoint":4356,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_string":{"entryPoint":4684,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_contract_IERC20_bool":{"entryPoint":4748,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_uint256":{"entryPoint":5010,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":4969,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":4946,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_string":{"entryPoint":4518,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4460,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4404,"id":null,"parameterSlots":2,"returnSlots":0},"increment_uint256":{"entryPoint":5023,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_17f9":{"entryPoint":4794,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b97b":{"entryPoint":4870,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0xD65A8E8 EQ PUSH2 0x10BC JUMPI POP DUP4 DUP4 PUSH4 0x1785F53C EQ PUSH2 0x1046 JUMPI POP DUP3 PUSH4 0x29B00732 EQ PUSH2 0x1030 JUMPI DUP3 PUSH4 0x2B187755 EQ PUSH2 0xEE2 JUMPI DUP3 PUSH4 0x2C8DA560 EQ PUSH2 0xBF1 JUMPI DUP3 PUSH4 0x4F83158A EQ PUSH2 0xBA6 JUMPI DUP3 PUSH4 0x5294BAC8 EQ PUSH2 0x96B JUMPI DUP3 PUSH4 0x559006C2 EQ PUSH2 0x71F JUMPI DUP3 PUSH4 0x5FA7B584 EQ PUSH2 0x585 JUMPI DUP3 PUSH4 0x64CF0E40 EQ PUSH2 0x556 JUMPI DUP3 PUSH4 0x668FB6DC EQ PUSH2 0x37C JUMPI DUP3 PUSH4 0x70480275 EQ PUSH2 0x252 JUMPI POP DUP2 PUSH4 0x7C4C4B89 EQ PUSH2 0x1FB JUMPI DUP2 PUSH4 0x7FCA631F EQ PUSH2 0x1DC JUMPI DUP2 PUSH4 0x8C83DDD3 EQ PUSH2 0x163 JUMPI DUP2 PUSH4 0xAC066FA2 EQ PUSH2 0x12D JUMPI DUP2 PUSH4 0xAFD92762 EQ PUSH2 0x10A JUMPI POP PUSH4 0xB4F9A7E0 EQ PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x107 JUMPI PUSH2 0xFD CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP1 PUSH1 0x1 SSTORE PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x129 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x129 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x1 SWAP1 PUSH2 0x140 CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP1 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP5 MSTORE PUSH1 0x20 MSTORE DUP3 KECCAK256 ADD PUSH2 0x15E DUP2 SLOAD PUSH2 0x139F JUMP JUMPDEST SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x1D8 SWAP1 PUSH1 0xFF PUSH1 0x1 DUP3 DUP7 PUSH2 0x190 PUSH2 0x111E JUMP JUMPDEST AND SWAP6 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1A5 DUP3 DUP3 KECCAK256 PUSH2 0x11A6 JUMP JUMPDEST SWAP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 ADD SWAP5 DUP6 SLOAD AND SWAP5 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x128C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x129 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x129 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x107 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1D8 SWAP1 DUP4 SWAP1 DUP4 PUSH2 0x225 PUSH2 0x111E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 SWAP3 PUSH1 0x1 PUSH2 0x23A DUP6 PUSH2 0x11A6 JUMP JUMPDEST SWAP5 ADD SLOAD SWAP1 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0xFF DUP4 PUSH1 0xA0 SHR AND SWAP3 AND SWAP1 DUP5 PUSH2 0x128C JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x129 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x378 JUMPI PUSH2 0x286 DUP4 ISZERO ISZERO PUSH2 0x12BA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP6 KECCAK256 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x336 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x323 JUMPI DUP3 MSTORE DUP4 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP6 DUP8 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 DUP6 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP3 MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP2 AND PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR OR SWAP1 SSTORE SWAP1 SWAP2 POP PUSH32 0xDA51E137FBD273174FFCAC81CA558DAEE6FF0B24569CB9BC7086453E280DCA27 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646D696E20616C726561647920726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 POP CALLVALUE PUSH2 0x552 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x378 JUMPI PUSH2 0x399 PUSH2 0x111E JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 CALLER DUP4 SWAP1 SUB PUSH2 0x50F JUMPI DUP2 AND DUP1 DUP8 MSTORE PUSH1 0x5 DUP6 MSTORE PUSH1 0x1 PUSH1 0xFF DUP2 DUP7 DUP11 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO SUB PUSH2 0x4D8 JUMPI DUP7 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH1 0x1 DUP4 DUP8 KECCAK256 ADD SLOAD AND SWAP4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP3 MLOAD SWAP5 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP7 MSTORE ADDRESS DUP3 DUP8 ADD MSTORE DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x4CE JUMPI DUP8 SWAP7 PUSH2 0x49B JUMPI JUMPDEST POP DUP6 ISZERO PUSH2 0x48C JUMPI DUP5 SWAP3 SWAP2 DUP8 PUSH1 0x44 SWAP3 DUP7 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x483 JUMPI POP PUSH2 0x451 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x47C JUMPI JUMPDEST PUSH2 0x465 DUP2 DUP4 PUSH2 0x1134 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x129 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x107 JUMPI CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x45B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP3 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4C7 JUMPI JUMPDEST PUSH2 0x4B3 DUP2 DUP4 PUSH2 0x1134 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C3 JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4A9 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151BDAD95B881B9BDD08185B1B1BDDD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652063616C6C6572206D75737420626520746865206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x2 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x56C CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x107 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x129 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x5AB PUSH2 0x111E JUMP JUMPDEST AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x1 SWAP3 DUP4 DUP7 DUP7 KECCAK256 ADD SLOAD AND SWAP2 PUSH2 0x5CA DUP4 ISZERO ISZERO PUSH2 0x1306 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x5 DUP2 MSTORE DUP5 DUP5 KECCAK256 SWAP5 DUP5 PUSH2 0x5DF DUP8 SLOAD PUSH2 0x116C JUMP JUMPDEST DUP1 PUSH2 0x6E6 JUMPI JUMPDEST POP DUP5 DUP8 ADD SSTORE DUP1 MLOAD SWAP4 DUP2 DUP6 MSTORE DUP6 SWAP7 DUP1 SLOAD PUSH2 0x5FD DUP2 PUSH2 0x116C JUMP JUMPDEST DUP1 SWAP5 DUP9 ADD MSTORE DUP3 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x69E JUMPI POP PUSH1 0x1 EQ PUSH2 0x647 JUMPI JUMPDEST DUP7 PUSH32 0x1ADB68F0A540855CAFA9D341C1E94A36FA13B8A15FF602507ADDFE49C0F018D1 DUP8 DUP1 DUP12 DUP10 DUP10 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 SWAP7 POP DUP6 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x68A JUMPI POP POP POP DUP3 ADD PUSH1 0x60 ADD SWAP4 DUP2 PUSH32 0x1ADB68F0A540855CAFA9D341C1E94A36FA13B8A15FF602507ADDFE49C0F018D1 DUP5 PUSH2 0x617 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD PUSH1 0x60 ADD MSTORE SWAP3 DUP8 ADD SWAP3 DUP2 ADD PUSH2 0x652 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x60 DUP9 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD SWAP1 SWAP4 ADD SWAP8 POP DUP5 SWAP3 POP PUSH32 0x1ADB68F0A540855CAFA9D341C1E94A36FA13B8A15FF602507ADDFE49C0F018D1 SWAP2 POP DUP6 SWAP1 POP PUSH2 0x617 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH1 0x1 EQ PUSH2 0x6FC JUMPI POP DUP7 SSTORE JUMPDEST DUP5 DUP8 PUSH2 0x5E5 JUMP JUMPDEST DUP8 DUP3 MSTORE PUSH2 0x716 PUSH1 0x1F DUP6 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP8 DUP4 ADD PUSH2 0x1352 JUMP JUMPDEST DUP2 DUP9 SSTORE SSTORE PUSH2 0x6F5 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH2 0x72F CALLDATASIZE PUSH2 0x1104 JUMP JUMPDEST SWAP1 SWAP2 DUP3 ISZERO PUSH2 0x912 JUMPI DUP1 DUP6 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x6 DUP8 MSTORE DUP5 DUP7 KECCAK256 DUP5 DUP8 MSTORE DUP8 MSTORE DUP4 DUP6 DUP8 KECCAK256 SLOAD SUB PUSH2 0x8CF JUMPI DUP2 DUP7 MSTORE PUSH1 0x6 DUP8 MSTORE DUP5 DUP7 KECCAK256 DUP5 DUP8 MSTORE DUP8 MSTORE PUSH1 0x2 DUP6 DUP8 KECCAK256 ADD SLOAD DUP4 GT ISZERO PUSH2 0x881 JUMPI PUSH1 0x3C DUP4 MUL DUP4 DUP2 DIV PUSH1 0x3C EQ DUP5 ISZERO OR ISZERO PUSH2 0x85B JUMPI DUP3 DUP8 MSTORE PUSH1 0x6 DUP9 MSTORE DUP6 DUP8 KECCAK256 PUSH1 0x0 NOT DUP7 ADD DUP7 DUP2 GT PUSH2 0x86E JUMPI DUP9 MSTORE DUP9 MSTORE PUSH1 0x2 DUP7 DUP9 KECCAK256 ADD SLOAD DUP2 SUB SWAP1 DUP2 GT PUSH2 0x85B JUMPI PUSH2 0x12C LT ISZERO PUSH2 0x7FC JUMPI POP SWAP5 DUP5 SWAP6 PUSH32 0xFC0B6DF00175009634EE8493748DB715994EF6A2DA308ACD70658B3B4F3222B1 SWAP6 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP7 KECCAK256 DUP4 DUP8 MSTORE DUP2 MSTORE DUP2 PUSH1 0x2 DUP6 DUP9 KECCAK256 ADD SSTORE DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742068617665206120706572696F64206F662033302064617973206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x747765656E20696E7374616C6C6D656E747321 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C7920706F7374706F6E6520746865207061796D656E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7421 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E7374616C6C6D656E74206E756D626572206D757374206578697374210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E7374616C6C6D656E74206E756D626572206D757374206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6572207468616E207A65726F21 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH2 0x97B CALLDATASIZE PUSH2 0x1104 JUMP JUMPDEST SWAP1 SWAP2 DUP3 ISZERO PUSH2 0xB50 JUMPI TIMESTAMP DUP3 GT ISZERO PUSH2 0xAF1 JUMPI PUSH2 0x12C SWAP2 DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH2 0xADE JUMPI PUSH1 0x1 SWAP3 DUP4 SWAP2 JUMPDEST DUP6 DUP6 GT ISZERO PUSH2 0x9BF JUMPI PUSH1 0x20 DUP9 DUP9 DUP2 SLOAD SWAP2 PUSH2 0x9B7 DUP4 PUSH2 0x139F JUMP JUMPDEST SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST TIMESTAMP DUP2 GT ISZERO PUSH2 0xA8F JUMPI DUP2 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0xA7C JUMPI DUP4 SLOAD PUSH1 0x2 SWAP1 DUP2 SLOAD SWAP2 DUP11 MLOAD SWAP4 PUSH1 0xC0 DUP6 ADD DUP6 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA67 JUMPI PUSH2 0xA61 SWAP7 SWAP6 SWAP5 SWAP3 PUSH1 0x5 SWAP5 SWAP3 DUP16 DUP16 DUP15 SWAP2 DUP15 SWAP6 DUP3 MSTORE DUP3 DUP11 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP12 ADD SWAP4 DUP3 DUP6 MSTORE DUP4 DUP13 ADD SWAP6 DUP7 MSTORE PUSH1 0x60 DUP13 ADD SWAP8 DUP14 DUP10 MSTORE PUSH1 0x80 DUP14 ADD SWAP10 DUP11 MSTORE PUSH1 0xA0 DUP14 ADD SWAP11 DUP12 MSTORE DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE KECCAK256 SWAP8 MLOAD DUP9 SSTORE MLOAD DUP12 DUP9 ADD SSTORE MLOAD SWAP1 DUP7 ADD SSTORE MLOAD PUSH1 0x3 DUP6 ADD SSTORE MLOAD DUP14 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE SWAP5 PUSH2 0x139F JUMP JUMPDEST SWAP4 PUSH2 0x99F JUMP JUMPDEST POP POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP14 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP12 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E742064617465206D75737420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x726521 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP8 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520636C6F73696E67206F66207469746C652073656C6C696E67206D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x7420626520696E207468652066757475726521 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F66207061796D656E7473206D757374206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6572207468616E203021 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x129 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x129 JUMPI DUP2 DUP5 SWAP2 PUSH1 0xFF SWAP4 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP4 MLOAD SWAP3 DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x129 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x129 JUMPI PUSH2 0xC0B PUSH2 0x111E JUMP JUMPDEST SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP5 GT PUSH2 0xEDE JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0xEDE JUMPI DUP4 DUP3 ADD CALLDATALOAD SWAP5 DUP4 DUP7 GT PUSH2 0xECC JUMPI DUP8 MLOAD SWAP4 PUSH1 0x20 SWAP7 PUSH1 0x1F NOT SWAP7 PUSH2 0xC54 DUP10 DUP10 PUSH1 0x1F DUP6 ADD AND ADD DUP9 PUSH2 0x1134 JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE DUP6 DUP4 DUP4 ADD ADD GT PUSH2 0xEC8 JUMPI DUP2 DUP11 SWAP3 DUP7 DUP12 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP6 PUSH2 0xC88 DUP8 ISZERO ISZERO PUSH2 0x1306 JUMP JUMPDEST DUP7 DUP10 MSTORE PUSH1 0x5 DUP9 MSTORE PUSH1 0x1 SWAP2 DUP4 DUP4 DUP13 DUP13 KECCAK256 ADD SLOAD AND PUSH2 0xE90 JUMPI DUP11 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD DUP4 DUP2 LT DUP4 DUP3 GT OR PUSH2 0xE7E JUMPI DUP13 MSTORE DUP8 DUP4 MSTORE DUP10 DUP4 ADD SWAP7 DUP10 DUP9 MSTORE DUP13 DUP5 ADD SWAP7 DUP6 DUP9 MSTORE DUP11 DUP14 MSTORE PUSH1 0x5 DUP13 MSTORE DUP14 DUP14 KECCAK256 SWAP5 MLOAD SWAP2 DUP3 MLOAD SWAP5 DUP6 GT PUSH2 0xE6D JUMPI POP POP DUP12 DUP12 PUSH2 0xCE7 DUP7 SLOAD PUSH2 0x116C JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE33 JUMPI JUMPDEST POP POP POP DUP11 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xDA7 JUMPI POP SWAP3 DUP3 PUSH2 0xD83 SWAP7 SWAP4 PUSH2 0xD96 SWAP11 SWAP10 SWAP7 SWAP4 DUP15 SWAP16 SWAP10 SWAP7 PUSH32 0x7AFEE0F1B802CC0F66C67890E26B4566251859CF2CD8DE79B86AED7251D9756A SWAP16 SWAP3 PUSH2 0xD9C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP2 SSTORE JUMPDEST ADD SWAP3 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE MLOAD ISZERO ISZERO DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 DUP1 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x124C JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0xD3B JUMP JUMPDEST DUP5 DUP14 MSTORE DUP12 DUP14 KECCAK256 SWAP3 SWAP2 SWAP1 DUP5 AND DUP14 JUMPDEST DUP2 DUP2 LT PUSH2 0xE1E JUMPI POP SWAP4 DUP7 SWAP4 PUSH32 0x7AFEE0F1B802CC0F66C67890E26B4566251859CF2CD8DE79B86AED7251D9756A SWAP15 SWAP16 SWAP10 SWAP7 SWAP4 PUSH2 0xD96 SWAP13 SWAP12 SWAP9 SWAP4 DUP4 PUSH2 0xD83 SWAP12 SWAP9 LT PUSH2 0xE05 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0xD4F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0xDF8 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP8 ADD SWAP4 SWAP3 DUP14 ADD SWAP3 DUP14 ADD PUSH2 0xDB4 JUMP JUMPDEST DUP2 DUP4 DUP9 PUSH2 0xE5B SWAP6 MSTORE KECCAK256 SWAP1 PUSH1 0x1F DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP8 LT PUSH2 0xE63 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1352 JUMP JUMPDEST DUP12 DUP12 DUP16 PUSH2 0xCF0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x41 SWAP1 MSTORE DUP13 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP9 MSTORE DUP7 DUP13 REVERT JUMPDEST DUP11 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP11 SWAP1 MSTORE PUSH1 0x13 DUP2 DUP8 ADD MSTORE PUSH19 0x151BDAD95B88185B1C9958591E481859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP3 MSTORE DUP6 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP1 DUP4 CALLVALUE PUSH2 0x107 JUMPI PUSH2 0xEF2 CALLDATASIZE PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP4 SWAP3 DUP2 DUP2 LT ISZERO PUSH2 0xF5F JUMPI POP POP PUSH2 0xF28 PUSH1 0x20 SWAP6 DUP6 DUP5 PUSH1 0x64 SWAP5 PUSH2 0xF2F SWAP8 SWAP7 MSTORE PUSH1 0x6 DUP10 MSTORE DUP2 DUP2 KECCAK256 DUP7 DUP3 MSTORE DUP10 MSTORE KECCAK256 ADD SLOAD DUP4 PUSH2 0x1369 JUMP JUMPDEST DIV SWAP1 PUSH2 0x1392 JUMP JUMPDEST SWAP1 PUSH32 0x1323840BBD6E53AF646A0046B72FF8EA4144B0492C4F6D3614F8CE899804FD04 DUP4 DUP3 MLOAD DUP5 DUP2 MSTORE LOG1 JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 DUP4 SWAP6 SWAP5 SWAP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP4 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x5 DUP5 DUP5 KECCAK256 ADD SLOAD SWAP3 DUP3 ISZERO PUSH2 0x101D JUMPI POP PUSH1 0x20 SWAP6 POP PUSH2 0xFAE SWAP3 PUSH2 0xFA1 SWAP3 PUSH2 0xF99 SWAP3 DIV PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1392 JUMP JUMPDEST SWAP3 PUSH1 0x64 PUSH2 0xF28 DUP6 DUP4 PUSH2 0x1369 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x28 DUP3 GT ISZERO PUSH2 0xFEB JUMPI PUSH32 0x7882C1A4F360824E9D02CEE7D2B40D77BF44368AAE126F3AF401776BF5E82483 SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP5 DUP7 DUP3 ADD MSTORE LOG1 PUSH2 0xF59 JUMP JUMPDEST PUSH32 0x43DF8B22D3686D15A6E74163CA342C850BC01D74DB643DB1D546D2BD2A93C9EC SWAP2 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP5 DUP7 DUP3 ADD MSTORE LOG1 PUSH2 0xF59 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 DUP8 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x3 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x56C CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP2 SWAP3 POP CALLVALUE PUSH2 0x129 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x129 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x129 JUMPI PUSH2 0x1079 DUP4 ISZERO ISZERO PUSH2 0x12BA JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 KECCAK256 PUSH1 0x1 PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO SUB PUSH2 0x129 JUMPI SSTORE PUSH32 0xA3B62BC36326052D97EA62D63C3D60308ED4C3EA8AC079DD8499F1E9C4F80C0F DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x552 JUMPI PUSH1 0x1 SWAP1 PUSH1 0x20 SWAP4 PUSH2 0x10D3 CALLDATASIZE PUSH2 0x10E9 JUMP JUMPDEST SWAP1 DUP3 MSTORE PUSH1 0x6 DUP7 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP3 MSTORE DUP6 MSTORE KECCAK256 ADD SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x10FF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x10FF JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10FF JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1156 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x119C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1186 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x117B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x11BA DUP5 PUSH2 0x116C JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1229 JUMPI POP PUSH1 0x1 EQ PUSH2 0x11E6 JUMPI JUMPDEST POP POP PUSH2 0x11E4 SWAP3 POP SUB DUP4 PUSH2 0x1134 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1211 JUMPI POP POP PUSH2 0x11E4 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x11D6 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x11F9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11E4 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x11D6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1278 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1257 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 PUSH2 0x12A3 PUSH1 0x40 SWAP3 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x12C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646D696E2077616C6C65742063616E277420626520656D7074792100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x130D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x135D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1352 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x137C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x137C JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x137C JUMPI PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 JUMPDEST BALANCE XOR DIV DUP7 0xFC SWAP16 DUP15 0xB5 PUSH2 0x9FC4 CALLDATACOPY SWAP4 LOG4 SWAP7 KECCAK256 DUP7 GASPRICE GASLIMIT 0x49 EXTCODECOPY SLT 0xB4 0xE7 POP 0xFB DUP4 0xA8 NOT TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"160:8757:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3947:327;160:8757;3947:327;;;160:8757;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7125:28;160:8757;7164:30;160:8757;;;;;;;;;;;;;;;;;;;;;;245:33;160:8757;;;;;;;;;;;;;;;;;5557:21;160:8757;;;;:::i;:::-;;;;5510:8;160:8757;;;;;;;;;;;;5557:21;:23;160:8757;;5557:23;:::i;:::-;160:8757;;;;;;;;;;;-1:-1:-1;;160:8757:29;;;;-1:-1:-1;;;;;160:8757:29;;;;;;;;;:::i;:::-;;;;;;7885:13;160:8757;;;;;;;:::i;:::-;;;;7885:13;160:8757;;;7947:37;160:8757;;;;;;-1:-1:-1;;;;;160:8757:29;;7934:50;160:8757;;;7934:50;160:8757;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;285:33;160:8757;;;;;;;;;;;;;;-1:-1:-1;;160:8757:29;;;;-1:-1:-1;;;;;160:8757:29;;;;;;;;:::i;:::-;;;;1420:61;160:8757;;;1420:61;160:8757;1420:61;;;:::i;:::-;;;160:8757;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;160:8757:29;;;;-1:-1:-1;;;;;160:8757:29;;;;;;;;;;;;1784:62;1792:21;;;1784:62;:::i;:::-;160:8757;;;1865:5;160:8757;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1954:80;;;160:8757;;;;;;1865:5;160:8757;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;-1:-1:-1;;;;;;160:8757:29;;;;;-1:-1:-1;;;;160:8757:29;;;;;;;-1:-1:-1;2052:17:29;;;;160:8757;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;160:8757:29;;;;8843:10;:19;;;160:8757;;;;;;;7323:13;160:8757;;;;;;;;7323:37;160:8757;;;;;;7323:45;160:8757;;;;7323:13;160:8757;;;;;;7416:39;160:8757;;;;-1:-1:-1;;;;;160:8757:29;;7403:52;160:8757;;;7403:52;160:8757;;;;;;;7482:35;;7511:4;7482:35;;;160:8757;7482:35;;160:8757;7482:35;;;;;;;;;;;;;160:8757;7585:11;;;7581:69;;160:8757;;;;;;;;;;;;;;;;7670:34;;;;160:8757;;;;;7670:34;;;;;;;;;;160:8757;;;7670:34;;;;;;;;;;;;;:::i;:::-;;;160:8757;;;;;;;;;;;7670:34;;160:8757;;;7670:34;;;;;;160:8757;;;;;;;;7581:69;-1:-1:-1;160:8757:29;;-1:-1:-1;;;7619:19:29;;;7482:35;;;;;;;;;;;;;;;;;:::i;:::-;;;160:8757;;;;;7482:35;;;;160:8757;;;;7482:35;;;;;;160:8757;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8248:55;160:8757;;;;;;:::i;:::-;;;;8248:8;160:8757;;;;;;;;;;;8248:55;160:8757;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:8757:29;;;;:::i;:::-;;;;;;2963:13;160:8757;;;;;;;;2963:37;160:8757;;3022:31;3014:72;3022:31;;;3014:72;:::i;:::-;160:8757;;2963:13;160:8757;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;2963:37;;160:8757;2963:37;;;160:8757;;;;;;;3223:58;160:8757;;;;;;;;3223:58;;;160:8757;;;;;;;;;;-1:-1:-1;160:8757:29;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;3223:58;160:8757;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:8757:29;;;;;;;;;;;;2963:13;160:8757;;;;;;;-1:-1:-1;160:8757:29;;-1:-1:-1;3223:58:29;;-1:-1:-1;160:8757:29;;-1:-1:-1;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2963:13;160:8757;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;4627:22;;;;160:8757;;;;;;;4718:8;160:8757;;;;;;;;;;;;;;;4718:81;160:8757;;;;;4718:8;160:8757;;;;;;;;;;4870:55;160:8757;;;4870:55;160:8757;4853:72;;160:8757;;;5011:9;160:8757;;;;;5011:9;160:8757;;;;;;;;;;4718:8;160:8757;;;;;-1:-1:-1;;160:8757:29;;;;;;;;;;;4870:55;160:8757;;;5054:59;160:8757;;;;;;;;5117:9;-1:-1:-1;160:8757:29;;;;;;;5318:58;160:8757;;4718:8;160:8757;;;;;;;;;;;4870:55;160:8757;;;5228:55;160:8757;;;;;;;;;5318:58;160:8757;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;:::i;:::-;3425:16;;;;160:8757;;3518:15;3507:26;;160:8757;;;3622:9;160:8757;;;;;;;;;3789:1;;;;3792:17;;;;;;;3947:327;160:8757;;;;4439:13;;;;:::i;:::-;160:8757;;;;;;;3811:3;3518:15;3839:26;;160:8757;;;;;;;;;;;;;;4241:17;160:8757;;;;;;;;;;;;;;;;;;;3811:3;160:8757;;;;;;;;;;;;;;;;;;3947:327;;;;;160:8757;;;;3947:327;;;160:8757;;;3947:327;;;160:8757;;;;3947:327;;;160:8757;;;3947:327;;;160:8757;;;;;4291:8;160:8757;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3811:3;;:::i;:::-;3780:10;;;160:8757;-1:-1:-1;;;;;160:8757:29;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;3947:327;160:8757;;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;-1:-1:-1;;160:8757:29;;;;-1:-1:-1;;;;;160:8757:29;;;;;;;;;;;;;;;;;;1579:54;160:8757;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:8757:29;;;;2444:75;2452:34;;;2444:75;:::i;:::-;160:8757;;;2538:13;160:8757;;;;;;;;;2538:37;160:8757;;;;;;;;;;;;;;;;;;;;;;;;2663:129;;;160:8757;;;;2663:129;;;160:8757;;;;;;;2538:13;160:8757;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2810:37;160:8757;;;;;-1:-1:-1;;;;160:8757:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2810:37;;;160:8757;;;;;;-1:-1:-1;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;;;;2810:37;160:8757;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:13;160:8757;;;;;;;;;;;2538:13;160:8757;;;;:::i;:::-;;;;;;;;;-1:-1:-1;160:8757:29;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;-1:-1:-1;;;;160:8757:29;;;;;;;;;;;;;;;;;;;;:::i;:::-;5892:6;160:8757;5842:16;;;5876:22;;;;;;160:8757;;6038:34;160:8757;;;;6076:3;160:8757;6110:32;160:8757;;;5936:8;160:8757;;;;;;;;;;;5936:59;160:8757;6038:34;;:::i;:::-;160:8757;6110:32;;:::i;:::-;160:8757;6164:39;160:8757;;;;;;6164:39;5873:1126;160:8757;;;;;5873:1126;160:8757;;;;;;;6307:8;160:8757;;;;;;;;;;6307:60;160:8757;;;6307:60;160:8757;;;;;;;;;;6718:33;160:8757;6481:37;160:8757;6410:32;160:8757;;6410:32;:::i;:::-;6481:16;160:8757;6481:37;:::i;:::-;6562:34;6600:3;6562:34;;;;:::i;6718:33::-;6771:24;;6793:2;6771:24;;6793:2;;;6820:61;160:8757;;;;;;;;;;;6820:61;5873:1126;;6768:220;6925:47;160:8757;;;;;;;;;;;6925:47;5873:1126;;160:8757;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;8474:52;160:8757;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;160:8757:29;;;;;-1:-1:-1;;;;;160:8757:29;;;;;;;;;2146:62;2154:21;;;2146:62;:::i;:::-;160:8757;;;2227:5;160:8757;;;;;;;;;;;;;2227:30;160:8757;;;2318:21;;;;160:8757;;;;;;;;;8766:21;160:8757;;;;;;:::i;:::-;;;;8712:8;160:8757;;;;;;;;;;;8766:21;160:8757;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;160:8757:29;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;160:8757:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;160:8757:29;;;;-1:-1:-1;160:8757:29;;-1:-1:-1;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;160:8757:29;;;;;;;;;-1:-1:-1;160:8757:29;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;160:8757:29;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;160:8757:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;160:8757:29;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1018400","executionCost":"113725","totalCost":"1132125"},"external":{"addAdmin(address)":"28310","addParticipantsToDraw(uint256,uint256)":"24938","addToken(address,string)":"infinite","allowedCrypto(address)":"infinite","baseInterestRate()":"2643","calculateDelayedPayment(uint256,uint256,uint256)":"infinite","createSchedule(uint256,uint256,uint256)":"infinite","dailyInterestRate()":"2577","removeAdmin(address)":"8623","removeToken(address)":"infinite","returnAvailableStablecoin(address)":"infinite","returnDrawDate(uint256,uint256)":"2508","returnDrawParticipants(uint256,uint256)":"2449","returnPaymentDeadline(uint256,uint256)":"2662","staff(address)":"2554","updateInterest(uint256,uint256)":"44786","updatePaymentDate(uint256,uint256,uint256)":"30820","withdrawProtocolFee(address)":"infinite"}},"methodIdentifiers":{"addAdmin(address)":"70480275","addParticipantsToDraw(uint256,uint256)":"ac066fa2","addToken(address,string)":"2c8da560","allowedCrypto(address)":"7c4c4b89","baseInterestRate()":"afd92762","calculateDelayedPayment(uint256,uint256,uint256)":"2b187755","createSchedule(uint256,uint256,uint256)":"5294bac8","dailyInterestRate()":"7fca631f","removeAdmin(address)":"1785f53c","removeToken(address)":"5fa7b584","returnAvailableStablecoin(address)":"8c83ddd3","returnDrawDate(uint256,uint256)":"29b00732","returnDrawParticipants(uint256,uint256)":"0d65a8e8","returnPaymentDeadline(uint256,uint256)":"64cf0e40","staff(address)":"4f83158a","updateInterest(uint256,uint256)":"b4f9a7e0","updatePaymentDate(uint256,uint256,uint256)":"559006c2","withdrawProtocolFee(address)":"668fb6dc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"AdminADD\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_installmentNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_dateOfPayment\",\"type\":\"uint256\"}],\"name\":\"InstallmentDateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentInterestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToPay\",\"type\":\"uint256\"}],\"name\":\"PaymentIsLate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToPay\",\"type\":\"uint256\"}],\"name\":\"TheInstallmentIsOneDayLate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_paymentDelay\",\"type\":\"uint256\"}],\"name\":\"TheInstallmenteIsOnTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentInterestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountToPay\",\"type\":\"uint256\"}],\"name\":\"TheTitleIsCloseToBeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_scheduleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_drawNumber\",\"type\":\"uint256\"}],\"name\":\"addParticipantsToDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"coinAddress\",\"type\":\"address\"}],\"name\":\"allowedCrypto\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"stablecoin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_paymentDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheduleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inicialInstallment\",\"type\":\"uint256\"}],\"name\":\"calculateDelayedPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numPayments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_closing\",\"type\":\"uint256\"}],\"name\":\"createSchedule\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_scheduleId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"}],\"name\":\"returnAvailableStablecoin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_scheduleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_installmentNumber\",\"type\":\"uint256\"}],\"name\":\"returnDrawDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_scheduleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_drawNumber\",\"type\":\"uint256\"}],\"name\":\"returnDrawParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_scheduleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_installmentNumber\",\"type\":\"uint256\"}],\"name\":\"returnPaymentDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adminWallet\",\"type\":\"address\"}],\"name\":\"staff\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAdmin\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dailyRate\",\"type\":\"uint256\"}],\"name\":\"updateInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_scheduleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_installmentNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dateOfPayment\",\"type\":\"uint256\"}],\"name\":\"updatePaymentDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HorizonStaff.sol\":\"HorizonStaff\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/HorizonStaff.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.9 <=0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\nerror NothingToWithdraw();\\r\\n\\r\\ncontract HorizonStaff {\\r\\n\\r\\n    /*Interest variables*/\\r\\n    uint scheduleId = 1;\\r\\n    uint public baseInterestRate = 10;\\r\\n    uint public dailyInterestRate = 3;\\r\\n    uint oneDay = 60; //86400\\r\\n    address owner;\\r\\n\\r\\n    /* Events */\\r\\n    event AdminADD(address indexed _wallet);\\r\\n    event AdminRemoved(address indexed _wallet);\\r\\n    event TokenAdded(IERC20 tokenAddress, string symbol);\\r\\n    event TokenRemoved(string symbol, address _stablecoin );\\r\\n    event InstallmentDateUpdated(uint _installmentNumber, uint _dateOfPayment);    \\r\\n    event TheInstallmenteIsOnTime(uint _paymentDelay);\\r\\n    event TheInstallmentIsOneDayLate(uint _amountToPay);\\r\\n    event TheTitleIsCloseToBeCanceled(uint currentInterestRate, uint amountToPay);\\r\\n    event PaymentIsLate(uint currentInterestRate, uint amountToPay);\\r\\n\\r\\n    /* Structs */\\r\\n    struct AdminInfo {\\r\\n        address wallet;\\r\\n        bool isAdmin;\\r\\n    }\\r\\n    struct TokenInfo {        \\r\\n        string tokenSymbol;\\r\\n        IERC20 stablecoin;\\r\\n        bool isStable;\\r\\n    }\\r\\n    struct Deadlines {\\r\\n        uint installmentNumber;\\r\\n        uint participants;\\r\\n        uint dateOfPayment;\\r\\n        uint dateOfDraw;\\r\\n        uint baseInterestRate;\\r\\n        uint dailyInterestRate;\\r\\n    }\\r\\n\\r\\n    /* Mappings */\\r\\n    mapping(IERC20 coinAddress => TokenInfo) public allowedCrypto;\\r\\n    mapping(uint _titleId => mapping(uint installmentId => Deadlines)) internal schedule;\\r\\n    mapping(address adminWallet => AdminInfo) public staff;\\r\\n\\r\\n    IERC20 stablecoin;\\r\\n\\r\\n    constructor (){\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function addAdmin(address _wallet) public {//OK\\r\\n        require(_wallet != address(0), \\\"Admin wallet can't be empty!\\\");\\r\\n        require(staff[_wallet].isAdmin == false,\\\"Admin already registered\\\");\\r\\n\\r\\n        staff[_wallet] = AdminInfo({\\r\\n            wallet: _wallet,\\r\\n            isAdmin: true\\r\\n        });\\r\\n\\r\\n        emit AdminADD(_wallet);\\r\\n    }\\r\\n\\r\\n    function removeAdmin(address _wallet) public {// OK\\r\\n        require(_wallet != address(0), \\\"Admin wallet can't be empty!\\\");\\r\\n        require(staff[_wallet].isAdmin == true);\\r\\n        \\r\\n        delete staff[_wallet];\\r\\n\\r\\n        emit AdminRemoved(_wallet);\\r\\n    }\\r\\n\\r\\n    function addToken(IERC20 _stablecoin, string memory _tokenSymbol) public { //OK\\r\\n        require(address(_stablecoin) != address(0), \\\"Token address cannot be zero\\\");\\r\\n        require(allowedCrypto[_stablecoin].stablecoin == IERC20(address(0)), \\\"Token already added\\\");\\r\\n\\r\\n        allowedCrypto[_stablecoin] = TokenInfo({\\r\\n            tokenSymbol: _tokenSymbol,\\r\\n            stablecoin: _stablecoin,\\r\\n            isStable: true\\r\\n        });\\r\\n\\r\\n        emit TokenAdded(_stablecoin, _tokenSymbol);\\r\\n    }\\r\\n\\r\\n    function removeToken(IERC20 _stablecoin) public { //OK\\r\\n        address stablecoinAddress = address(allowedCrypto[_stablecoin].stablecoin);\\r\\n\\r\\n        require(stablecoinAddress != address(0), \\\"Token address cannot be zero\\\");\\r\\n\\r\\n        TokenInfo storage tokenToRemove = allowedCrypto[_stablecoin];\\r\\n\\r\\n        delete allowedCrypto[_stablecoin];\\r\\n\\r\\n        emit TokenRemoved(tokenToRemove.tokenSymbol, stablecoinAddress);\\r\\n    }\\r\\n\\r\\n    function createSchedule(uint _titleId, uint _numPayments, uint _closing) public returns(uint _scheduleId){//OK\\r\\n        require(_numPayments > 0, \\\"Number of payments must be greater than 0!\\\");\\r\\n        require(_closing > block.timestamp, \\\"The closing of title selling must be in the future!\\\");\\r\\n\\r\\n        uint intervalDays = 5 minutes; // This will be dinamic. We can adjust this as needed.\\r\\n\\r\\n        uint nextDate = _closing + 300; // We can adjust this as needed.\\r\\n\\r\\n        for (uint i = 1; i <= _numPayments; i++) {\\r\\n            require(nextDate > block.timestamp, \\\"Payment date must be in the future!\\\");\\r\\n\\r\\n            Deadlines memory dates = Deadlines({\\r\\n                installmentNumber: i,\\r\\n                participants: 0,\\r\\n                dateOfPayment: nextDate,\\r\\n                dateOfDraw: nextDate + 300, // We can adjust this as needed.\\r\\n                baseInterestRate: baseInterestRate,\\r\\n                dailyInterestRate: dailyInterestRate\\r\\n            });\\r\\n\\r\\n            schedule[_titleId][i] = dates;\\r\\n\\r\\n            nextDate = nextDate + intervalDays;\\r\\n        }\\r\\n\\r\\n        uint titleSchedule = scheduleId;\\r\\n\\r\\n        scheduleId ++;\\r\\n\\r\\n        return titleSchedule;\\r\\n    }\\r\\n    \\r\\n    function updatePaymentDate(uint _scheduleId, uint _installmentNumber, uint _dateOfPayment) public { //OK\\r\\n        require(_installmentNumber > 0, \\\"Installment number must be greater than zero!\\\");\\r\\n        require(schedule[_scheduleId][_installmentNumber].installmentNumber == _installmentNumber, \\\"Installment number must exist!\\\");\\r\\n        require(_dateOfPayment > schedule[_scheduleId][_installmentNumber].dateOfPayment, \\\"You can only postpone the payment!\\\");\\r\\n\\r\\n        uint nextDate = _dateOfPayment * (1 minutes);\\r\\n\\r\\n        require(nextDate - (schedule[_scheduleId][_installmentNumber - 1].dateOfPayment) > 5 minutes, \\\"Must have a period of 30 days between installments!\\\"); // We can adjust this as needed.\\r\\n\\r\\n        schedule[_scheduleId][_installmentNumber].dateOfPayment = _dateOfPayment;\\r\\n\\r\\n        emit InstallmentDateUpdated(_installmentNumber, _dateOfPayment);\\r\\n    }\\r\\n    \\r\\n    function addParticipantsToDraw(uint _scheduleId, uint _drawNumber) public {\\r\\n        Deadlines storage deadline = schedule[_scheduleId][_drawNumber];\\r\\n\\r\\n        deadline.participants++;\\r\\n    }\\r\\n\\r\\n    /* INTERESTS */\\r\\n\\r\\n    function calculateDelayedPayment(uint _paymentDelay, uint _scheduleId, uint _inicialInstallment) external returns(uint) { //OK\\r\\n\\r\\n        uint inicialValue = _inicialInstallment;\\r\\n        uint currentInterestRate;\\r\\n        uint amountToPay;\\r\\n\\r\\n\\r\\n        if(_paymentDelay < oneDay){\\r\\n            currentInterestRate = schedule[_scheduleId][_inicialInstallment].baseInterestRate;\\r\\n\\r\\n            uint valueWithInterest = (inicialValue * currentInterestRate) / 100;\\r\\n\\r\\n            amountToPay = inicialValue + valueWithInterest;\\r\\n\\r\\n            emit TheInstallmentIsOneDayLate(amountToPay);\\r\\n        }else{\\r\\n            //Calcula os juros a partir dos dias atrasados\\r\\n            uint daily = schedule[_scheduleId][_inicialInstallment].dailyInterestRate;\\r\\n\\r\\n            uint totalDailyInterest = (_paymentDelay / oneDay) * daily;\\r\\n\\r\\n            currentInterestRate = baseInterestRate + totalDailyInterest;\\r\\n\\r\\n            uint valueWithInterests = (inicialValue * currentInterestRate) / 100;\\r\\n\\r\\n            //Calcula o valor a pagar a partir do valor inicial + juros(se houver)\\r\\n            amountToPay = inicialValue + valueWithInterests;\\r\\n\\r\\n            if(currentInterestRate > 40){\\r\\n                emit TheTitleIsCloseToBeCanceled(currentInterestRate, amountToPay);\\r\\n            }else{\\r\\n                emit PaymentIsLate(currentInterestRate, amountToPay);\\r\\n            }\\r\\n        }\\r\\n        return amountToPay;\\r\\n    }\\r\\n\\r\\n    function updateInterest(uint _baseRate, uint _dailyRate) public { // OK.\\r\\n        baseInterestRate = _baseRate;\\r\\n        dailyInterestRate = _dailyRate;\\r\\n    }\\r\\n\\r\\n    /* WITHDRAW */\\r\\n\\r\\n    function withdrawProtocolFee(IERC20 _tokenAddress) public onlyOwner {//OK\\r\\n        require(allowedCrypto[_tokenAddress].isStable == true, \\\"Token not allowed\\\");\\r\\n\\r\\n        stablecoin = allowedCrypto[_tokenAddress].stablecoin;\\r\\n\\r\\n        uint amount = stablecoin.balanceOf(address(this));\\r\\n\\r\\n        // Revert if there is nothing to withdraw\\r\\n        if (amount == 0){\\r\\n            revert NothingToWithdraw();\\r\\n        }\\r\\n        \\r\\n        stablecoin.transfer(owner, amount);\\r\\n    }\\r\\n\\r\\n    /* GET FUNCTIONS */\\r\\n\\r\\n    function returnAvailableStablecoin(IERC20 _stablecoin) external returns(string memory, IERC20, bool){//ok\\r\\n        string memory symbol = allowedCrypto[_stablecoin].tokenSymbol;\\r\\n        stablecoin = allowedCrypto[_stablecoin].stablecoin;\\r\\n        bool isStable = allowedCrypto[_stablecoin].isStable;\\r\\n\\r\\n        return (symbol, stablecoin, isStable);\\r\\n    }\\r\\n\\r\\n    function returnPaymentDeadline(uint _scheduleId, uint _installmentNumber) external view returns(uint){ //OK\\r\\n        uint paymentDate = schedule[_scheduleId][_installmentNumber].dateOfPayment;\\r\\n        return paymentDate;\\r\\n    }\\r\\n\\r\\n    function returnDrawDate(uint _scheduleId, uint _installmentNumber) external view returns(uint){ //OK\\r\\n        uint drawDate = schedule[_scheduleId][_installmentNumber].dateOfDraw;\\r\\n        \\r\\n        return drawDate;\\r\\n    }\\r\\n\\r\\n    function returnDrawParticipants(uint _scheduleId, uint _drawNumber) public view returns(uint) {\\r\\n        Deadlines storage deadline = schedule[_scheduleId][_drawNumber];\\r\\n\\r\\n        return deadline.participants;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner,\\\"The caller must be the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa0e64fa966e97177be51836cebe569d62ea53bdfe0b79a6d22a47ace450045c0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6974,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"scheduleId","offset":0,"slot":"0","type":"t_uint256"},{"astId":6977,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"baseInterestRate","offset":0,"slot":"1","type":"t_uint256"},{"astId":6980,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"dailyInterestRate","offset":0,"slot":"2","type":"t_uint256"},{"astId":6983,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"oneDay","offset":0,"slot":"3","type":"t_uint256"},{"astId":6985,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"owner","offset":0,"slot":"4","type":"t_address"},{"astId":7064,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"allowedCrypto","offset":0,"slot":"5","type":"t_mapping(t_contract(IERC20)827,t_struct(TokenInfo)7045_storage)"},{"astId":7071,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"schedule","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Deadlines)7058_storage))"},{"astId":7076,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"staff","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(AdminInfo)7037_storage)"},{"astId":7079,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"stablecoin","offset":0,"slot":"8","type":"t_contract(IERC20)827"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)827":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_struct(AdminInfo)7037_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct HorizonStaff.AdminInfo)","numberOfBytes":"32","value":"t_struct(AdminInfo)7037_storage"},"t_mapping(t_contract(IERC20)827,t_struct(TokenInfo)7045_storage)":{"encoding":"mapping","key":"t_contract(IERC20)827","label":"mapping(contract IERC20 => struct HorizonStaff.TokenInfo)","numberOfBytes":"32","value":"t_struct(TokenInfo)7045_storage"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Deadlines)7058_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct HorizonStaff.Deadlines))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Deadlines)7058_storage)"},"t_mapping(t_uint256,t_struct(Deadlines)7058_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct HorizonStaff.Deadlines)","numberOfBytes":"32","value":"t_struct(Deadlines)7058_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AdminInfo)7037_storage":{"encoding":"inplace","label":"struct HorizonStaff.AdminInfo","members":[{"astId":7034,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"wallet","offset":0,"slot":"0","type":"t_address"},{"astId":7036,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"isAdmin","offset":20,"slot":"0","type":"t_bool"}],"numberOfBytes":"32"},"t_struct(Deadlines)7058_storage":{"encoding":"inplace","label":"struct HorizonStaff.Deadlines","members":[{"astId":7047,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"installmentNumber","offset":0,"slot":"0","type":"t_uint256"},{"astId":7049,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"participants","offset":0,"slot":"1","type":"t_uint256"},{"astId":7051,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"dateOfPayment","offset":0,"slot":"2","type":"t_uint256"},{"astId":7053,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"dateOfDraw","offset":0,"slot":"3","type":"t_uint256"},{"astId":7055,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"baseInterestRate","offset":0,"slot":"4","type":"t_uint256"},{"astId":7057,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"dailyInterestRate","offset":0,"slot":"5","type":"t_uint256"}],"numberOfBytes":"192"},"t_struct(TokenInfo)7045_storage":{"encoding":"inplace","label":"struct HorizonStaff.TokenInfo","members":[{"astId":7039,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"tokenSymbol","offset":0,"slot":"0","type":"t_string_storage"},{"astId":7042,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"stablecoin","offset":0,"slot":"1","type":"t_contract(IERC20)827"},{"astId":7044,"contract":"contracts/HorizonStaff.sol:HorizonStaff","label":"isStable","offset":20,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/HorizonVRF.sol":{"HorizonVRF":{"abi":[{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"},{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subscriptionId","type":"uint64"},{"internalType":"uint32","name":"_callbackGasLimit","type":"uint32"},{"internalType":"uint16","name":"_requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"_numWords","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"randomValue","type":"uint256"}],"name":"RandomValueUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"randomWords","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"randomValue","type":"uint256"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"_titleId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_drawNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_totalPlayersAvailable","type":"uint256"}],"name":"RequestSent","type":"event"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"}],"name":"getRequestStatus","outputs":[{"internalType":"bool","name":"fulfilled","type":"bool"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"},{"internalType":"uint256","name":"_randomValue","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastRequestId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"requestIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_titleId","type":"uint256"},{"internalType":"uint256","name":"_drawNumber","type":"uint256"},{"internalType":"uint256","name":"_totalPlayersAvailable","type":"uint256"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"s_draw","outputs":[{"internalType":"uint256","name":"titleId","type":"uint256"},{"internalType":"uint256","name":"drawNumber","type":"uint256"},{"internalType":"uint256","name":"totalPlayersAvailable","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"s_requests","outputs":[{"internalType":"bool","name":"fulfilled","type":"bool"},{"internalType":"bool","name":"exists","type":"bool"},{"internalType":"uint256","name":"randomValue","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_uint32_fromMemory":{"entryPoint":295,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a03461010c576001600160401b0390601f610a1c38819003918201601f1916830191848311848410176101115780849260c09460405283398101031261010c578051916001600160a01b0383169081840361010c57602083015192604081015191821680920361010c5761007660608201610127565b9160808201519461ffff8616860361010c576dffff000000000000000000000000946100b160a06bffffffff00000000000000009501610127565b9760805260018060a01b031960065416176006556008556009549563ffffffff60701b9060701b169560018060901b031916179160401b16179160601b1617176009556040516108e390816101398239608051816105b80152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b519063ffffffff8216820361010c5756fe60c060408181526004918236101561001657600080fd5b600092833560e01c9182631fe543e31461053c5750816332601f64146102605781638796ba8c146102255781638da5cb5b146101fc578163a168fa89146101b7578163cbc1c02114610179578163d8a4676f1461009e575063fc2a88c31461007d57600080fd5b3461009a578160031936011261009a576020906005549051908152f35b5080fd5b83833461009a576020928360031936011261017557358083528284526100cc60ff8385205460081c1661086d565b82528183528082208151906100e082610798565b60ff81548181161515845260081c16151585830152600193848201845191829687938984549182815201938352898320925b8a82821061015f57868a8a61015760028c61012f868d03876107ca565b8585850152015491826060820152511515936060845196879687528601526060850190610839565b918301520390f35b845486528a965090940193928201928201610112565b8280fd5b905034610175576020366003190112610175576060928291358152600160205220805491600260018301549201549181519384526020840152820152f35b905034610175576020366003190112610175576060928291358152806020522090600282549201549060ff8151938181161515855260081c1615156020840152820152f35b50503461009a578160031936011261009a5760035490516001600160a01b039091168152602090f35b82843461025d57602036600319011261025d578235925483101561025d575061024f6020926107ec565b91905490519160031b1c8152f35b80fd5b9050823461025d57606036600319011261025d5760018060a01b036006541691600854600954908551906305d3b1d360e41b82528382015267ffffffffffffffff906024958284168783015261ffff8460601c16604483015263ffffffff848180968b1c16606485015260701c16608483015260206080528160a48188608051945af18015610532578560a0526104fb575b50855192608051840184811083821117610485578752848452865161031681610798565b858152608051810190600195868352898201908152606082019288845260a051895288608051528a8920925115159060ff61ff0085549251151560081b1692169061ffff191617178255519182518581116104e957600160401b938482116104d7578884019081548383558084106104ab575b5060805101908a526080518a20898b5b848110610497575050505050600290519101558154908110156104855780856103c4920183556107ec565b81549060031b9060a051821b91600019901b191617905560a0516005558651916060830190838210908211176104855791600260a09694927ffe311bf598a14a250b990be603a26cfc8f34a235e618e79c51aacc47c0d74ac69896948a52359586835260805183019035948582528a8401918b604435988985528b5181528360805152209451855551908401555191015560095460701c1692865193855185526080518501528684015260608301526080820152a15160a051815260805190f35b634e487b7160e01b8652604182528686fd5b835193608051019381840155018a90610399565b828c526080518c20908b8583018e5b83850182106104cc5750505050610389565b8155018c908e6104ba565b634e487b7160e01b8a52604186528a8afd5b634e487b7160e01b8952604185528989fd5b6080513d811161052b575b61051081836107ca565b816080519181010312610527575160a052866102f2565b8480fd5b503d610506565b87513d87823e3d90fd5b8482853461017557806003193601126101755781359060249283359367ffffffffffffffff918286116107945736602387011215610794578581013595838711610782578660051b906020976105948984018c6107ca565b8a52878a018481938301019136831161077e57858a9101915b83831061076e5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691505033819003610752575085885287875261060460ff868a205460081c1661086d565b85885287875284882093600180958160ff19825416178155018a5191821161074057600160401b8211610740578054828255808310610719575b5082908a52888a20868b5b8481106107075750505050508851156106f55751858852838752600285892001549081156106e357069283018093116106d25750506106c88596847f147eb1ff0c82f87f2b03e2c43f5a36488ff63ec6b730195fde4605f612f8db519752878652826002858a2001556060845196879687528601526060850190610839565b918301520390a180f35b634e487b7160e01b87526011905285fd5b634e487b7160e01b8952601283528389fd5b50634e487b7160e01b87526032905285fd5b8b845194019381840155018790610649565b818b5286838b8d2092830192015b82811061073557505061063e565b8c8155018790610727565b634e487b7160e01b8a5260418452848afd5b905060449285519263073e64fd60e21b84523390840152820152fd5b82358152918101918a91016105ad565b8a80fd5b50634e487b7160e01b87526041905285fd5b8680fd5b6080810190811067ffffffffffffffff8211176107b457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176107b457604052565b6004548110156108235760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b828110610859575050505090565b83518552938101939281019260010161084b565b1561087457565b60405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606490fdfea26469706673582212205ba1b422964075ddc3b123e6400a9a5375994823fa5eaa4567770dcb58a0387f64736f6c63430008140033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0x10C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH2 0xA1C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 DUP5 DUP4 GT DUP5 DUP5 LT OR PUSH2 0x111 JUMPI DUP1 DUP5 SWAP3 PUSH1 0xC0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x10C JUMPI DUP1 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 DUP5 SUB PUSH2 0x10C JUMPI PUSH1 0x20 DUP4 ADD MLOAD SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x10C JUMPI PUSH2 0x76 PUSH1 0x60 DUP3 ADD PUSH2 0x127 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP3 ADD MLOAD SWAP5 PUSH2 0xFFFF DUP7 AND DUP7 SUB PUSH2 0x10C JUMPI PUSH14 0xFFFF000000000000000000000000 SWAP5 PUSH2 0xB1 PUSH1 0xA0 PUSH12 0xFFFFFFFF0000000000000000 SWAP6 ADD PUSH2 0x127 JUMP JUMPDEST SWAP8 PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD SWAP6 PUSH4 0xFFFFFFFF PUSH1 0x70 SHL SWAP1 PUSH1 0x70 SHL AND SWAP6 PUSH1 0x1 DUP1 PUSH1 0x90 SHL SUB NOT AND OR SWAP2 PUSH1 0x40 SHL AND OR SWAP2 PUSH1 0x60 SHL AND OR OR PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH2 0x8E3 SWAP1 DUP2 PUSH2 0x139 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x5B8 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x10C JUMPI JUMP INVALID PUSH1 0xC0 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FE543E3 EQ PUSH2 0x53C JUMPI POP DUP2 PUSH4 0x32601F64 EQ PUSH2 0x260 JUMPI DUP2 PUSH4 0x8796BA8C EQ PUSH2 0x225 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FC JUMPI DUP2 PUSH4 0xA168FA89 EQ PUSH2 0x1B7 JUMPI DUP2 PUSH4 0xCBC1C021 EQ PUSH2 0x179 JUMPI DUP2 PUSH4 0xD8A4676F EQ PUSH2 0x9E JUMPI POP PUSH4 0xFC2A88C3 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x9A JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x9A JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x175 JUMPI CALLDATALOAD DUP1 DUP4 MSTORE DUP3 DUP5 MSTORE PUSH2 0xCC PUSH1 0xFF DUP4 DUP6 KECCAK256 SLOAD PUSH1 0x8 SHR AND PUSH2 0x86D JUMP JUMPDEST DUP3 MSTORE DUP2 DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x798 JUMP JUMPDEST PUSH1 0xFF DUP2 SLOAD DUP2 DUP2 AND ISZERO ISZERO DUP5 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO DUP6 DUP4 ADD MSTORE PUSH1 0x1 SWAP4 DUP5 DUP3 ADD DUP5 MLOAD SWAP2 DUP3 SWAP7 DUP8 SWAP4 DUP10 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 DUP4 MSTORE DUP10 DUP4 KECCAK256 SWAP3 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x15F JUMPI DUP7 DUP11 DUP11 PUSH2 0x157 PUSH1 0x2 DUP13 PUSH2 0x12F DUP7 DUP14 SUB DUP8 PUSH2 0x7CA JUMP JUMPDEST DUP6 DUP6 DUP6 ADD MSTORE ADD SLOAD SWAP2 DUP3 PUSH1 0x60 DUP3 ADD MSTORE MLOAD ISZERO ISZERO SWAP4 PUSH1 0x60 DUP5 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x839 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP5 SLOAD DUP7 MSTORE DUP11 SWAP7 POP SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 DUP3 ADD PUSH2 0x112 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x175 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x175 JUMPI PUSH1 0x60 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP2 PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP2 DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x175 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x175 JUMPI PUSH1 0x60 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x2 DUP3 SLOAD SWAP3 ADD SLOAD SWAP1 PUSH1 0xFF DUP2 MLOAD SWAP4 DUP2 DUP2 AND ISZERO ISZERO DUP6 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x9A JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI DUP3 CALLDATALOAD SWAP3 SLOAD DUP4 LT ISZERO PUSH2 0x25D JUMPI POP PUSH2 0x24F PUSH1 0x20 SWAP3 PUSH2 0x7EC JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND SWAP2 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP1 DUP6 MLOAD SWAP1 PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP3 MSTORE DUP4 DUP3 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 SWAP6 DUP3 DUP5 AND DUP8 DUP4 ADD MSTORE PUSH2 0xFFFF DUP5 PUSH1 0x60 SHR AND PUSH1 0x44 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP5 DUP2 DUP1 SWAP7 DUP12 SHR AND PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x70 SHR AND PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x20 PUSH1 0x80 MSTORE DUP2 PUSH1 0xA4 DUP2 DUP9 PUSH1 0x80 MLOAD SWAP5 GAS CALL DUP1 ISZERO PUSH2 0x532 JUMPI DUP6 PUSH1 0xA0 MSTORE PUSH2 0x4FB JUMPI JUMPDEST POP DUP6 MLOAD SWAP3 PUSH1 0x80 MLOAD DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x485 JUMPI DUP8 MSTORE DUP5 DUP5 MSTORE DUP7 MLOAD PUSH2 0x316 DUP2 PUSH2 0x798 JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x80 MLOAD DUP2 ADD SWAP1 PUSH1 0x1 SWAP6 DUP7 DUP4 MSTORE DUP10 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 DUP9 DUP5 MSTORE PUSH1 0xA0 MLOAD DUP10 MSTORE DUP9 PUSH1 0x80 MLOAD MSTORE DUP11 DUP10 KECCAK256 SWAP3 MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH2 0xFF00 DUP6 SLOAD SWAP3 MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR DUP3 SSTORE MLOAD SWAP2 DUP3 MLOAD DUP6 DUP2 GT PUSH2 0x4E9 JUMPI PUSH1 0x1 PUSH1 0x40 SHL SWAP4 DUP5 DUP3 GT PUSH2 0x4D7 JUMPI DUP9 DUP5 ADD SWAP1 DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x4AB JUMPI JUMPDEST POP PUSH1 0x80 MLOAD ADD SWAP1 DUP11 MSTORE PUSH1 0x80 MLOAD DUP11 KECCAK256 DUP10 DUP12 JUMPDEST DUP5 DUP2 LT PUSH2 0x497 JUMPI POP POP POP POP POP PUSH1 0x2 SWAP1 MLOAD SWAP2 ADD SSTORE DUP2 SLOAD SWAP1 DUP2 LT ISZERO PUSH2 0x485 JUMPI DUP1 DUP6 PUSH2 0x3C4 SWAP3 ADD DUP4 SSTORE PUSH2 0x7EC JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH1 0xA0 MLOAD DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0xA0 MLOAD PUSH1 0x5 SSTORE DUP7 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD SWAP1 DUP4 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x485 JUMPI SWAP2 PUSH1 0x2 PUSH1 0xA0 SWAP7 SWAP5 SWAP3 PUSH32 0xFE311BF598A14A250B990BE603A26CFC8F34A235E618E79C51AACC47C0D74AC6 SWAP9 SWAP7 SWAP5 DUP11 MSTORE CALLDATALOAD SWAP6 DUP7 DUP4 MSTORE PUSH1 0x80 MLOAD DUP4 ADD SWAP1 CALLDATALOAD SWAP5 DUP6 DUP3 MSTORE DUP11 DUP5 ADD SWAP2 DUP12 PUSH1 0x44 CALLDATALOAD SWAP9 DUP10 DUP6 MSTORE DUP12 MLOAD DUP2 MSTORE DUP4 PUSH1 0x80 MLOAD MSTORE KECCAK256 SWAP5 MLOAD DUP6 SSTORE MLOAD SWAP1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x9 SLOAD PUSH1 0x70 SHR AND SWAP3 DUP7 MLOAD SWAP4 DUP6 MLOAD DUP6 MSTORE PUSH1 0x80 MLOAD DUP6 ADD MSTORE DUP7 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 MLOAD PUSH1 0xA0 MLOAD DUP2 MSTORE PUSH1 0x80 MLOAD SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP3 MSTORE DUP7 DUP7 REVERT JUMPDEST DUP4 MLOAD SWAP4 PUSH1 0x80 MLOAD ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD DUP11 SWAP1 PUSH2 0x399 JUMP JUMPDEST DUP3 DUP13 MSTORE PUSH1 0x80 MLOAD DUP13 KECCAK256 SWAP1 DUP12 DUP6 DUP4 ADD DUP15 JUMPDEST DUP4 DUP6 ADD DUP3 LT PUSH2 0x4CC JUMPI POP POP POP POP PUSH2 0x389 JUMP JUMPDEST DUP2 SSTORE ADD DUP13 SWAP1 DUP15 PUSH2 0x4BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 DUP7 MSTORE DUP11 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP6 MSTORE DUP10 DUP10 REVERT JUMPDEST PUSH1 0x80 MLOAD RETURNDATASIZE DUP2 GT PUSH2 0x52B JUMPI JUMPDEST PUSH2 0x510 DUP2 DUP4 PUSH2 0x7CA JUMP JUMPDEST DUP2 PUSH1 0x80 MLOAD SWAP2 DUP2 ADD SUB SLT PUSH2 0x527 JUMPI MLOAD PUSH1 0xA0 MSTORE DUP7 PUSH2 0x2F2 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x506 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x175 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x175 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP7 GT PUSH2 0x794 JUMPI CALLDATASIZE PUSH1 0x23 DUP8 ADD SLT ISZERO PUSH2 0x794 JUMPI DUP6 DUP2 ADD CALLDATALOAD SWAP6 DUP4 DUP8 GT PUSH2 0x782 JUMPI DUP7 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 SWAP8 PUSH2 0x594 DUP10 DUP5 ADD DUP13 PUSH2 0x7CA JUMP JUMPDEST DUP11 MSTORE DUP8 DUP11 ADD DUP5 DUP2 SWAP4 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x77E JUMPI DUP6 DUP11 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x76E JUMPI POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP POP CALLER DUP2 SWAP1 SUB PUSH2 0x752 JUMPI POP DUP6 DUP9 MSTORE DUP8 DUP8 MSTORE PUSH2 0x604 PUSH1 0xFF DUP7 DUP11 KECCAK256 SLOAD PUSH1 0x8 SHR AND PUSH2 0x86D JUMP JUMPDEST DUP6 DUP9 MSTORE DUP8 DUP8 MSTORE DUP5 DUP9 KECCAK256 SWAP4 PUSH1 0x1 DUP1 SWAP6 DUP2 PUSH1 0xFF NOT DUP3 SLOAD AND OR DUP2 SSTORE ADD DUP11 MLOAD SWAP2 DUP3 GT PUSH2 0x740 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x740 JUMPI DUP1 SLOAD DUP3 DUP3 SSTORE DUP1 DUP4 LT PUSH2 0x719 JUMPI JUMPDEST POP DUP3 SWAP1 DUP11 MSTORE DUP9 DUP11 KECCAK256 DUP7 DUP12 JUMPDEST DUP5 DUP2 LT PUSH2 0x707 JUMPI POP POP POP POP POP DUP9 MLOAD ISZERO PUSH2 0x6F5 JUMPI MLOAD DUP6 DUP9 MSTORE DUP4 DUP8 MSTORE PUSH1 0x2 DUP6 DUP10 KECCAK256 ADD SLOAD SWAP1 DUP2 ISZERO PUSH2 0x6E3 JUMPI MOD SWAP3 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x6D2 JUMPI POP POP PUSH2 0x6C8 DUP6 SWAP7 DUP5 PUSH32 0x147EB1FF0C82F87F2B03E2C43F5A36488FF63EC6B730195FDE4605F612F8DB51 SWAP8 MSTORE DUP8 DUP7 MSTORE DUP3 PUSH1 0x2 DUP6 DUP11 KECCAK256 ADD SSTORE PUSH1 0x60 DUP5 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x839 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 SWAP1 MSTORE DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x12 DUP4 MSTORE DUP4 DUP10 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x32 SWAP1 MSTORE DUP6 REVERT JUMPDEST DUP12 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD DUP8 SWAP1 PUSH2 0x649 JUMP JUMPDEST DUP2 DUP12 MSTORE DUP7 DUP4 DUP12 DUP14 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x735 JUMPI POP POP PUSH2 0x63E JUMP JUMPDEST DUP13 DUP2 SSTORE ADD DUP8 SWAP1 PUSH2 0x727 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 DUP5 MSTORE DUP5 DUP11 REVERT JUMPDEST SWAP1 POP PUSH1 0x44 SWAP3 DUP6 MLOAD SWAP3 PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP5 MSTORE CALLER SWAP1 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP11 SWAP2 ADD PUSH2 0x5AD JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE DUP6 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x859 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x84B JUMP JUMPDEST ISZERO PUSH2 0x874 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1C995C5D595CDD081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST LOG1 0xB4 0x22 SWAP7 BLOCKHASH PUSH22 0xDDC3B123E6400A9A5375994823FA5EAA4567770DCB58 LOG0 CODESIZE PUSH32 0x64736F6C63430008140033000000000000000000000000000000000000000000 ","sourceMap":"221:3537:30:-:0;;;;-1:-1:-1;;;;;221:3537:30;;;;;;;;;;-1:-1:-1;;221:3537:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:3537:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5599:32:8;221:3537:30;5599:32:8;221:3537:30;;;;;;1761:56;221:3537;;;1761:56;221:3537;1828:18;221:3537;1857:34;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:34;221:3537;;;;;;;;;;;;;;;;;-1:-1:-1;221:3537:30;;;;;;-1:-1:-1;221:3537:30;;;;;-1:-1:-1;221:3537:30;;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_encode_array_uint256_dyn":{"entryPoint":2105,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1994,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_8909":{"entryPoint":1944,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":2157,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":2028,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"533":[{"length":32,"start":1464}]},"linkReferences":{},"object":"60c060408181526004918236101561001657600080fd5b600092833560e01c9182631fe543e31461053c5750816332601f64146102605781638796ba8c146102255781638da5cb5b146101fc578163a168fa89146101b7578163cbc1c02114610179578163d8a4676f1461009e575063fc2a88c31461007d57600080fd5b3461009a578160031936011261009a576020906005549051908152f35b5080fd5b83833461009a576020928360031936011261017557358083528284526100cc60ff8385205460081c1661086d565b82528183528082208151906100e082610798565b60ff81548181161515845260081c16151585830152600193848201845191829687938984549182815201938352898320925b8a82821061015f57868a8a61015760028c61012f868d03876107ca565b8585850152015491826060820152511515936060845196879687528601526060850190610839565b918301520390f35b845486528a965090940193928201928201610112565b8280fd5b905034610175576020366003190112610175576060928291358152600160205220805491600260018301549201549181519384526020840152820152f35b905034610175576020366003190112610175576060928291358152806020522090600282549201549060ff8151938181161515855260081c1615156020840152820152f35b50503461009a578160031936011261009a5760035490516001600160a01b039091168152602090f35b82843461025d57602036600319011261025d578235925483101561025d575061024f6020926107ec565b91905490519160031b1c8152f35b80fd5b9050823461025d57606036600319011261025d5760018060a01b036006541691600854600954908551906305d3b1d360e41b82528382015267ffffffffffffffff906024958284168783015261ffff8460601c16604483015263ffffffff848180968b1c16606485015260701c16608483015260206080528160a48188608051945af18015610532578560a0526104fb575b50855192608051840184811083821117610485578752848452865161031681610798565b858152608051810190600195868352898201908152606082019288845260a051895288608051528a8920925115159060ff61ff0085549251151560081b1692169061ffff191617178255519182518581116104e957600160401b938482116104d7578884019081548383558084106104ab575b5060805101908a526080518a20898b5b848110610497575050505050600290519101558154908110156104855780856103c4920183556107ec565b81549060031b9060a051821b91600019901b191617905560a0516005558651916060830190838210908211176104855791600260a09694927ffe311bf598a14a250b990be603a26cfc8f34a235e618e79c51aacc47c0d74ac69896948a52359586835260805183019035948582528a8401918b604435988985528b5181528360805152209451855551908401555191015560095460701c1692865193855185526080518501528684015260608301526080820152a15160a051815260805190f35b634e487b7160e01b8652604182528686fd5b835193608051019381840155018a90610399565b828c526080518c20908b8583018e5b83850182106104cc5750505050610389565b8155018c908e6104ba565b634e487b7160e01b8a52604186528a8afd5b634e487b7160e01b8952604185528989fd5b6080513d811161052b575b61051081836107ca565b816080519181010312610527575160a052866102f2565b8480fd5b503d610506565b87513d87823e3d90fd5b8482853461017557806003193601126101755781359060249283359367ffffffffffffffff918286116107945736602387011215610794578581013595838711610782578660051b906020976105948984018c6107ca565b8a52878a018481938301019136831161077e57858a9101915b83831061076e5750507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691505033819003610752575085885287875261060460ff868a205460081c1661086d565b85885287875284882093600180958160ff19825416178155018a5191821161074057600160401b8211610740578054828255808310610719575b5082908a52888a20868b5b8481106107075750505050508851156106f55751858852838752600285892001549081156106e357069283018093116106d25750506106c88596847f147eb1ff0c82f87f2b03e2c43f5a36488ff63ec6b730195fde4605f612f8db519752878652826002858a2001556060845196879687528601526060850190610839565b918301520390a180f35b634e487b7160e01b87526011905285fd5b634e487b7160e01b8952601283528389fd5b50634e487b7160e01b87526032905285fd5b8b845194019381840155018790610649565b818b5286838b8d2092830192015b82811061073557505061063e565b8c8155018790610727565b634e487b7160e01b8a5260418452848afd5b905060449285519263073e64fd60e21b84523390840152820152fd5b82358152918101918a91016105ad565b8a80fd5b50634e487b7160e01b87526041905285fd5b8680fd5b6080810190811067ffffffffffffffff8211176107b457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176107b457604052565b6004548110156108235760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b828110610859575050505090565b83518552938101939281019260010161084b565b1561087457565b60405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606490fdfea26469706673582212205ba1b422964075ddc3b123e6400a9a5375994823fa5eaa4567770dcb58a0387f64736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FE543E3 EQ PUSH2 0x53C JUMPI POP DUP2 PUSH4 0x32601F64 EQ PUSH2 0x260 JUMPI DUP2 PUSH4 0x8796BA8C EQ PUSH2 0x225 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FC JUMPI DUP2 PUSH4 0xA168FA89 EQ PUSH2 0x1B7 JUMPI DUP2 PUSH4 0xCBC1C021 EQ PUSH2 0x179 JUMPI DUP2 PUSH4 0xD8A4676F EQ PUSH2 0x9E JUMPI POP PUSH4 0xFC2A88C3 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x9A JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x9A JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x175 JUMPI CALLDATALOAD DUP1 DUP4 MSTORE DUP3 DUP5 MSTORE PUSH2 0xCC PUSH1 0xFF DUP4 DUP6 KECCAK256 SLOAD PUSH1 0x8 SHR AND PUSH2 0x86D JUMP JUMPDEST DUP3 MSTORE DUP2 DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x798 JUMP JUMPDEST PUSH1 0xFF DUP2 SLOAD DUP2 DUP2 AND ISZERO ISZERO DUP5 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO DUP6 DUP4 ADD MSTORE PUSH1 0x1 SWAP4 DUP5 DUP3 ADD DUP5 MLOAD SWAP2 DUP3 SWAP7 DUP8 SWAP4 DUP10 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 DUP4 MSTORE DUP10 DUP4 KECCAK256 SWAP3 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x15F JUMPI DUP7 DUP11 DUP11 PUSH2 0x157 PUSH1 0x2 DUP13 PUSH2 0x12F DUP7 DUP14 SUB DUP8 PUSH2 0x7CA JUMP JUMPDEST DUP6 DUP6 DUP6 ADD MSTORE ADD SLOAD SWAP2 DUP3 PUSH1 0x60 DUP3 ADD MSTORE MLOAD ISZERO ISZERO SWAP4 PUSH1 0x60 DUP5 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x839 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP5 SLOAD DUP7 MSTORE DUP11 SWAP7 POP SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP3 ADD SWAP3 DUP3 ADD PUSH2 0x112 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x175 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x175 JUMPI PUSH1 0x60 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP2 PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP2 DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x175 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x175 JUMPI PUSH1 0x60 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x2 DUP3 SLOAD SWAP3 ADD SLOAD SWAP1 PUSH1 0xFF DUP2 MLOAD SWAP4 DUP2 DUP2 AND ISZERO ISZERO DUP6 MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x9A JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI DUP3 CALLDATALOAD SWAP3 SLOAD DUP4 LT ISZERO PUSH2 0x25D JUMPI POP PUSH2 0x24F PUSH1 0x20 SWAP3 PUSH2 0x7EC JUMP JUMPDEST SWAP2 SWAP1 SLOAD SWAP1 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x25D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x25D JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 SLOAD AND SWAP2 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP1 DUP6 MLOAD SWAP1 PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP3 MSTORE DUP4 DUP3 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 SWAP6 DUP3 DUP5 AND DUP8 DUP4 ADD MSTORE PUSH2 0xFFFF DUP5 PUSH1 0x60 SHR AND PUSH1 0x44 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP5 DUP2 DUP1 SWAP7 DUP12 SHR AND PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x70 SHR AND PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x20 PUSH1 0x80 MSTORE DUP2 PUSH1 0xA4 DUP2 DUP9 PUSH1 0x80 MLOAD SWAP5 GAS CALL DUP1 ISZERO PUSH2 0x532 JUMPI DUP6 PUSH1 0xA0 MSTORE PUSH2 0x4FB JUMPI JUMPDEST POP DUP6 MLOAD SWAP3 PUSH1 0x80 MLOAD DUP5 ADD DUP5 DUP2 LT DUP4 DUP3 GT OR PUSH2 0x485 JUMPI DUP8 MSTORE DUP5 DUP5 MSTORE DUP7 MLOAD PUSH2 0x316 DUP2 PUSH2 0x798 JUMP JUMPDEST DUP6 DUP2 MSTORE PUSH1 0x80 MLOAD DUP2 ADD SWAP1 PUSH1 0x1 SWAP6 DUP7 DUP4 MSTORE DUP10 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 DUP9 DUP5 MSTORE PUSH1 0xA0 MLOAD DUP10 MSTORE DUP9 PUSH1 0x80 MLOAD MSTORE DUP11 DUP10 KECCAK256 SWAP3 MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH2 0xFF00 DUP6 SLOAD SWAP3 MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR DUP3 SSTORE MLOAD SWAP2 DUP3 MLOAD DUP6 DUP2 GT PUSH2 0x4E9 JUMPI PUSH1 0x1 PUSH1 0x40 SHL SWAP4 DUP5 DUP3 GT PUSH2 0x4D7 JUMPI DUP9 DUP5 ADD SWAP1 DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x4AB JUMPI JUMPDEST POP PUSH1 0x80 MLOAD ADD SWAP1 DUP11 MSTORE PUSH1 0x80 MLOAD DUP11 KECCAK256 DUP10 DUP12 JUMPDEST DUP5 DUP2 LT PUSH2 0x497 JUMPI POP POP POP POP POP PUSH1 0x2 SWAP1 MLOAD SWAP2 ADD SSTORE DUP2 SLOAD SWAP1 DUP2 LT ISZERO PUSH2 0x485 JUMPI DUP1 DUP6 PUSH2 0x3C4 SWAP3 ADD DUP4 SSTORE PUSH2 0x7EC JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH1 0xA0 MLOAD DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0xA0 MLOAD PUSH1 0x5 SSTORE DUP7 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD SWAP1 DUP4 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x485 JUMPI SWAP2 PUSH1 0x2 PUSH1 0xA0 SWAP7 SWAP5 SWAP3 PUSH32 0xFE311BF598A14A250B990BE603A26CFC8F34A235E618E79C51AACC47C0D74AC6 SWAP9 SWAP7 SWAP5 DUP11 MSTORE CALLDATALOAD SWAP6 DUP7 DUP4 MSTORE PUSH1 0x80 MLOAD DUP4 ADD SWAP1 CALLDATALOAD SWAP5 DUP6 DUP3 MSTORE DUP11 DUP5 ADD SWAP2 DUP12 PUSH1 0x44 CALLDATALOAD SWAP9 DUP10 DUP6 MSTORE DUP12 MLOAD DUP2 MSTORE DUP4 PUSH1 0x80 MLOAD MSTORE KECCAK256 SWAP5 MLOAD DUP6 SSTORE MLOAD SWAP1 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x9 SLOAD PUSH1 0x70 SHR AND SWAP3 DUP7 MLOAD SWAP4 DUP6 MLOAD DUP6 MSTORE PUSH1 0x80 MLOAD DUP6 ADD MSTORE DUP7 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 MLOAD PUSH1 0xA0 MLOAD DUP2 MSTORE PUSH1 0x80 MLOAD SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP3 MSTORE DUP7 DUP7 REVERT JUMPDEST DUP4 MLOAD SWAP4 PUSH1 0x80 MLOAD ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD DUP11 SWAP1 PUSH2 0x399 JUMP JUMPDEST DUP3 DUP13 MSTORE PUSH1 0x80 MLOAD DUP13 KECCAK256 SWAP1 DUP12 DUP6 DUP4 ADD DUP15 JUMPDEST DUP4 DUP6 ADD DUP3 LT PUSH2 0x4CC JUMPI POP POP POP POP PUSH2 0x389 JUMP JUMPDEST DUP2 SSTORE ADD DUP13 SWAP1 DUP15 PUSH2 0x4BA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 DUP7 MSTORE DUP11 DUP11 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP6 MSTORE DUP10 DUP10 REVERT JUMPDEST PUSH1 0x80 MLOAD RETURNDATASIZE DUP2 GT PUSH2 0x52B JUMPI JUMPDEST PUSH2 0x510 DUP2 DUP4 PUSH2 0x7CA JUMP JUMPDEST DUP2 PUSH1 0x80 MLOAD SWAP2 DUP2 ADD SUB SLT PUSH2 0x527 JUMPI MLOAD PUSH1 0xA0 MSTORE DUP7 PUSH2 0x2F2 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x506 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x175 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x175 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP7 GT PUSH2 0x794 JUMPI CALLDATASIZE PUSH1 0x23 DUP8 ADD SLT ISZERO PUSH2 0x794 JUMPI DUP6 DUP2 ADD CALLDATALOAD SWAP6 DUP4 DUP8 GT PUSH2 0x782 JUMPI DUP7 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 SWAP8 PUSH2 0x594 DUP10 DUP5 ADD DUP13 PUSH2 0x7CA JUMP JUMPDEST DUP11 MSTORE DUP8 DUP11 ADD DUP5 DUP2 SWAP4 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x77E JUMPI DUP6 DUP11 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x76E JUMPI POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP POP CALLER DUP2 SWAP1 SUB PUSH2 0x752 JUMPI POP DUP6 DUP9 MSTORE DUP8 DUP8 MSTORE PUSH2 0x604 PUSH1 0xFF DUP7 DUP11 KECCAK256 SLOAD PUSH1 0x8 SHR AND PUSH2 0x86D JUMP JUMPDEST DUP6 DUP9 MSTORE DUP8 DUP8 MSTORE DUP5 DUP9 KECCAK256 SWAP4 PUSH1 0x1 DUP1 SWAP6 DUP2 PUSH1 0xFF NOT DUP3 SLOAD AND OR DUP2 SSTORE ADD DUP11 MLOAD SWAP2 DUP3 GT PUSH2 0x740 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x740 JUMPI DUP1 SLOAD DUP3 DUP3 SSTORE DUP1 DUP4 LT PUSH2 0x719 JUMPI JUMPDEST POP DUP3 SWAP1 DUP11 MSTORE DUP9 DUP11 KECCAK256 DUP7 DUP12 JUMPDEST DUP5 DUP2 LT PUSH2 0x707 JUMPI POP POP POP POP POP DUP9 MLOAD ISZERO PUSH2 0x6F5 JUMPI MLOAD DUP6 DUP9 MSTORE DUP4 DUP8 MSTORE PUSH1 0x2 DUP6 DUP10 KECCAK256 ADD SLOAD SWAP1 DUP2 ISZERO PUSH2 0x6E3 JUMPI MOD SWAP3 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x6D2 JUMPI POP POP PUSH2 0x6C8 DUP6 SWAP7 DUP5 PUSH32 0x147EB1FF0C82F87F2B03E2C43F5A36488FF63EC6B730195FDE4605F612F8DB51 SWAP8 MSTORE DUP8 DUP7 MSTORE DUP3 PUSH1 0x2 DUP6 DUP11 KECCAK256 ADD SSTORE PUSH1 0x60 DUP5 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x839 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 SWAP1 MSTORE DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x12 DUP4 MSTORE DUP4 DUP10 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x32 SWAP1 MSTORE DUP6 REVERT JUMPDEST DUP12 DUP5 MLOAD SWAP5 ADD SWAP4 DUP2 DUP5 ADD SSTORE ADD DUP8 SWAP1 PUSH2 0x649 JUMP JUMPDEST DUP2 DUP12 MSTORE DUP7 DUP4 DUP12 DUP14 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x735 JUMPI POP POP PUSH2 0x63E JUMP JUMPDEST DUP13 DUP2 SSTORE ADD DUP8 SWAP1 PUSH2 0x727 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 DUP5 MSTORE DUP5 DUP11 REVERT JUMPDEST SWAP1 POP PUSH1 0x44 SWAP3 DUP6 MLOAD SWAP3 PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP5 MSTORE CALLER SWAP1 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP11 SWAP2 ADD PUSH2 0x5AD JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE DUP6 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x859 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x84B JUMP JUMPDEST ISZERO PUSH2 0x874 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1C995C5D595CDD081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST LOG1 0xB4 0x22 SWAP7 BLOCKHASH PUSH22 0xDDC3B123E6400A9A5375994823FA5EAA4567770DCB58 LOG0 CODESIZE PUSH32 0x64736F6C63430008140033000000000000000000000000000000000000000000 ","sourceMap":"221:3537:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:28;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3545:59;221:3537;;;;;;;;3545:59;:::i;:::-;221:3537;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;221:3537:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;221:3537:30;;;;;;;;;;;;;;;;;862:53;;221:3537;862:53;;221:3537;862:53;;221:3537;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;221:3537:30;;;;;;;;;;;;;;;;794:61;221:3537;;794:61;;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:3537:30;;;;;;;;;;;;;;;;-1:-1:-1;;221:3537:30;;;;;;;;1035:27;;;;;;;221:3537;1035:27;;:::i;:::-;221:3537;;;;;;;;;;;;1035:27;;;221:3537;;;;;;;;;-1:-1:-1;;221:3537:30;;;;;;;;;2196:11;221:3537;;;2227:7;221:3537;2236:16;221:3537;;;;;;;;2196:107;;;;;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:107;;;;;;;;;;;;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2338:157;;221:3537;;;;;;2338:157;;;221:3537;;;;2338:157;;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:7;221:3537;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;221:3537:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2545:25;221:3537;;;;;;;;;;;;;;;;;;;;;;;2773:79;221:3537;;;;;;;;;;;;2603:152;;221:3537;;;;;;2603:152;;;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2236:16;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:79;221:3537;;;;;;;;;;-1:-1:-1;;;221:3537:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;221:3537:30;;;;;;;;;-1:-1:-1;;;221:3537:30;;;;;;;;2196:107;221:3537;;2196:107;;;;;;;;;;:::i;:::-;221:3537;;;2196:107;;;221:3537;;;;;2196:107;;;;;221:3537;;;;2196:107;;;;;;221:3537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6731:14:8;-1:-1:-1;;;;;221:3537:30;;-1:-1:-1;;6717:10:8;:28;;;6713:109;;221:3537:30;;;;;;;3003:59;221:3537;;;;;;;;3003:59;:::i;:::-;221:3537;;;;;;;;;;;;;;;;;;;;;;3125:34;221:3537;;;;;;;-1:-1:-1;;;221:3537:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3242:40;221:3537;;;3242:40;221:3537;;;;;;;;;;;;;;;;;;;;;3303:78;221:3537;;;;;;3242:40;221:3537;;;3186:34;221:3537;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3303:78;;;221:3537;;;-1:-1:-1;;;221:3537:30;;;;;;;;-1:-1:-1;;;221:3537:30;;;;;;;;;-1:-1:-1;;;;221:3537:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;221:3537:30;;;;;;;;6713:109:8;221:3537:30;;;;;;6762:53:8;;;;;;6717:10;6762:53;;;221:3537:30;;;;6762:53:8;221:3537:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;221:3537:30;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;221:3537:30;;;;-1:-1:-1;221:3537:30;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:3537:30;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;221:3537:30;;;;;;;;;;;;-1:-1:-1;;;221:3537:30;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"455000","executionCost":"infinite","totalCost":"infinite"},"external":{"getRequestStatus(uint256)":"infinite","lastRequestId()":"2435","owner()":"2373","rawFulfillRandomWords(uint256,uint256[])":"infinite","requestIds(uint256)":"6650","requestRandomWords(uint256,uint256,uint256)":"infinite","s_draw(uint256)":"6714","s_requests(uint256)":"4616"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"getRequestStatus(uint256)":"d8a4676f","lastRequestId()":"fc2a88c3","owner()":"8da5cb5b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestIds(uint256)":"8796ba8c","requestRandomWords(uint256,uint256,uint256)":"32601f64","s_draw(uint256)":"cbc1c021","s_requests(uint256)":"a168fa89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomValue\",\"type\":\"uint256\"}],\"name\":\"RandomValueUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomValue\",\"type\":\"uint256\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_titleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_drawNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalPlayersAvailable\",\"type\":\"uint256\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getRequestStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_randomValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_drawNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalPlayersAvailable\",\"type\":\"uint256\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"s_draw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"titleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"drawNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPlayersAvailable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"s_requests\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"randomValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HorizonVRF.sol\":\"HorizonVRF\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"contracts/HorizonVRF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.9 <=0.8.20;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\r\\n\\r\\ncontract HorizonVRF is VRFConsumerBaseV2{\\r\\n\\r\\n    event RequestSent(uint requestId, uint32 numWords, uint _titleId, uint _drawNumber, uint _totalPlayersAvailable);\\r\\n    event RequestFulfilled(uint256 requestId, uint256[] randomWords, uint randomValue);\\r\\n    event RandomValueUpdated(uint256 randomValue);\\r\\n\\r\\n    struct RequestStatus {\\r\\n        bool fulfilled;\\r\\n        bool exists;\\r\\n        uint256[] randomWords;\\r\\n        uint256 randomValue;\\r\\n    }\\r\\n    struct DrawInfos{\\r\\n        uint titleId;\\r\\n        uint drawNumber;\\r\\n        uint totalPlayersAvailable;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 requestId => RequestStatus) public s_requests;\\r\\n    mapping(uint256 requestId => DrawInfos) public s_draw;\\r\\n\\r\\n    //State variable\\r\\n    uint256 private randomValue;\\r\\n    address public owner;\\r\\n\\r\\n    // past requests Id.\\r\\n    uint256[] public requestIds;\\r\\n    uint256 public lastRequestId;\\r\\n    \\r\\n    VRFCoordinatorV2Interface COORDINATOR;\\r\\n    address vrfCoordinator;\\r\\n    bytes32 keyHash;\\r\\n    uint64 s_subscriptionId;\\r\\n    uint32 callbackGasLimit;\\r\\n    uint16 requestConfirmations;\\r\\n    uint32 numWords;\\r\\n\\r\\n    constructor(address _vrfCoordinator, //0x7a1BaC17Ccc5b313516C5E16fb24f7659aA5ebed\\r\\n                bytes32 _keyHash, //0x4b09e658ed251bcafeebbc69400383d49f344ace09b9576fe248bb02c003fe9f\\r\\n                uint64 _subscriptionId, //5413\\r\\n                uint32 _callbackGasLimit, //100000\\r\\n                uint16 _requestConfirmations, //3\\r\\n                uint32 _numWords //1\\r\\n               ) VRFConsumerBaseV2(_vrfCoordinator){\\r\\n        COORDINATOR = VRFCoordinatorV2Interface(_vrfCoordinator);\\r\\n        keyHash = _keyHash;\\r\\n        s_subscriptionId = _subscriptionId;\\r\\n        callbackGasLimit = _callbackGasLimit;\\r\\n        requestConfirmations = _requestConfirmations;\\r\\n        numWords = _numWords;\\r\\n    }\\r\\n\\r\\n    function requestRandomWords(uint _titleId, uint _drawNumber, uint256 _totalPlayersAvailable) external returns (uint256 requestId) {\\r\\n \\r\\n        requestId = COORDINATOR.requestRandomWords(keyHash, s_subscriptionId, requestConfirmations, callbackGasLimit, numWords);\\r\\n        s_requests[requestId] = RequestStatus({\\r\\n            randomWords: new uint256[](0),\\r\\n            exists: true,\\r\\n            fulfilled: false,\\r\\n            randomValue: 0\\r\\n        });\\r\\n\\r\\n        requestIds.push(requestId);\\r\\n        lastRequestId = requestId;\\r\\n\\r\\n        s_draw[requestId] = DrawInfos({\\r\\n            titleId: _titleId,\\r\\n            drawNumber: _drawNumber,\\r\\n            totalPlayersAvailable: _totalPlayersAvailable\\r\\n        });\\r\\n\\r\\n        emit RequestSent(requestId, numWords, _titleId, _drawNumber, _totalPlayersAvailable);\\r\\n        return requestId;\\r\\n    }\\r\\n\\r\\n    function fulfillRandomWords(uint256 _requestId, uint256[] memory _randomWords) internal override {\\r\\n        require(s_requests[_requestId].exists, \\\"request not found\\\");\\r\\n\\r\\n        s_requests[_requestId].fulfilled = true;\\r\\n        s_requests[_requestId].randomWords = _randomWords ;\\r\\n        s_requests[_requestId].randomValue = (_randomWords[0] % s_draw[_requestId].totalPlayersAvailable)+1;\\r\\n\\r\\n        emit RequestFulfilled(_requestId, _randomWords, s_requests[_requestId].randomValue);\\r\\n    }\\r\\n\\r\\n    function getRequestStatus(uint256 _requestId) external view returns (bool fulfilled, uint256[] memory randomWords, uint256 _randomValue) {\\r\\n        require(s_requests[_requestId].exists, \\\"request not found\\\");\\r\\n        RequestStatus memory request = s_requests[_requestId];\\r\\n        return (request.fulfilled, request.randomWords, request.randomValue);\\r\\n    }\\r\\n}\",\"keccak256\":\"0xdff14c91536037929319ba9586334f304d52a065239d012e93701d9c40fb2aff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7803,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"s_requests","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_struct(RequestStatus)7791_storage)"},{"astId":7808,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"s_draw","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_struct(DrawInfos)7798_storage)"},{"astId":7810,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"randomValue","offset":0,"slot":"2","type":"t_uint256"},{"astId":7812,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"owner","offset":0,"slot":"3","type":"t_address"},{"astId":7815,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"requestIds","offset":0,"slot":"4","type":"t_array(t_uint256)dyn_storage"},{"astId":7817,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"lastRequestId","offset":0,"slot":"5","type":"t_uint256"},{"astId":7820,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"COORDINATOR","offset":0,"slot":"6","type":"t_contract(VRFCoordinatorV2Interface)427"},{"astId":7822,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"vrfCoordinator","offset":0,"slot":"7","type":"t_address"},{"astId":7824,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"keyHash","offset":0,"slot":"8","type":"t_bytes32"},{"astId":7826,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"s_subscriptionId","offset":0,"slot":"9","type":"t_uint64"},{"astId":7828,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"callbackGasLimit","offset":8,"slot":"9","type":"t_uint32"},{"astId":7830,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"requestConfirmations","offset":12,"slot":"9","type":"t_uint16"},{"astId":7832,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"numWords","offset":14,"slot":"9","type":"t_uint32"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(VRFCoordinatorV2Interface)427":{"encoding":"inplace","label":"contract VRFCoordinatorV2Interface","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(DrawInfos)7798_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct HorizonVRF.DrawInfos)","numberOfBytes":"32","value":"t_struct(DrawInfos)7798_storage"},"t_mapping(t_uint256,t_struct(RequestStatus)7791_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct HorizonVRF.RequestStatus)","numberOfBytes":"32","value":"t_struct(RequestStatus)7791_storage"},"t_struct(DrawInfos)7798_storage":{"encoding":"inplace","label":"struct HorizonVRF.DrawInfos","members":[{"astId":7793,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"titleId","offset":0,"slot":"0","type":"t_uint256"},{"astId":7795,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"drawNumber","offset":0,"slot":"1","type":"t_uint256"},{"astId":7797,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"totalPlayersAvailable","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(RequestStatus)7791_storage":{"encoding":"inplace","label":"struct HorizonVRF.RequestStatus","members":[{"astId":7783,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"fulfilled","offset":0,"slot":"0","type":"t_bool"},{"astId":7785,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"exists","offset":1,"slot":"0","type":"t_bool"},{"astId":7788,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"randomWords","offset":0,"slot":"1","type":"t_array(t_uint256)dyn_storage"},{"astId":7790,"contract":"contracts/HorizonVRF.sol:HorizonVRF","label":"randomValue","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}